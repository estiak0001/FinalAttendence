//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GCTL_ERP_DB_MVC_06_27Entities : DbContext
    {
        public GCTL_ERP_DB_MVC_06_27Entities()
            : base("name=GCTL_ERP_DB_MVC_06_27Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<Acc_Duration_Type> Acc_Duration_Type { get; set; }
        public virtual DbSet<Core_AccessCode2> Core_AccessCode2 { get; set; }
        public virtual DbSet<Core_Company> Core_Company { get; set; }
        public virtual DbSet<Core_Favorate> Core_Favorate { get; set; }
        public virtual DbSet<Core_MenuTab2> Core_MenuTab2 { get; set; }
        public virtual DbSet<Core_Notice> Core_Notice { get; set; }
        public virtual DbSet<Core_Notice_History> Core_Notice_History { get; set; }
        public virtual DbSet<Core_PushNotificationDeviceSetup> Core_PushNotificationDeviceSetup { get; set; }
        public virtual DbSet<Core_UserInfo> Core_UserInfo { get; set; }
        public virtual DbSet<Core_UserInfo2> Core_UserInfo2 { get; set; }
        public virtual DbSet<Core_UserLog> Core_UserLog { get; set; }
        public virtual DbSet<EventTable> EventTable { get; set; }
        public virtual DbSet<HOLIDAYS> HOLIDAYS { get; set; }
        public virtual DbSet<HRM_ATD_AttendanceType> HRM_ATD_AttendanceType { get; set; }
        public virtual DbSet<HRM_ATD_CompanyWeekEnd> HRM_ATD_CompanyWeekEnd { get; set; }
        public virtual DbSet<HRM_ATD_EmployeeWeekEnd> HRM_ATD_EmployeeWeekEnd { get; set; }
        public virtual DbSet<HRM_ATD_Holiday> HRM_ATD_Holiday { get; set; }
        public virtual DbSet<HRM_ATD_HolidayType> HRM_ATD_HolidayType { get; set; }
        public virtual DbSet<HRM_ATD_LeaveType> HRM_ATD_LeaveType { get; set; }
        public virtual DbSet<HRM_ATD_Manual> HRM_ATD_Manual { get; set; }
        public virtual DbSet<HRM_ATD_Shift> HRM_ATD_Shift { get; set; }
        public virtual DbSet<HRM_Def_Department> HRM_Def_Department { get; set; }
        public virtual DbSet<HRM_Def_Designation> HRM_Def_Designation { get; set; }
        public virtual DbSet<HRM_Def_ShiftType> HRM_Def_ShiftType { get; set; }
        public virtual DbSet<HRM_Employee> HRM_Employee { get; set; }
        public virtual DbSet<HRM_Employee_Test> HRM_Employee_Test { get; set; }
        public virtual DbSet<HRM_EmployeeContactInfo> HRM_EmployeeContactInfo { get; set; }
        public virtual DbSet<HRM_EmployeeOfficialInfo> HRM_EmployeeOfficialInfo { get; set; }
        public virtual DbSet<HRM_EmployeeOfficialInfo_test> HRM_EmployeeOfficialInfo_test { get; set; }
        public virtual DbSet<HRM_EmployeeReferenceInfo> HRM_EmployeeReferenceInfo { get; set; }
        public virtual DbSet<HRM_LeaveApplicationDays> HRM_LeaveApplicationDays { get; set; }
        public virtual DbSet<HRM_LeaveApplicationEntry> HRM_LeaveApplicationEntry { get; set; }
        public virtual DbSet<HRM_RosterScheduleEntry> HRM_RosterScheduleEntry { get; set; }
        public virtual DbSet<Sales_DeliveryLocation> Sales_DeliveryLocation { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Acc_Months> Acc_Months { get; set; }
        public virtual DbSet<Acc_Period> Acc_Period { get; set; }
        public virtual DbSet<Acc_TrType> Acc_TrType { get; set; }
        public virtual DbSet<Att_Tem_DailyAbsentEmps> Att_Tem_DailyAbsentEmps { get; set; }
        public virtual DbSet<Att_Tem_DailyInOut> Att_Tem_DailyInOut { get; set; }
        public virtual DbSet<Att_Tem_DailyInOut_it> Att_Tem_DailyInOut_it { get; set; }
        public virtual DbSet<Att_Tem_DailyInOut2> Att_Tem_DailyInOut2 { get; set; }
        public virtual DbSet<Att_Tem_DailyLate> Att_Tem_DailyLate { get; set; }
        public virtual DbSet<Att_Tem_DailyPresent> Att_Tem_DailyPresent { get; set; }
        public virtual DbSet<Att_Tem_DASR> Att_Tem_DASR { get; set; }
        public virtual DbSet<Att_Tem_DASR_2> Att_Tem_DASR_2 { get; set; }
        public virtual DbSet<Att_Tem_SOAtt> Att_Tem_SOAtt { get; set; }
        public virtual DbSet<AttAbsentData> AttAbsentData { get; set; }
        public virtual DbSet<Attd_Temp_DailyInOut_Voyager> Attd_Temp_DailyInOut_Voyager { get; set; }
        public virtual DbSet<AttDetails> AttDetails { get; set; }
        public virtual DbSet<AttDetails_2> AttDetails_2 { get; set; }
        public virtual DbSet<AttHolidayData> AttHolidayData { get; set; }
        public virtual DbSet<AttHolidayData2> AttHolidayData2 { get; set; }
        public virtual DbSet<AttInOutData> AttInOutData { get; set; }
        public virtual DbSet<AttInOutData_1> AttInOutData_1 { get; set; }
        public virtual DbSet<AttLeaveData> AttLeaveData { get; set; }
        public virtual DbSet<AttMainData> AttMainData { get; set; }
        public virtual DbSet<AttWeekenData> AttWeekenData { get; set; }
        public virtual DbSet<AttWeekenData2> AttWeekenData2 { get; set; }
        public virtual DbSet<CA_Def_Country> CA_Def_Country { get; set; }
        public virtual DbSet<CA_Def_Currency> CA_Def_Currency { get; set; }
        public virtual DbSet<Core_AccessCode> Core_AccessCode { get; set; }
        public virtual DbSet<Core_BankAccountInformation> Core_BankAccountInformation { get; set; }
        public virtual DbSet<Core_Branch> Core_Branch { get; set; }
        public virtual DbSet<Core_Company_Group> Core_Company_Group { get; set; }
        public virtual DbSet<Core_Country> Core_Country { get; set; }
        public virtual DbSet<Core_MenuTab> Core_MenuTab { get; set; }
        public virtual DbSet<Core_PeriodInfo> Core_PeriodInfo { get; set; }
        public virtual DbSet<Core_UserInfo_History> Core_UserInfo_History { get; set; }
        public virtual DbSet<HRM_AssignedProjectMembers> HRM_AssignedProjectMembers { get; set; }
        public virtual DbSet<HRM_ATD_BulkEntry> HRM_ATD_BulkEntry { get; set; }
        public virtual DbSet<HRM_ATD_CompanyLeaveSetup> HRM_ATD_CompanyLeaveSetup { get; set; }
        public virtual DbSet<HRM_ATD_CompanyWeekEnd1> HRM_ATD_CompanyWeekEnd1 { get; set; }
        public virtual DbSet<HRM_ATD_EmpAttendanceSetup> HRM_ATD_EmpAttendanceSetup { get; set; }
        public virtual DbSet<HRM_ATD_EmployeeLeaveSetup> HRM_ATD_EmployeeLeaveSetup { get; set; }
        public virtual DbSet<HRM_ATD_LeaveWithPay> HRM_ATD_LeaveWithPay { get; set; }
        public virtual DbSet<HRM_ATD_MachineData> HRM_ATD_MachineData { get; set; }
        public virtual DbSet<HRM_ATD_ManualLateComment> HRM_ATD_ManualLateComment { get; set; }
        public virtual DbSet<HRM_ATD_WorkingDay> HRM_ATD_WorkingDay { get; set; }
        public virtual DbSet<HRM_Att_Temp_DASR> HRM_Att_Temp_DASR { get; set; }
        public virtual DbSet<HRM_Attd_InOutData1> HRM_Attd_InOutData1 { get; set; }
        public virtual DbSet<HRM_Attd_JobCard_MAD> HRM_Attd_JobCard_MAD { get; set; }
        public virtual DbSet<HRM_Attd_JobCard_WeeklyHoliday> HRM_Attd_JobCard_WeeklyHoliday { get; set; }
        public virtual DbSet<HRM_Attd_JobCardMonthlyData> HRM_Attd_JobCardMonthlyData { get; set; }
        public virtual DbSet<HRM_Attd_ProcessAttd_Log> HRM_Attd_ProcessAttd_Log { get; set; }
        public virtual DbSet<HRM_Attd_ProcessAttdLog> HRM_Attd_ProcessAttdLog { get; set; }
        public virtual DbSet<HRM_Attd_Tem_DSRM> HRM_Attd_Tem_DSRM { get; set; }
        public virtual DbSet<HRM_Attd_Tem_DSRM2> HRM_Attd_Tem_DSRM2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_AllData> HRM_Attd_Temp_AllData { get; set; }
        public virtual DbSet<HRM_Attd_Temp_AllData_JC> HRM_Attd_Temp_AllData_JC { get; set; }
        public virtual DbSet<HRM_Attd_Temp_AllData_Monthly> HRM_Attd_Temp_AllData_Monthly { get; set; }
        public virtual DbSet<HRM_Attd_Temp_CombineDAndMData> HRM_Attd_Temp_CombineDAndMData { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br> HRM_Attd_Temp_DailyInOut_Br { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br_2> HRM_Attd_Temp_DailyInOut_Br_2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br_3A> HRM_Attd_Temp_DailyInOut_Br_3A { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br_Zo> HRM_Attd_Temp_DailyInOut_Br_Zo { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br_Zo_2> HRM_Attd_Temp_DailyInOut_Br_Zo_2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyInOut_Br_Zo_3A> HRM_Attd_Temp_DailyInOut_Br_Zo_3A { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DailyProcess> HRM_Attd_Temp_DailyProcess { get; set; }
        public virtual DbSet<HRM_Attd_Temp_DASR_Email> HRM_Attd_Temp_DASR_Email { get; set; }
        public virtual DbSet<HRM_Attd_Temp_ExtraWorkedDay2> HRM_Attd_Temp_ExtraWorkedDay2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_InOutData> HRM_Attd_Temp_InOutData { get; set; }
        public virtual DbSet<HRM_Attd_Temp_InOutData_Ab> HRM_Attd_Temp_InOutData_Ab { get; set; }
        public virtual DbSet<HRM_Attd_Temp_InOutData_Monthly> HRM_Attd_Temp_InOutData_Monthly { get; set; }
        public virtual DbSet<HRM_Attd_Temp_JCInitialData> HRM_Attd_Temp_JCInitialData { get; set; }
        public virtual DbSet<HRM_Attd_Temp_JobCard> HRM_Attd_Temp_JobCard { get; set; }
        public virtual DbSet<HRM_Attd_Temp_JobCard_2> HRM_Attd_Temp_JobCard_2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_JobCard_3> HRM_Attd_Temp_JobCard_3 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_MachineAndManualData> HRM_Attd_Temp_MachineAndManualData { get; set; }
        public virtual DbSet<HRM_Attd_Temp_MaxAndMinData_DP> HRM_Attd_Temp_MaxAndMinData_DP { get; set; }
        public virtual DbSet<HRM_Attd_Temp_Present_1> HRM_Attd_Temp_Present_1 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_Present_1st> HRM_Attd_Temp_Present_1st { get; set; }
        public virtual DbSet<HRM_Attd_Temp_SelectData_PLA> HRM_Attd_Temp_SelectData_PLA { get; set; }
        public virtual DbSet<HRM_Attd_Temp_SelectData_PLA2> HRM_Attd_Temp_SelectData_PLA2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_TotalOT> HRM_Attd_Temp_TotalOT { get; set; }
        public virtual DbSet<HRM_Attd_Temp_TotalOT2> HRM_Attd_Temp_TotalOT2 { get; set; }
        public virtual DbSet<HRM_Attd_Temp_TotalOT3> HRM_Attd_Temp_TotalOT3 { get; set; }
        public virtual DbSet<HRM_Attd_TempAverageOfHours> HRM_Attd_TempAverageOfHours { get; set; }
        public virtual DbSet<HRM_Attd_TempAverageOfHours_Dp_Se> HRM_Attd_TempAverageOfHours_Dp_Se { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalBetweenInOutTime_2> HRM_Attd_TimeCalBetweenInOutTime_2 { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation> HRM_Attd_TimeCalculation { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation_ByEmp> HRM_Attd_TimeCalculation_ByEmp { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation_ByEmp_Dp_Se> HRM_Attd_TimeCalculation_ByEmp_Dp_Se { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation_ByEmp2> HRM_Attd_TimeCalculation_ByEmp2 { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation_Monthly> HRM_Attd_TimeCalculation_Monthly { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2> HRM_Attd_TimeCalculation2 { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2_DP_Se> HRM_Attd_TimeCalculation2_DP_Se { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2_TBSC> HRM_Attd_TimeCalculation2_TBSC { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2_TBSC_Dp_Se> HRM_Attd_TimeCalculation2_TBSC_Dp_Se { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2_TBSC_F> HRM_Attd_TimeCalculation2_TBSC_F { get; set; }
        public virtual DbSet<HRM_Attd_TimeCalculation2_TBSC_F2> HRM_Attd_TimeCalculation2_TBSC_F2 { get; set; }
        public virtual DbSet<HRM_Attendance> HRM_Attendance { get; set; }
        public virtual DbSet<HRM_CustomerCatagory> HRM_CustomerCatagory { get; set; }
        public virtual DbSet<HRM_CustomerType> HRM_CustomerType { get; set; }
        public virtual DbSet<HRM_Def_BankAndNomineeInfo> HRM_Def_BankAndNomineeInfo { get; set; }
        public virtual DbSet<HRM_Def_BloodGroup> HRM_Def_BloodGroup { get; set; }
        public virtual DbSet<HRM_Def_BoardCountryName> HRM_Def_BoardCountryName { get; set; }
        public virtual DbSet<HRM_Def_CompanyInfo> HRM_Def_CompanyInfo { get; set; }
        public virtual DbSet<HRM_Def_CourseTitle> HRM_Def_CourseTitle { get; set; }
        public virtual DbSet<HRM_Def_Degree> HRM_Def_Degree { get; set; }
        public virtual DbSet<HRM_Def_District> HRM_Def_District { get; set; }
        public virtual DbSet<HRM_Def_Division> HRM_Def_Division { get; set; }
        public virtual DbSet<HRM_Def_DivisionGrade> HRM_Def_DivisionGrade { get; set; }
        public virtual DbSet<HRM_Def_Duration_Type> HRM_Def_Duration_Type { get; set; }
        public virtual DbSet<HRM_Def_EmployeeException> HRM_Def_EmployeeException { get; set; }
        public virtual DbSet<HRM_Def_EmployeeStatus> HRM_Def_EmployeeStatus { get; set; }
        public virtual DbSet<HRM_Def_EmpType> HRM_Def_EmpType { get; set; }
        public virtual DbSet<HRM_Def_ExamGroupInfo> HRM_Def_ExamGroupInfo { get; set; }
        public virtual DbSet<HRM_Def_ExamTitle> HRM_Def_ExamTitle { get; set; }
        public virtual DbSet<HRM_Def_Grade> HRM_Def_Grade { get; set; }
        public virtual DbSet<HRM_Def_IdSetup> HRM_Def_IdSetup { get; set; }
        public virtual DbSet<HRM_Def_Institute> HRM_Def_Institute { get; set; }
        public virtual DbSet<HRM_Def_LanguageInfo> HRM_Def_LanguageInfo { get; set; }
        public virtual DbSet<HRM_Def_Line> HRM_Def_Line { get; set; }
        public virtual DbSet<HRM_Def_Location> HRM_Def_Location { get; set; }
        public virtual DbSet<HRM_Def_MaritalStatus> HRM_Def_MaritalStatus { get; set; }
        public virtual DbSet<HRM_Def_Membership> HRM_Def_Membership { get; set; }
        public virtual DbSet<HRM_Def_Nationality> HRM_Def_Nationality { get; set; }
        public virtual DbSet<HRM_Def_Occupation> HRM_Def_Occupation { get; set; }
        public virtual DbSet<HRM_Def_ProjectType> HRM_Def_ProjectType { get; set; }
        public virtual DbSet<HRM_Def_Relationship> HRM_Def_Relationship { get; set; }
        public virtual DbSet<HRM_Def_Religion> HRM_Def_Religion { get; set; }
        public virtual DbSet<HRM_Def_Section> HRM_Def_Section { get; set; }
        public virtual DbSet<HRM_Def_SeparationType> HRM_Def_SeparationType { get; set; }
        public virtual DbSet<HRM_Def_SetupName> HRM_Def_SetupName { get; set; }
        public virtual DbSet<HRM_Def_Sex> HRM_Def_Sex { get; set; }
        public virtual DbSet<HRM_Def_TrainingTitle> HRM_Def_TrainingTitle { get; set; }
        public virtual DbSet<HRM_Def_Working_Type> HRM_Def_Working_Type { get; set; }
        public virtual DbSet<HRM_DestinationInfo> HRM_DestinationInfo { get; set; }
        public virtual DbSet<HRM_EIS_Def_CurrencyType> HRM_EIS_Def_CurrencyType { get; set; }
        public virtual DbSet<HRM_EIS_Def_DisbursementMethod> HRM_EIS_Def_DisbursementMethod { get; set; }
        public virtual DbSet<HRM_EIS_Def_EmploymentNature> HRM_EIS_Def_EmploymentNature { get; set; }
        public virtual DbSet<HRM_EIS_Reposition> HRM_EIS_Reposition { get; set; }
        public virtual DbSet<HRM_EmpDigitalSignature> HRM_EmpDigitalSignature { get; set; }
        public virtual DbSet<HRM_EmployeeAdditionalInfo> HRM_EmployeeAdditionalInfo { get; set; }
        public virtual DbSet<HRM_EmployeeCashRewardEntry> HRM_EmployeeCashRewardEntry { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfo> HRM_EmployeeDailyMovementInfo { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfoDetailsExistingCustomer> HRM_EmployeeDailyMovementInfoDetailsExistingCustomer { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfoDetailsExistingCustomerTemp> HRM_EmployeeDailyMovementInfoDetailsExistingCustomerTemp { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfoDetailsOther> HRM_EmployeeDailyMovementInfoDetailsOther { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfoDetailsOtherTemp> HRM_EmployeeDailyMovementInfoDetailsOtherTemp { get; set; }
        public virtual DbSet<HRM_EmployeeDailyMovementInfoNew> HRM_EmployeeDailyMovementInfoNew { get; set; }
        public virtual DbSet<HRM_EmployeeDocumentInfo> HRM_EmployeeDocumentInfo { get; set; }
        public virtual DbSet<HRM_EmployeeEducation> HRM_EmployeeEducation { get; set; }
        public virtual DbSet<HRM_EmployeeExp> HRM_EmployeeExp { get; set; }
        public virtual DbSet<HRM_EmployeeFamily> HRM_EmployeeFamily { get; set; }
        public virtual DbSet<HRM_EmployeeFineEntry> HRM_EmployeeFineEntry { get; set; }
        public virtual DbSet<HRM_EmployeeHolidayDeclaration> HRM_EmployeeHolidayDeclaration { get; set; }
        public virtual DbSet<HRM_EmployeeIdConfiguration> HRM_EmployeeIdConfiguration { get; set; }
        public virtual DbSet<HRM_EmployeeLetterOfAppreciation> HRM_EmployeeLetterOfAppreciation { get; set; }
        public virtual DbSet<HRM_EmployeeLetterOfWarning> HRM_EmployeeLetterOfWarning { get; set; }
        public virtual DbSet<HRM_EmployeeMedicalInfo> HRM_EmployeeMedicalInfo { get; set; }
        public virtual DbSet<HRM_EmployeeMembership> HRM_EmployeeMembership { get; set; }
        public virtual DbSet<HRM_EmployeeMonthlyMovementInfo> HRM_EmployeeMonthlyMovementInfo { get; set; }
        public virtual DbSet<HRM_EmployeeMonthlyMovementInfoDetailsExistingCustomer> HRM_EmployeeMonthlyMovementInfoDetailsExistingCustomer { get; set; }
        public virtual DbSet<HRM_EmployeeMonthlyMovementInfoDetailsExistingCustomerTemp> HRM_EmployeeMonthlyMovementInfoDetailsExistingCustomerTemp { get; set; }
        public virtual DbSet<HRM_EmployeeMonthlyMovementInfoDetailsOther> HRM_EmployeeMonthlyMovementInfoDetailsOther { get; set; }
        public virtual DbSet<HRM_EmployeeMonthlyMovementInfoDetailsOtherTemp> HRM_EmployeeMonthlyMovementInfoDetailsOtherTemp { get; set; }
        public virtual DbSet<HRM_EmployeeNomineeInfo> HRM_EmployeeNomineeInfo { get; set; }
        public virtual DbSet<HRM_EmployeePhoto> HRM_EmployeePhoto { get; set; }
        public virtual DbSet<HRM_EmployeeQualification> HRM_EmployeeQualification { get; set; }
        public virtual DbSet<HRM_EmployeeRecomdedTrainingInfo> HRM_EmployeeRecomdedTrainingInfo { get; set; }
        public virtual DbSet<HRM_EmployeeRef> HRM_EmployeeRef { get; set; }
        public virtual DbSet<HRM_EmployeeRewardType> HRM_EmployeeRewardType { get; set; }
        public virtual DbSet<HRM_EmployeeTraining> HRM_EmployeeTraining { get; set; }
        public virtual DbSet<HRM_EmployeeWeekendDeclaration> HRM_EmployeeWeekendDeclaration { get; set; }
        public virtual DbSet<HRM_ExtraWorkingDayDeclaration> HRM_ExtraWorkingDayDeclaration { get; set; }
        public virtual DbSet<HRM_Fine> HRM_Fine { get; set; }
        public virtual DbSet<HRM_HospitalizationInfo> HRM_HospitalizationInfo { get; set; }
        public virtual DbSet<HRM_Increment> HRM_Increment { get; set; }
        public virtual DbSet<HRM_Job_Responsibilities> HRM_Job_Responsibilities { get; set; }
        public virtual DbSet<HRM_JobResponsibilities> HRM_JobResponsibilities { get; set; }
        public virtual DbSet<HRM_LeaveWithPay> HRM_LeaveWithPay { get; set; }
        public virtual DbSet<HRM_ManualTimeScheduleEntry> HRM_ManualTimeScheduleEntry { get; set; }
        public virtual DbSet<HRM_Medical_Benefit> HRM_Medical_Benefit { get; set; }
        public virtual DbSet<HRM_Month> HRM_Month { get; set; }
        public virtual DbSet<HRM_MovementOtherType> HRM_MovementOtherType { get; set; }
        public virtual DbSet<HRM_NomineePhoto> HRM_NomineePhoto { get; set; }
        public virtual DbSet<HRM_NomineeSignature> HRM_NomineeSignature { get; set; }
        public virtual DbSet<HRM_NotifyTypeInfo> HRM_NotifyTypeInfo { get; set; }
        public virtual DbSet<HRM_PAY_AbsentDeduction> HRM_PAY_AbsentDeduction { get; set; }
        public virtual DbSet<HRM_PAY_AdvancePay> HRM_PAY_AdvancePay { get; set; }
        public virtual DbSet<HRM_Pay_BonusProcess> HRM_Pay_BonusProcess { get; set; }
        public virtual DbSet<HRM_PAY_CalculationType> HRM_PAY_CalculationType { get; set; }
        public virtual DbSet<HRM_PAY_GradeName> HRM_PAY_GradeName { get; set; }
        public virtual DbSet<HRM_PAY_GradePayScale> HRM_PAY_GradePayScale { get; set; }
        public virtual DbSet<HRM_PAY_GradeRule> HRM_PAY_GradeRule { get; set; }
        public virtual DbSet<HRM_PAY_LateDeduction> HRM_PAY_LateDeduction { get; set; }
        public virtual DbSet<HRM_PAY_Month> HRM_PAY_Month { get; set; }
        public virtual DbSet<HRM_PAY_OTRuleSetup> HRM_PAY_OTRuleSetup { get; set; }
        public virtual DbSet<HRM_PAY_PayHeadName> HRM_PAY_PayHeadName { get; set; }
        public virtual DbSet<HRM_PAY_Promotion> HRM_PAY_Promotion { get; set; }
        public virtual DbSet<HRM_PAY_Rules> HRM_PAY_Rules { get; set; }
        public virtual DbSet<HRM_PAY_SalaryHead> HRM_PAY_SalaryHead { get; set; }
        public virtual DbSet<HRM_PAY_SalaryInfoDetails> HRM_PAY_SalaryInfoDetails { get; set; }
        public virtual DbSet<HRM_PAY_SalaryInformation> HRM_PAY_SalaryInformation { get; set; }
        public virtual DbSet<HRM_PAY_SalaryOnHold> HRM_PAY_SalaryOnHold { get; set; }
        public virtual DbSet<HRM_Pay_Temp__SST_1> HRM_Pay_Temp__SST_1 { get; set; }
        public virtual DbSet<HRM_Pay_Temp__SST_2> HRM_Pay_Temp__SST_2 { get; set; }
        public virtual DbSet<HRM_Pay_Temp__SST_3> HRM_Pay_Temp__SST_3 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_Bonus> HRM_Pay_Temp_Bonus { get; set; }
        public virtual DbSet<HRM_Pay_Temp_Bonus2> HRM_Pay_Temp_Bonus2 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_Bonus3> HRM_Pay_Temp_Bonus3 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_MonthlyReport_NG_5> HRM_Pay_Temp_MonthlyReport_NG_5 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_OvertimeSheet> HRM_Pay_Temp_OvertimeSheet { get; set; }
        public virtual DbSet<HRM_Pay_Temp_OvertimeSheet2> HRM_Pay_Temp_OvertimeSheet2 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData> HRM_Pay_Temp_SSInitialData { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_1> HRM_Pay_Temp_SSInitialData_1 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_2> HRM_Pay_Temp_SSInitialData_2 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_3> HRM_Pay_Temp_SSInitialData_3 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_4> HRM_Pay_Temp_SSInitialData_4 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_5> HRM_Pay_Temp_SSInitialData_5 { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_EX> HRM_Pay_Temp_SSInitialData_EX { get; set; }
        public virtual DbSet<HRM_Pay_Temp_SSInitialData_Out> HRM_Pay_Temp_SSInitialData_Out { get; set; }
        public virtual DbSet<HRM_PAY_Transfer> HRM_PAY_Transfer { get; set; }
        public virtual DbSet<HRM_ProjectModule> HRM_ProjectModule { get; set; }
        public virtual DbSet<HRM_ProjectPlan> HRM_ProjectPlan { get; set; }
        public virtual DbSet<HRM_ReAppointment> HRM_ReAppointment { get; set; }
        public virtual DbSet<HRM_ReleaseInfo> HRM_ReleaseInfo { get; set; }
        public virtual DbSet<HRM_SalaryScale> HRM_SalaryScale { get; set; }
        public virtual DbSet<HRM_SendEmailEmployeeInfo> HRM_SendEmailEmployeeInfo { get; set; }
        public virtual DbSet<HRM_Separation> HRM_Separation { get; set; }
        public virtual DbSet<HRM_ShortLeaveHoursMonthWise> HRM_ShortLeaveHoursMonthWise { get; set; }
        public virtual DbSet<HRM_ShortLeaveTime> HRM_ShortLeaveTime { get; set; }
        public virtual DbSet<HRM_ShortLeaveTime2> HRM_ShortLeaveTime2 { get; set; }
        public virtual DbSet<HRM_StockType> HRM_StockType { get; set; }
        public virtual DbSet<HRM_Suspension> HRM_Suspension { get; set; }
        public virtual DbSet<HRM_TecnicalSkillType> HRM_TecnicalSkillType { get; set; }
        public virtual DbSet<HRM_Tem_IDCardGenerate> HRM_Tem_IDCardGenerate { get; set; }
        public virtual DbSet<HRM_Temp_AttendanceInfoDashboard> HRM_Temp_AttendanceInfoDashboard { get; set; }
        public virtual DbSet<HRM_Temp_AttendanceInfoDashboard_DAS> HRM_Temp_AttendanceInfoDashboard_DAS { get; set; }
        public virtual DbSet<HRM_Temp_AttendanceInfoDashboard2> HRM_Temp_AttendanceInfoDashboard2 { get; set; }
        public virtual DbSet<HRM_Temp_AttendanceInfoDashboard2_DAS> HRM_Temp_AttendanceInfoDashboard2_DAS { get; set; }
        public virtual DbSet<HRM_Temp_JC_OT> HRM_Temp_JC_OT { get; set; }
        public virtual DbSet<HRM_Temp_JobCard> HRM_Temp_JobCard { get; set; }
        public virtual DbSet<HRM_Temp_JobCard_2> HRM_Temp_JobCard_2 { get; set; }
        public virtual DbSet<HRM_Temp_JobCard_3> HRM_Temp_JobCard_3 { get; set; }
        public virtual DbSet<HRM_Temp_Overtime_Voyager> HRM_Temp_Overtime_Voyager { get; set; }
        public virtual DbSet<HRM_TempImage> HRM_TempImage { get; set; }
        public virtual DbSet<HRM_TermsAndCondition> HRM_TermsAndCondition { get; set; }
        public virtual DbSet<HRM_TrainingInfo> HRM_TrainingInfo { get; set; }
        public virtual DbSet<HRM_WarningLetter> HRM_WarningLetter { get; set; }
        public virtual DbSet<HRM_WarrentyType> HRM_WarrentyType { get; set; }
        public virtual DbSet<HRM_WorkingDayDeclaredEmployeeInfo> HRM_WorkingDayDeclaredEmployeeInfo { get; set; }
        public virtual DbSet<HRM_WorkingDaySectionWiseDec> HRM_WorkingDaySectionWiseDec { get; set; }
        public virtual DbSet<Inv_Def_CompanyFor> Inv_Def_CompanyFor { get; set; }
        public virtual DbSet<Inv_Def_CustomerSector> Inv_Def_CustomerSector { get; set; }
        public virtual DbSet<Inv_Def_Gatepass> Inv_Def_Gatepass { get; set; }
        public virtual DbSet<Inv_Def_GatepassDetails> Inv_Def_GatepassDetails { get; set; }
        public virtual DbSet<Inv_Def_ItemType> Inv_Def_ItemType { get; set; }
        public virtual DbSet<Inv_Def_PortInfo> Inv_Def_PortInfo { get; set; }
        public virtual DbSet<Inv_Def_PurchaseType> Inv_Def_PurchaseType { get; set; }
        public virtual DbSet<Inv_Def_SalesType> Inv_Def_SalesType { get; set; }
        public virtual DbSet<Inv_Def_SupplierType> Inv_Def_SupplierType { get; set; }
        public virtual DbSet<MonthlyAttData> MonthlyAttData { get; set; }
        public virtual DbSet<MonthlyEmpInfoData> MonthlyEmpInfoData { get; set; }
        public virtual DbSet<Pos_TermsCondition> Pos_TermsCondition { get; set; }
        public virtual DbSet<RMG_Prod_Def_DeliveryMethod> RMG_Prod_Def_DeliveryMethod { get; set; }
        public virtual DbSet<RMG_Prod_Def_Inv_SubItem2> RMG_Prod_Def_Inv_SubItem2 { get; set; }
        public virtual DbSet<RMG_Prod_Def_NegativeFormat> RMG_Prod_Def_NegativeFormat { get; set; }
        public virtual DbSet<RMG_Prod_Def_UnitType> RMG_Prod_Def_UnitType { get; set; }
        public virtual DbSet<RMG_TermsCondition> RMG_TermsCondition { get; set; }
        public virtual DbSet<RosterScheduleShift> RosterScheduleShift { get; set; }
        public virtual DbSet<Sales_Def_BankBranchInfo> Sales_Def_BankBranchInfo { get; set; }
        public virtual DbSet<SALES_Def_BankInfo> SALES_Def_BankInfo { get; set; }
        public virtual DbSet<Sales_Def_PaymentMode> Sales_Def_PaymentMode { get; set; }
        public virtual DbSet<Sales_Def_PaymentTerms> Sales_Def_PaymentTerms { get; set; }
        public virtual DbSet<Sales_Def_PaymentType> Sales_Def_PaymentType { get; set; }
        public virtual DbSet<Sales_SupplierBankAccount> Sales_SupplierBankAccount { get; set; }
        public virtual DbSet<Sales_SupplierBankAccountTemp> Sales_SupplierBankAccountTemp { get; set; }
        public virtual DbSet<tbl_ReportFormat> tbl_ReportFormat { get; set; }
        public virtual DbSet<Tem_AttdSummary> Tem_AttdSummary { get; set; }
        public virtual DbSet<Tem_AttdSummary2> Tem_AttdSummary2 { get; set; }
        public virtual DbSet<Temp_HRM_DiagnosticTestDetails> Temp_HRM_DiagnosticTestDetails { get; set; }
        public virtual DbSet<Temp_T_DashboardTimeSum> Temp_T_DashboardTimeSum { get; set; }
        public virtual DbSet<Temp_T_DashboardTimeSum_LS> Temp_T_DashboardTimeSum_LS { get; set; }
        public virtual DbSet<Temtb_Att_JobCard> Temtb_Att_JobCard { get; set; }
        public virtual DbSet<Temtb_Att_JobCard_2> Temtb_Att_JobCard_2 { get; set; }
        public virtual DbSet<Temtb_Att_JobCard_3> Temtb_Att_JobCard_3 { get; set; }
    
        [DbFunction("GCTL_ERP_DB_MVC_06_27Entities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[GCTL_ERP_DB_MVC_06_27Entities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int CheckBalance(string productCode, string vehicleBrandID, string itemModelID, string origin, string sizeID, string jobNo)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var vehicleBrandIDParameter = vehicleBrandID != null ?
                new ObjectParameter("VehicleBrandID", vehicleBrandID) :
                new ObjectParameter("VehicleBrandID", typeof(string));
    
            var itemModelIDParameter = itemModelID != null ?
                new ObjectParameter("ItemModelID", itemModelID) :
                new ObjectParameter("ItemModelID", typeof(string));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var sizeIDParameter = sizeID != null ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(string));
    
            var jobNoParameter = jobNo != null ?
                new ObjectParameter("JobNo", jobNo) :
                new ObjectParameter("JobNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckBalance", productCodeParameter, vehicleBrandIDParameter, itemModelIDParameter, originParameter, sizeIDParameter, jobNoParameter);
        }
    
        public virtual int CheckCustomerOrderQtyDeliveryQty(string cPOrderReceiveNo)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckCustomerOrderQtyDeliveryQty", cPOrderReceiveNoParameter);
        }
    
        public virtual int CheckLot(string pRNo, string lotNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckLot", pRNoParameter, lotNoParameter);
        }
    
        public virtual int CheckProductStatusForChallan(string companyCode, string branchCode, string divisionCode, string itemID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckProductStatusForChallan", companyCodeParameter, branchCodeParameter, divisionCodeParameter, itemIDParameter);
        }
    
        public virtual int CheckStockBalance(string itemID, string companyCode, string branchCode, string divisionCode, string proQualityStatusID)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var proQualityStatusIDParameter = proQualityStatusID != null ?
                new ObjectParameter("ProQualityStatusID", proQualityStatusID) :
                new ObjectParameter("ProQualityStatusID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckStockBalance", itemIDParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, proQualityStatusIDParameter);
        }
    
        public virtual int CheckUpdateCustomerPOQty(string cPOrderReceiveNo, string challanNo, string itemID)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckUpdateCustomerPOQty", cPOrderReceiveNoParameter, challanNoParameter, itemIDParameter);
        }
    
        public virtual int CustomerDueAmount(string main_CompanyCode, string branchCode, string divisionCode, string customerID)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerDueAmount", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, customerIDParameter);
        }
    
        public virtual int CustomerPurchaseOrderReport(string cPOrderReceiveNo, string companyCode, string branchCode, string divisionCode, string customerID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string preparedBy)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var preparedByParameter = preparedBy != null ?
                new ObjectParameter("PreparedBy", preparedBy) :
                new ObjectParameter("PreparedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerPurchaseOrderReport", cPOrderReceiveNoParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, customerIDParameter, dateUseParameter, fromDateParameter, toDateParameter, preparedByParameter);
        }
    
        public virtual int DailyProductWiseSalesReport(string companyCode, string branchCode, string divisionCode, string customerType, string customerID, string employeeID, string itemID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailyProductWiseSalesReport", companyCodeParameter, branchCodeParameter, divisionCodeParameter, customerTypeParameter, customerIDParameter, employeeIDParameter, itemIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int DailySalesReport(string companyCode, string branchCode, string divisionCode, string customerType, string customerID, string employeeID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("CustomerType", customerType) :
                new ObjectParameter("CustomerType", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DailySalesReport", companyCodeParameter, branchCodeParameter, divisionCodeParameter, customerTypeParameter, customerIDParameter, employeeIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Drop_Create_HRM_Att_Temp_DASR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Drop_Create_HRM_Att_Temp_DASR");
        }
    
        public virtual int Drop_Create_HRM_Pay_Temp__SST_3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Drop_Create_HRM_Pay_Temp__SST_3");
        }
    
        public virtual int Drop_Create_HRM_Pay_Temp_Bonus3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Drop_Create_HRM_Pay_Temp_Bonus3");
        }
    
        public virtual int Drop_Create_HRM_Pay_Temp_OvertimeSheet2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Drop_Create_HRM_Pay_Temp_OvertimeSheet2");
        }
    
        public virtual int ForUpdateGetRequisitionDetailsData2(string pRNo, string mRRNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ForUpdateGetRequisitionDetailsData2", pRNoParameter, mRRNoParameter);
        }
    
        public virtual ObjectResult<Get_EDMExistingCustomerTemp_Result> Get_EDMExistingCustomerTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EDMExistingCustomerTemp_Result>("Get_EDMExistingCustomerTemp", lUserParameter);
        }
    
        public virtual ObjectResult<Get_EDMOtherCustomerTemp_Result> Get_EDMOtherCustomerTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EDMOtherCustomerTemp_Result>("Get_EDMOtherCustomerTemp", lUserParameter);
        }
    
        public virtual int Get_Inv_SalesInvoiceInfoDetailsTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Inv_SalesInvoiceInfoDetailsTemp", lUserParameter);
        }
    
        public virtual ObjectResult<Get_MMPExistingCustomerTemp_Result> Get_MMPExistingCustomerTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_MMPExistingCustomerTemp_Result>("Get_MMPExistingCustomerTemp", lUserParameter);
        }
    
        public virtual ObjectResult<Get_MMPOtherCustomerTemp_Result> Get_MMPOtherCustomerTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_MMPOtherCustomerTemp_Result>("Get_MMPOtherCustomerTemp", lUserParameter);
        }
    
        public virtual ObjectResult<GetBlankEDMExistingCustomer_Result> GetBlankEDMExistingCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankEDMExistingCustomer_Result>("GetBlankEDMExistingCustomer");
        }
    
        public virtual ObjectResult<GetBlankEDMTOherCustomer_Result> GetBlankEDMTOherCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankEDMTOherCustomer_Result>("GetBlankEDMTOherCustomer");
        }
    
        public virtual ObjectResult<GetBlankMMPExistingCustomer_Result> GetBlankMMPExistingCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankMMPExistingCustomer_Result>("GetBlankMMPExistingCustomer");
        }
    
        public virtual ObjectResult<GetBlankMMPTOherCustomer_Result> GetBlankMMPTOherCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankMMPTOherCustomer_Result>("GetBlankMMPTOherCustomer");
        }
    
        public virtual ObjectResult<GetBlankPurchaseOrderReceiveDetails_Result> GetBlankPurchaseOrderReceiveDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankPurchaseOrderReceiveDetails_Result>("GetBlankPurchaseOrderReceiveDetails");
        }
    
        public virtual ObjectResult<GetBlankRequisitionDetails_Result> GetBlankRequisitionDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankRequisitionDetails_Result>("GetBlankRequisitionDetails");
        }
    
        public virtual ObjectResult<GetBlankRequisitionDetails2_Result> GetBlankRequisitionDetails2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankRequisitionDetails2_Result>("GetBlankRequisitionDetails2");
        }
    
        public virtual ObjectResult<GetBlankRequisitionDetailsChallan_Result> GetBlankRequisitionDetailsChallan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankRequisitionDetailsChallan_Result>("GetBlankRequisitionDetailsChallan");
        }
    
        public virtual ObjectResult<GetBlankSPRequisitionDetails_Result> GetBlankSPRequisitionDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankSPRequisitionDetails_Result>("GetBlankSPRequisitionDetails");
        }
    
        public virtual ObjectResult<GetBlankSPRequisitionDetails2_Result> GetBlankSPRequisitionDetails2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlankSPRequisitionDetails2_Result>("GetBlankSPRequisitionDetails2");
        }
    
        public virtual int GetBookingDetailsData(string bookingOrderNo)
        {
            var bookingOrderNoParameter = bookingOrderNo != null ?
                new ObjectParameter("BookingOrderNo", bookingOrderNo) :
                new ObjectParameter("BookingOrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBookingDetailsData", bookingOrderNoParameter);
        }
    
        public virtual int GetBookingDetailsData2(string bookingOrderNo)
        {
            var bookingOrderNoParameter = bookingOrderNo != null ?
                new ObjectParameter("BookingOrderNo", bookingOrderNo) :
                new ObjectParameter("BookingOrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBookingDetailsData2", bookingOrderNoParameter);
        }
    
        public virtual int GetBookingDetailsTempData(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBookingDetailsTempData", userNameParameter);
        }
    
        public virtual int GetChallanDetailsTemp(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChallanDetailsTemp", userNameParameter);
        }
    
        public virtual int GetChallanGridData(string challanNo)
        {
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChallanGridData", challanNoParameter);
        }
    
        public virtual int GetChallanQty(string challanNo, string itemID)
        {
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChallanQty", challanNoParameter, itemIDParameter);
        }
    
        public virtual int GetChallanReturnQty(string challanNo, string itemID)
        {
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChallanReturnQty", challanNoParameter, itemIDParameter);
        }
    
        public virtual int GetCPOrderReceivData(string cPOrderReceiveNo)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCPOrderReceivData", cPOrderReceiveNoParameter);
        }
    
        public virtual int GetCPOrderReceivDataInChallan(string cPOrderReceiveNo)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCPOrderReceivDataInChallan", cPOrderReceiveNoParameter);
        }
    
        public virtual int GetCPOrderReceivDataInvoice(string cPOrderReceiveNo)
        {
            var cPOrderReceiveNoParameter = cPOrderReceiveNo != null ?
                new ObjectParameter("CPOrderReceiveNo", cPOrderReceiveNo) :
                new ObjectParameter("CPOrderReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCPOrderReceivDataInvoice", cPOrderReceiveNoParameter);
        }
    
        public virtual int GetCPOrderReceiveTempData(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCPOrderReceiveTempData", userNameParameter);
        }
    
        public virtual ObjectResult<GetCurrentMonthHolydayDates_Result> GetCurrentMonthHolydayDates(string year, string month)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentMonthHolydayDates_Result>("GetCurrentMonthHolydayDates", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<string> GetEmployeeWeekend(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmployeeWeekend", employeeIDParameter);
        }
    
        public virtual ObjectResult<string> GetLeaveDays(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLeaveDays", employeeIDParameter);
        }
    
        public virtual int GetMaterialReceiveDetails(string mRRNo)
        {
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMaterialReceiveDetails", mRRNoParameter);
        }
    
        public virtual int GetMaterialReceiveDetails2(string mRRNo)
        {
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMaterialReceiveDetails2", mRRNoParameter);
        }
    
        public virtual int GetMRRNo(string mRRNo)
        {
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetMRRNo", mRRNoParameter);
        }
    
        public virtual int GetPartsList(string jobCardNO)
        {
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPartsList", jobCardNOParameter);
        }
    
        public virtual int GetPurchaseOrderReceiveJobNoData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPurchaseOrderReceiveJobNoData");
        }
    
        public virtual int GetPurchaseReceiveDetailsData(string purchaseReceiveNo)
        {
            var purchaseReceiveNoParameter = purchaseReceiveNo != null ?
                new ObjectParameter("PurchaseReceiveNo", purchaseReceiveNo) :
                new ObjectParameter("PurchaseReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPurchaseReceiveDetailsData", purchaseReceiveNoParameter);
        }
    
        public virtual int GetRequisitionData(string pRNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionData", pRNoParameter);
        }
    
        public virtual int GetRequisitionDetailsData(string pRNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionDetailsData", pRNoParameter);
        }
    
        public virtual int GetRequisitionDetailsData2(string pRNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionDetailsData2", pRNoParameter);
        }
    
        public virtual int GetRequisitionDetailsForStore(string requisitionNo)
        {
            var requisitionNoParameter = requisitionNo != null ?
                new ObjectParameter("RequisitionNo", requisitionNo) :
                new ObjectParameter("RequisitionNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionDetailsForStore", requisitionNoParameter);
        }
    
        public virtual int GetRequisitionDetailsTempData(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionDetailsTempData", userNameParameter);
        }
    
        public virtual int GetRequisitionDetailsTempDataAdd(string jobCardNO, string userName)
        {
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRequisitionDetailsTempDataAdd", jobCardNOParameter, userNameParameter);
        }
    
        public virtual int GetRMG_PurchaseOrderReceiveDetailsTemp(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRMG_PurchaseOrderReceiveDetailsTemp", lUserParameter);
        }
    
        public virtual int GetSalesInvoiceInfoDetailsTemp(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSalesInvoiceInfoDetailsTemp", userNameParameter);
        }
    
        public virtual int GetSalesReturn(string sRNo)
        {
            var sRNoParameter = sRNo != null ?
                new ObjectParameter("SRNo", sRNo) :
                new ObjectParameter("SRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSalesReturn", sRNoParameter);
        }
    
        public virtual int GetSPRequisitionApprovedStatus(string sPRequisitionNo, string reqType, string approvedStatus, string dateUse, string fromDate, string toDate)
        {
            var sPRequisitionNoParameter = sPRequisitionNo != null ?
                new ObjectParameter("SPRequisitionNo", sPRequisitionNo) :
                new ObjectParameter("SPRequisitionNo", typeof(string));
    
            var reqTypeParameter = reqType != null ?
                new ObjectParameter("ReqType", reqType) :
                new ObjectParameter("ReqType", typeof(string));
    
            var approvedStatusParameter = approvedStatus != null ?
                new ObjectParameter("ApprovedStatus", approvedStatus) :
                new ObjectParameter("ApprovedStatus", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSPRequisitionApprovedStatus", sPRequisitionNoParameter, reqTypeParameter, approvedStatusParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int GetSPRequisitionDetailsData(string sPRequisitionNo)
        {
            var sPRequisitionNoParameter = sPRequisitionNo != null ?
                new ObjectParameter("SPRequisitionNo", sPRequisitionNo) :
                new ObjectParameter("SPRequisitionNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSPRequisitionDetailsData", sPRequisitionNoParameter);
        }
    
        public virtual int GetSPRequisitionDetailsTempData(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSPRequisitionDetailsTempData", userNameParameter);
        }
    
        public virtual int GetSPRequisitionDetailsTempDataAdd(string jobCardNO, string userName)
        {
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSPRequisitionDetailsTempDataAdd", jobCardNOParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> GetWeekend()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetWeekend");
        }
    
        public virtual int Insert_HRM_ATD_Manual(string manualCode, string bulkEntryId, string attdEntryType, string employeeId, string attendanceTypeCode, Nullable<System.DateTime> date, Nullable<System.DateTime> time, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string latitude, string longitude, string attendanceLocation, string mapUrl)
        {
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            var bulkEntryIdParameter = bulkEntryId != null ?
                new ObjectParameter("BulkEntryId", bulkEntryId) :
                new ObjectParameter("BulkEntryId", typeof(string));
    
            var attdEntryTypeParameter = attdEntryType != null ?
                new ObjectParameter("AttdEntryType", attdEntryType) :
                new ObjectParameter("AttdEntryType", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var attendanceLocationParameter = attendanceLocation != null ?
                new ObjectParameter("AttendanceLocation", attendanceLocation) :
                new ObjectParameter("AttendanceLocation", typeof(string));
    
            var mapUrlParameter = mapUrl != null ?
                new ObjectParameter("MapUrl", mapUrl) :
                new ObjectParameter("MapUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_HRM_ATD_Manual", manualCodeParameter, bulkEntryIdParameter, attdEntryTypeParameter, employeeIdParameter, attendanceTypeCodeParameter, dateParameter, timeParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, latitudeParameter, longitudeParameter, attendanceLocationParameter, mapUrlParameter);
        }
    
        public virtual int Insert_HRM_Employee(string employeeCode, string employeeID, string firstName, string lastName, string fatherName, string motherName, string nationalityCode, Nullable<System.DateTime> dateOfBirth, string placeOfBirth, string bloodGroupCode, string sexCode, string religionCode, string presentAddress, string permanentAddress, string telephone, string mobileNo, string email, string personalEmail, string maritalStatusCode, string passportNo, string placeOfIssue, Nullable<System.DateTime> dateIssued, Nullable<System.DateTime> passportExpiryDate, string bankName, string bankAccountNo, string bankBranch, string aTMCardNo, string licenseNo, string licenseType, Nullable<System.DateTime> dateIssued1, Nullable<System.DateTime> expiryDate, string symbolOfVehicleClass, string placeOfIssue1, string workPermitNumber, string workPermitType, Nullable<System.DateTime> wPEffectiveDate, Nullable<System.DateTime> wPExpireDate, string companyCode, string branchCode, string divisionCode, string departmentCode, string sectionCode, string lineCode, string designationCode, string empTypeCode, string gradeCode, Nullable<System.DateTime> joiningDate, Nullable<decimal> salaryAtJoin, Nullable<System.DateTime> confirmDate, Nullable<decimal> grossSalary, string shiftCode, string holidayCode, string providentFundEligibility, string overTimeEligibility, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string empPhoto, string fingerPrintId, string digitalSignature, string shortName, string nationalIdNo, Nullable<System.DateTime> appointmentDate, string isprobation, string probationPeriodType, string reportingTo, string hOD, Nullable<int> probationPeriod, string currencyCode, string employeeStatus, string additionalID, string hobbies, Nullable<System.DateTime> marriageDate, string banglaFirstName, string banglaLastName, string locationCode, string employmentNatureId, string stepNoId, string costCenterId, string periodInfoId, string disbursementMethodId, string appointmentLetterNo, string confirmationLetterNo, Nullable<System.DateTime> confirmationLetterDate, string spouse, string noOfSon, string noOfDaughter, string tIN, string bankID, string bankBranchID, string fathersOccupation, string mothersOccupation, Nullable<System.DateTime> dateOfBirthOriginal, string birthCertificateNo, string attendanceCardID, Nullable<decimal> oTAmount, string airportSecurityPassNo, Nullable<System.DateTime> securityPassExpiryDate)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var placeOfBirthParameter = placeOfBirth != null ?
                new ObjectParameter("PlaceOfBirth", placeOfBirth) :
                new ObjectParameter("PlaceOfBirth", typeof(string));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var personalEmailParameter = personalEmail != null ?
                new ObjectParameter("PersonalEmail", personalEmail) :
                new ObjectParameter("PersonalEmail", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var placeOfIssueParameter = placeOfIssue != null ?
                new ObjectParameter("PlaceOfIssue", placeOfIssue) :
                new ObjectParameter("PlaceOfIssue", typeof(string));
    
            var dateIssuedParameter = dateIssued.HasValue ?
                new ObjectParameter("DateIssued", dateIssued) :
                new ObjectParameter("DateIssued", typeof(System.DateTime));
    
            var passportExpiryDateParameter = passportExpiryDate.HasValue ?
                new ObjectParameter("PassportExpiryDate", passportExpiryDate) :
                new ObjectParameter("PassportExpiryDate", typeof(System.DateTime));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankAccountNoParameter = bankAccountNo != null ?
                new ObjectParameter("BankAccountNo", bankAccountNo) :
                new ObjectParameter("BankAccountNo", typeof(string));
    
            var bankBranchParameter = bankBranch != null ?
                new ObjectParameter("BankBranch", bankBranch) :
                new ObjectParameter("BankBranch", typeof(string));
    
            var aTMCardNoParameter = aTMCardNo != null ?
                new ObjectParameter("ATMCardNo", aTMCardNo) :
                new ObjectParameter("ATMCardNo", typeof(string));
    
            var licenseNoParameter = licenseNo != null ?
                new ObjectParameter("LicenseNo", licenseNo) :
                new ObjectParameter("LicenseNo", typeof(string));
    
            var licenseTypeParameter = licenseType != null ?
                new ObjectParameter("LicenseType", licenseType) :
                new ObjectParameter("LicenseType", typeof(string));
    
            var dateIssued1Parameter = dateIssued1.HasValue ?
                new ObjectParameter("DateIssued1", dateIssued1) :
                new ObjectParameter("DateIssued1", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var symbolOfVehicleClassParameter = symbolOfVehicleClass != null ?
                new ObjectParameter("SymbolOfVehicleClass", symbolOfVehicleClass) :
                new ObjectParameter("SymbolOfVehicleClass", typeof(string));
    
            var placeOfIssue1Parameter = placeOfIssue1 != null ?
                new ObjectParameter("PlaceOfIssue1", placeOfIssue1) :
                new ObjectParameter("PlaceOfIssue1", typeof(string));
    
            var workPermitNumberParameter = workPermitNumber != null ?
                new ObjectParameter("WorkPermitNumber", workPermitNumber) :
                new ObjectParameter("WorkPermitNumber", typeof(string));
    
            var workPermitTypeParameter = workPermitType != null ?
                new ObjectParameter("WorkPermitType", workPermitType) :
                new ObjectParameter("WorkPermitType", typeof(string));
    
            var wPEffectiveDateParameter = wPEffectiveDate.HasValue ?
                new ObjectParameter("WPEffectiveDate", wPEffectiveDate) :
                new ObjectParameter("WPEffectiveDate", typeof(System.DateTime));
    
            var wPExpireDateParameter = wPExpireDate.HasValue ?
                new ObjectParameter("WPExpireDate", wPExpireDate) :
                new ObjectParameter("WPExpireDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var salaryAtJoinParameter = salaryAtJoin.HasValue ?
                new ObjectParameter("SalaryAtJoin", salaryAtJoin) :
                new ObjectParameter("SalaryAtJoin", typeof(decimal));
    
            var confirmDateParameter = confirmDate.HasValue ?
                new ObjectParameter("ConfirmDate", confirmDate) :
                new ObjectParameter("ConfirmDate", typeof(System.DateTime));
    
            var grossSalaryParameter = grossSalary.HasValue ?
                new ObjectParameter("GrossSalary", grossSalary) :
                new ObjectParameter("GrossSalary", typeof(decimal));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            var providentFundEligibilityParameter = providentFundEligibility != null ?
                new ObjectParameter("ProvidentFundEligibility", providentFundEligibility) :
                new ObjectParameter("ProvidentFundEligibility", typeof(string));
    
            var overTimeEligibilityParameter = overTimeEligibility != null ?
                new ObjectParameter("OverTimeEligibility", overTimeEligibility) :
                new ObjectParameter("OverTimeEligibility", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var empPhotoParameter = empPhoto != null ?
                new ObjectParameter("EmpPhoto", empPhoto) :
                new ObjectParameter("EmpPhoto", typeof(string));
    
            var fingerPrintIdParameter = fingerPrintId != null ?
                new ObjectParameter("FingerPrintId", fingerPrintId) :
                new ObjectParameter("FingerPrintId", typeof(string));
    
            var digitalSignatureParameter = digitalSignature != null ?
                new ObjectParameter("DigitalSignature", digitalSignature) :
                new ObjectParameter("DigitalSignature", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var nationalIdNoParameter = nationalIdNo != null ?
                new ObjectParameter("NationalIdNo", nationalIdNo) :
                new ObjectParameter("NationalIdNo", typeof(string));
    
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            var isprobationParameter = isprobation != null ?
                new ObjectParameter("Isprobation", isprobation) :
                new ObjectParameter("Isprobation", typeof(string));
    
            var probationPeriodTypeParameter = probationPeriodType != null ?
                new ObjectParameter("ProbationPeriodType", probationPeriodType) :
                new ObjectParameter("ProbationPeriodType", typeof(string));
    
            var reportingToParameter = reportingTo != null ?
                new ObjectParameter("ReportingTo", reportingTo) :
                new ObjectParameter("ReportingTo", typeof(string));
    
            var hODParameter = hOD != null ?
                new ObjectParameter("HOD", hOD) :
                new ObjectParameter("HOD", typeof(string));
    
            var probationPeriodParameter = probationPeriod.HasValue ?
                new ObjectParameter("ProbationPeriod", probationPeriod) :
                new ObjectParameter("ProbationPeriod", typeof(int));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var employeeStatusParameter = employeeStatus != null ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(string));
    
            var additionalIDParameter = additionalID != null ?
                new ObjectParameter("AdditionalID", additionalID) :
                new ObjectParameter("AdditionalID", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("Hobbies", hobbies) :
                new ObjectParameter("Hobbies", typeof(string));
    
            var marriageDateParameter = marriageDate.HasValue ?
                new ObjectParameter("MarriageDate", marriageDate) :
                new ObjectParameter("MarriageDate", typeof(System.DateTime));
    
            var banglaFirstNameParameter = banglaFirstName != null ?
                new ObjectParameter("BanglaFirstName", banglaFirstName) :
                new ObjectParameter("BanglaFirstName", typeof(string));
    
            var banglaLastNameParameter = banglaLastName != null ?
                new ObjectParameter("BanglaLastName", banglaLastName) :
                new ObjectParameter("BanglaLastName", typeof(string));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var employmentNatureIdParameter = employmentNatureId != null ?
                new ObjectParameter("EmploymentNatureId", employmentNatureId) :
                new ObjectParameter("EmploymentNatureId", typeof(string));
    
            var stepNoIdParameter = stepNoId != null ?
                new ObjectParameter("StepNoId", stepNoId) :
                new ObjectParameter("StepNoId", typeof(string));
    
            var costCenterIdParameter = costCenterId != null ?
                new ObjectParameter("CostCenterId", costCenterId) :
                new ObjectParameter("CostCenterId", typeof(string));
    
            var periodInfoIdParameter = periodInfoId != null ?
                new ObjectParameter("PeriodInfoId", periodInfoId) :
                new ObjectParameter("PeriodInfoId", typeof(string));
    
            var disbursementMethodIdParameter = disbursementMethodId != null ?
                new ObjectParameter("DisbursementMethodId", disbursementMethodId) :
                new ObjectParameter("DisbursementMethodId", typeof(string));
    
            var appointmentLetterNoParameter = appointmentLetterNo != null ?
                new ObjectParameter("AppointmentLetterNo", appointmentLetterNo) :
                new ObjectParameter("AppointmentLetterNo", typeof(string));
    
            var confirmationLetterNoParameter = confirmationLetterNo != null ?
                new ObjectParameter("ConfirmationLetterNo", confirmationLetterNo) :
                new ObjectParameter("ConfirmationLetterNo", typeof(string));
    
            var confirmationLetterDateParameter = confirmationLetterDate.HasValue ?
                new ObjectParameter("ConfirmationLetterDate", confirmationLetterDate) :
                new ObjectParameter("ConfirmationLetterDate", typeof(System.DateTime));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("Spouse", spouse) :
                new ObjectParameter("Spouse", typeof(string));
    
            var noOfSonParameter = noOfSon != null ?
                new ObjectParameter("NoOfSon", noOfSon) :
                new ObjectParameter("NoOfSon", typeof(string));
    
            var noOfDaughterParameter = noOfDaughter != null ?
                new ObjectParameter("NoOfDaughter", noOfDaughter) :
                new ObjectParameter("NoOfDaughter", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var bankIDParameter = bankID != null ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(string));
    
            var bankBranchIDParameter = bankBranchID != null ?
                new ObjectParameter("BankBranchID", bankBranchID) :
                new ObjectParameter("BankBranchID", typeof(string));
    
            var fathersOccupationParameter = fathersOccupation != null ?
                new ObjectParameter("FathersOccupation", fathersOccupation) :
                new ObjectParameter("FathersOccupation", typeof(string));
    
            var mothersOccupationParameter = mothersOccupation != null ?
                new ObjectParameter("MothersOccupation", mothersOccupation) :
                new ObjectParameter("MothersOccupation", typeof(string));
    
            var dateOfBirthOriginalParameter = dateOfBirthOriginal.HasValue ?
                new ObjectParameter("DateOfBirthOriginal", dateOfBirthOriginal) :
                new ObjectParameter("DateOfBirthOriginal", typeof(System.DateTime));
    
            var birthCertificateNoParameter = birthCertificateNo != null ?
                new ObjectParameter("BirthCertificateNo", birthCertificateNo) :
                new ObjectParameter("BirthCertificateNo", typeof(string));
    
            var attendanceCardIDParameter = attendanceCardID != null ?
                new ObjectParameter("AttendanceCardID", attendanceCardID) :
                new ObjectParameter("AttendanceCardID", typeof(string));
    
            var oTAmountParameter = oTAmount.HasValue ?
                new ObjectParameter("OTAmount", oTAmount) :
                new ObjectParameter("OTAmount", typeof(decimal));
    
            var airportSecurityPassNoParameter = airportSecurityPassNo != null ?
                new ObjectParameter("AirportSecurityPassNo", airportSecurityPassNo) :
                new ObjectParameter("AirportSecurityPassNo", typeof(string));
    
            var securityPassExpiryDateParameter = securityPassExpiryDate.HasValue ?
                new ObjectParameter("SecurityPassExpiryDate", securityPassExpiryDate) :
                new ObjectParameter("SecurityPassExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_HRM_Employee", employeeCodeParameter, employeeIDParameter, firstNameParameter, lastNameParameter, fatherNameParameter, motherNameParameter, nationalityCodeParameter, dateOfBirthParameter, placeOfBirthParameter, bloodGroupCodeParameter, sexCodeParameter, religionCodeParameter, presentAddressParameter, permanentAddressParameter, telephoneParameter, mobileNoParameter, emailParameter, personalEmailParameter, maritalStatusCodeParameter, passportNoParameter, placeOfIssueParameter, dateIssuedParameter, passportExpiryDateParameter, bankNameParameter, bankAccountNoParameter, bankBranchParameter, aTMCardNoParameter, licenseNoParameter, licenseTypeParameter, dateIssued1Parameter, expiryDateParameter, symbolOfVehicleClassParameter, placeOfIssue1Parameter, workPermitNumberParameter, workPermitTypeParameter, wPEffectiveDateParameter, wPExpireDateParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, departmentCodeParameter, sectionCodeParameter, lineCodeParameter, designationCodeParameter, empTypeCodeParameter, gradeCodeParameter, joiningDateParameter, salaryAtJoinParameter, confirmDateParameter, grossSalaryParameter, shiftCodeParameter, holidayCodeParameter, providentFundEligibilityParameter, overTimeEligibilityParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, empPhotoParameter, fingerPrintIdParameter, digitalSignatureParameter, shortNameParameter, nationalIdNoParameter, appointmentDateParameter, isprobationParameter, probationPeriodTypeParameter, reportingToParameter, hODParameter, probationPeriodParameter, currencyCodeParameter, employeeStatusParameter, additionalIDParameter, hobbiesParameter, marriageDateParameter, banglaFirstNameParameter, banglaLastNameParameter, locationCodeParameter, employmentNatureIdParameter, stepNoIdParameter, costCenterIdParameter, periodInfoIdParameter, disbursementMethodIdParameter, appointmentLetterNoParameter, confirmationLetterNoParameter, confirmationLetterDateParameter, spouseParameter, noOfSonParameter, noOfDaughterParameter, tINParameter, bankIDParameter, bankBranchIDParameter, fathersOccupationParameter, mothersOccupationParameter, dateOfBirthOriginalParameter, birthCertificateNoParameter, attendanceCardIDParameter, oTAmountParameter, airportSecurityPassNoParameter, securityPassExpiryDateParameter);
        }
    
        public virtual int Insert_Inv_Def_ItemGrouping(string companyCode, string divisionCode, string mainItemID, string subItemID, string itemID, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, string modifyDate, string employeeID, string companyCode_Main)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var mainItemIDParameter = mainItemID != null ?
                new ObjectParameter("MainItemID", mainItemID) :
                new ObjectParameter("MainItemID", typeof(string));
    
            var subItemIDParameter = subItemID != null ?
                new ObjectParameter("SubItemID", subItemID) :
                new ObjectParameter("SubItemID", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate != null ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var companyCode_MainParameter = companyCode_Main != null ?
                new ObjectParameter("CompanyCode_Main", companyCode_Main) :
                new ObjectParameter("CompanyCode_Main", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Inv_Def_ItemGrouping", companyCodeParameter, divisionCodeParameter, mainItemIDParameter, subItemIDParameter, itemIDParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, employeeIDParameter, companyCode_MainParameter);
        }
    
        public virtual int InventoryIssueData(string jobNo, string productCode, string vehicleBrandID, string vehicleModelID, string orginID, string itemClassID, string sizeID, string dateUse, string fromDate, string toDate)
        {
            var jobNoParameter = jobNo != null ?
                new ObjectParameter("JobNo", jobNo) :
                new ObjectParameter("JobNo", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var vehicleBrandIDParameter = vehicleBrandID != null ?
                new ObjectParameter("VehicleBrandID", vehicleBrandID) :
                new ObjectParameter("VehicleBrandID", typeof(string));
    
            var vehicleModelIDParameter = vehicleModelID != null ?
                new ObjectParameter("VehicleModelID", vehicleModelID) :
                new ObjectParameter("VehicleModelID", typeof(string));
    
            var orginIDParameter = orginID != null ?
                new ObjectParameter("OrginID", orginID) :
                new ObjectParameter("OrginID", typeof(string));
    
            var itemClassIDParameter = itemClassID != null ?
                new ObjectParameter("ItemClassID", itemClassID) :
                new ObjectParameter("ItemClassID", typeof(string));
    
            var sizeIDParameter = sizeID != null ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryIssueData", jobNoParameter, productCodeParameter, vehicleBrandIDParameter, vehicleModelIDParameter, orginIDParameter, itemClassIDParameter, sizeIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int InventoryIssueDataSelect(string catagoryID, string productCode, string vehicleBrandID, string vehicleModelID, string orginID, string sizeID)
        {
            var catagoryIDParameter = catagoryID != null ?
                new ObjectParameter("CatagoryID", catagoryID) :
                new ObjectParameter("CatagoryID", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var vehicleBrandIDParameter = vehicleBrandID != null ?
                new ObjectParameter("VehicleBrandID", vehicleBrandID) :
                new ObjectParameter("VehicleBrandID", typeof(string));
    
            var vehicleModelIDParameter = vehicleModelID != null ?
                new ObjectParameter("VehicleModelID", vehicleModelID) :
                new ObjectParameter("VehicleModelID", typeof(string));
    
            var orginIDParameter = orginID != null ?
                new ObjectParameter("OrginID", orginID) :
                new ObjectParameter("OrginID", typeof(string));
    
            var sizeIDParameter = sizeID != null ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryIssueDataSelect", catagoryIDParameter, productCodeParameter, vehicleBrandIDParameter, vehicleModelIDParameter, orginIDParameter, sizeIDParameter);
        }
    
        public virtual int InventoryIssueReportData(string departmentCode, string productCode, string vehicleBrandID, string vehicleModelID, string orginID, string itemClassID, string sizeID, string dateUse, string fromDate, string toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var vehicleBrandIDParameter = vehicleBrandID != null ?
                new ObjectParameter("VehicleBrandID", vehicleBrandID) :
                new ObjectParameter("VehicleBrandID", typeof(string));
    
            var vehicleModelIDParameter = vehicleModelID != null ?
                new ObjectParameter("VehicleModelID", vehicleModelID) :
                new ObjectParameter("VehicleModelID", typeof(string));
    
            var orginIDParameter = orginID != null ?
                new ObjectParameter("OrginID", orginID) :
                new ObjectParameter("OrginID", typeof(string));
    
            var itemClassIDParameter = itemClassID != null ?
                new ObjectParameter("ItemClassID", itemClassID) :
                new ObjectParameter("ItemClassID", typeof(string));
    
            var sizeIDParameter = sizeID != null ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryIssueReportData", departmentCodeParameter, productCodeParameter, vehicleBrandIDParameter, vehicleModelIDParameter, orginIDParameter, itemClassIDParameter, sizeIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int InventoryProfitLossReportData(string jobNo)
        {
            var jobNoParameter = jobNo != null ?
                new ObjectParameter("JobNo", jobNo) :
                new ObjectParameter("JobNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryProfitLossReportData", jobNoParameter);
        }
    
        public virtual int InventoryStockReport(string catagoryID, string productCode, string vehicleBrandID, string vehicleModelID, string orginID, string itemClassID, string sizeID, string dateUse, string fromDate, string toDate)
        {
            var catagoryIDParameter = catagoryID != null ?
                new ObjectParameter("CatagoryID", catagoryID) :
                new ObjectParameter("CatagoryID", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var vehicleBrandIDParameter = vehicleBrandID != null ?
                new ObjectParameter("VehicleBrandID", vehicleBrandID) :
                new ObjectParameter("VehicleBrandID", typeof(string));
    
            var vehicleModelIDParameter = vehicleModelID != null ?
                new ObjectParameter("VehicleModelID", vehicleModelID) :
                new ObjectParameter("VehicleModelID", typeof(string));
    
            var orginIDParameter = orginID != null ?
                new ObjectParameter("OrginID", orginID) :
                new ObjectParameter("OrginID", typeof(string));
    
            var itemClassIDParameter = itemClassID != null ?
                new ObjectParameter("ItemClassID", itemClassID) :
                new ObjectParameter("ItemClassID", typeof(string));
    
            var sizeIDParameter = sizeID != null ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryStockReport", catagoryIDParameter, productCodeParameter, vehicleBrandIDParameter, vehicleModelIDParameter, orginIDParameter, itemClassIDParameter, sizeIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int ItemGroupReport(string companyCode, string divisionCode, string mainItemID, string subItemID, string itemTypeID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var mainItemIDParameter = mainItemID != null ?
                new ObjectParameter("MainItemID", mainItemID) :
                new ObjectParameter("MainItemID", typeof(string));
    
            var subItemIDParameter = subItemID != null ?
                new ObjectParameter("SubItemID", subItemID) :
                new ObjectParameter("SubItemID", typeof(string));
    
            var itemTypeIDParameter = itemTypeID != null ?
                new ObjectParameter("ItemTypeID", itemTypeID) :
                new ObjectParameter("ItemTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ItemGroupReport", companyCodeParameter, divisionCodeParameter, mainItemIDParameter, subItemIDParameter, itemTypeIDParameter);
        }
    
        public virtual int LoadChallanItemCommandData(string challanNo)
        {
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadChallanItemCommandData", challanNoParameter);
        }
    
        public virtual int LoadSalesInvoiceData(string invoiceNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadSalesInvoiceData", invoiceNoParameter);
        }
    
        public virtual int LoadSalesReturnInvoiceData(string invoiceNo, string challanNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadSalesReturnInvoiceData", invoiceNoParameter, challanNoParameter);
        }
    
        public virtual int MaterialReceiveReportData(string mRRNo, string companyCode, string branchCode, string divisionCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string purchaseTypeID, string preparedBy)
        {
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var purchaseTypeIDParameter = purchaseTypeID != null ?
                new ObjectParameter("PurchaseTypeID", purchaseTypeID) :
                new ObjectParameter("PurchaseTypeID", typeof(string));
    
            var preparedByParameter = preparedBy != null ?
                new ObjectParameter("PreparedBy", preparedBy) :
                new ObjectParameter("PreparedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaterialReceiveReportData", mRRNoParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, dateUseParameter, fromDateParameter, toDateParameter, purchaseTypeIDParameter, preparedByParameter);
        }
    
        public virtual int MRTermsCondition(string mRRNo)
        {
            var mRRNoParameter = mRRNo != null ?
                new ObjectParameter("MRRNo", mRRNo) :
                new ObjectParameter("MRRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MRTermsCondition", mRRNoParameter);
        }
    
        public virtual ObjectResult<Prc_DashboardEmployeeInList_Result> Prc_DashboardEmployeeInList(Nullable<System.DateTime> attendenceDate)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_DashboardEmployeeInList_Result>("Prc_DashboardEmployeeInList", attendenceDateParameter);
        }
    
        public virtual ObjectResult<Prc_EDMExistingCustomer_Result> Prc_EDMExistingCustomer(string eDMNo)
        {
            var eDMNoParameter = eDMNo != null ?
                new ObjectParameter("EDMNo", eDMNo) :
                new ObjectParameter("EDMNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_EDMExistingCustomer_Result>("Prc_EDMExistingCustomer", eDMNoParameter);
        }
    
        public virtual ObjectResult<Prc_EDMOtherCustomer_Result> Prc_EDMOtherCustomer(string eDMNo)
        {
            var eDMNoParameter = eDMNo != null ?
                new ObjectParameter("EDMNo", eDMNo) :
                new ObjectParameter("EDMNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_EDMOtherCustomer_Result>("Prc_EDMOtherCustomer", eDMNoParameter);
        }
    
        public virtual ObjectResult<prc_EmployeeAttendenceySummery_Result> prc_EmployeeAttendenceySummery(Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, string employeeID)
        {
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_EmployeeAttendenceySummery_Result>("prc_EmployeeAttendenceySummery", startDateTimeParameter, endDateTimeParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<prc_EmployeeAttendenceySummeryEmpDatatimeStatistics_Result> prc_EmployeeAttendenceySummeryEmpDatatimeStatistics(Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, string employeeID, string emoStatus)
        {
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var emoStatusParameter = emoStatus != null ?
                new ObjectParameter("EmoStatus", emoStatus) :
                new ObjectParameter("EmoStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_EmployeeAttendenceySummeryEmpDatatimeStatistics_Result>("prc_EmployeeAttendenceySummeryEmpDatatimeStatistics", startDateTimeParameter, endDateTimeParameter, employeeIDParameter, emoStatusParameter);
        }
    
        public virtual ObjectResult<Prc_EmployeeLeaveBalaceStatus_Result> Prc_EmployeeLeaveBalaceStatus(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_EmployeeLeaveBalaceStatus_Result>("Prc_EmployeeLeaveBalaceStatus", employeeIDParameter);
        }
    
        public virtual int Prc_GatePassReport(string gatepass_NO)
        {
            var gatepass_NOParameter = gatepass_NO != null ?
                new ObjectParameter("Gatepass_NO", gatepass_NO) :
                new ObjectParameter("Gatepass_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_GatePassReport", gatepass_NOParameter);
        }
    
        public virtual int Prc_GatePassReport2(string gatepass_NO, string invoiceNO, string jobCardNO, string regNo)
        {
            var gatepass_NOParameter = gatepass_NO != null ?
                new ObjectParameter("Gatepass_NO", gatepass_NO) :
                new ObjectParameter("Gatepass_NO", typeof(string));
    
            var invoiceNOParameter = invoiceNO != null ?
                new ObjectParameter("InvoiceNO", invoiceNO) :
                new ObjectParameter("InvoiceNO", typeof(string));
    
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_GatePassReport2", gatepass_NOParameter, invoiceNOParameter, jobCardNOParameter, regNoParameter);
        }
    
        public virtual ObjectResult<Prc_GetAccessCode_Result> Prc_GetAccessCode(string accessCodeID)
        {
            var accessCodeIDParameter = accessCodeID != null ?
                new ObjectParameter("AccessCodeID", accessCodeID) :
                new ObjectParameter("AccessCodeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_GetAccessCode_Result>("Prc_GetAccessCode", accessCodeIDParameter);
        }
    
        public virtual int prc_LederReportDateTimeF(string subSusidiaryLedgerCodeNo, string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LederReportDateTimeF", subSusidiaryLedgerCodeNoParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int prc_LederReportF(string subSusidiaryLedgerCodeNo, string main_CompanyCode, string branchCode, string divisionCode)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_LederReportF", subSusidiaryLedgerCodeNoParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter);
        }
    
        public virtual ObjectResult<Prc_MMPExistingCustomer_Result> Prc_MMPExistingCustomer(string mMPID)
        {
            var mMPIDParameter = mMPID != null ?
                new ObjectParameter("MMPID", mMPID) :
                new ObjectParameter("MMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_MMPExistingCustomer_Result>("Prc_MMPExistingCustomer", mMPIDParameter);
        }
    
        public virtual ObjectResult<Prc_MMPOtherCustomer_Result> Prc_MMPOtherCustomer(string mMPID)
        {
            var mMPIDParameter = mMPID != null ?
                new ObjectParameter("MMPID", mMPID) :
                new ObjectParameter("MMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_MMPOtherCustomer_Result>("Prc_MMPOtherCustomer", mMPIDParameter);
        }
    
        public virtual int Prc_MoneyReceiptReport(string voucherNo)
        {
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_MoneyReceiptReport", voucherNoParameter);
        }
    
        public virtual int Prc_PaymentVoucherCustomerReport(string paymentVoucherCustomer)
        {
            var paymentVoucherCustomerParameter = paymentVoucherCustomer != null ?
                new ObjectParameter("PaymentVoucherCustomer", paymentVoucherCustomer) :
                new ObjectParameter("PaymentVoucherCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_PaymentVoucherCustomerReport", paymentVoucherCustomerParameter);
        }
    
        public virtual int Prc_PreviousVehicleDiagnosticServiceCharge(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_PreviousVehicleDiagnosticServiceCharge", jobCardNoParameter);
        }
    
        public virtual int prc_ProcessChallanItem(string challanNO)
        {
            var challanNOParameter = challanNO != null ?
                new ObjectParameter("ChallanNO", challanNO) :
                new ObjectParameter("ChallanNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_ProcessChallanItem", challanNOParameter);
        }
    
        public virtual int Prc_ReceivedVoucherReport(string receviedVoucherNo)
        {
            var receviedVoucherNoParameter = receviedVoucherNo != null ?
                new ObjectParameter("ReceviedVoucherNo", receviedVoucherNo) :
                new ObjectParameter("ReceviedVoucherNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_ReceivedVoucherReport", receviedVoucherNoParameter);
        }
    
        public virtual ObjectResult<Prc_RosterEmployeeInfoLoad_Result> Prc_RosterEmployeeInfoLoad(string companyID, string departmentID, string designationCode, string branchCode)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_RosterEmployeeInfoLoad_Result>("Prc_RosterEmployeeInfoLoad", companyIDParameter, departmentIDParameter, designationCodeParameter, branchCodeParameter);
        }
    
        public virtual int Prc_Rpt_AccComLedger(string subSusidiaryLedgerCodeNo, string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_AccComLedger", subSusidiaryLedgerCodeNoParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int Prc_Rpt_AccComLedgerThirdLayer(string subSusidiaryLedgerCodeNo, string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_AccComLedgerThirdLayer", subSusidiaryLedgerCodeNoParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int Prc_Rpt_ChallanInfo(string challanNo)
        {
            var challanNoParameter = challanNo != null ?
                new ObjectParameter("ChallanNo", challanNo) :
                new ObjectParameter("ChallanNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_ChallanInfo", challanNoParameter);
        }
    
        public virtual int Prc_Rpt_SalesInvoiceData(string invoiceNo)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_SalesInvoiceData", invoiceNoParameter);
        }
    
        public virtual int Prc_Rpt_SalesInvoiceWiseCOGS(string invoiceNo, string companyCode, string divisionCode, string branchCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_SalesInvoiceWiseCOGS", invoiceNoParameter, companyCodeParameter, divisionCodeParameter, branchCodeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Prc_Rpt_SalesProductWiseCOGS(string itemID, string companyCode, string divisionCode, string branchCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_Rpt_SalesProductWiseCOGS", itemIDParameter, companyCodeParameter, divisionCodeParameter, branchCodeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Prc_SingelEmployeeLeaveBalaceStatus_Result> Prc_SingelEmployeeLeaveBalaceStatus(string employeeID, string leaveType, string noOfDay)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var leaveTypeParameter = leaveType != null ?
                new ObjectParameter("LeaveType", leaveType) :
                new ObjectParameter("LeaveType", typeof(string));
    
            var noOfDayParameter = noOfDay != null ?
                new ObjectParameter("NoOfDay", noOfDay) :
                new ObjectParameter("NoOfDay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prc_SingelEmployeeLeaveBalaceStatus_Result>("Prc_SingelEmployeeLeaveBalaceStatus", employeeIDParameter, leaveTypeParameter, noOfDayParameter);
        }
    
        public virtual int prc_StoreLedger(string itemID, string mainCompanyID, string branchCode, string divisionCode)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var mainCompanyIDParameter = mainCompanyID != null ?
                new ObjectParameter("MainCompanyID", mainCompanyID) :
                new ObjectParameter("MainCompanyID", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_StoreLedger", itemIDParameter, mainCompanyIDParameter, branchCodeParameter, divisionCodeParameter);
        }
    
        public virtual int prc_StoreLedgerDateTime(string itemID, string mainCompanyID, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var mainCompanyIDParameter = mainCompanyID != null ?
                new ObjectParameter("MainCompanyID", mainCompanyID) :
                new ObjectParameter("MainCompanyID", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_StoreLedgerDateTime", itemIDParameter, mainCompanyIDParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int prc_StoreLedgerDetails(string itemID, string mainCompanyID, string branchCode, string divisionCode)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var mainCompanyIDParameter = mainCompanyID != null ?
                new ObjectParameter("MainCompanyID", mainCompanyID) :
                new ObjectParameter("MainCompanyID", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_StoreLedgerDetails", itemIDParameter, mainCompanyIDParameter, branchCodeParameter, divisionCodeParameter);
        }
    
        public virtual int prc_StoreLedgerDetailsDateTime(string itemID, string mainCompanyID, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var mainCompanyIDParameter = mainCompanyID != null ?
                new ObjectParameter("MainCompanyID", mainCompanyID) :
                new ObjectParameter("MainCompanyID", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_StoreLedgerDetailsDateTime", itemIDParameter, mainCompanyIDParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Prc_VehicleBillReport(string billNO)
        {
            var billNOParameter = billNO != null ?
                new ObjectParameter("BillNO", billNO) :
                new ObjectParameter("BillNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleBillReport", billNOParameter);
        }
    
        public virtual int Prc_VehicleBillReport2(string billNO, string jobCardNo)
        {
            var billNOParameter = billNO != null ?
                new ObjectParameter("BillNO", billNO) :
                new ObjectParameter("BillNO", typeof(string));
    
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleBillReport2", billNOParameter, jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleBillTermsCondition(string billNO)
        {
            var billNOParameter = billNO != null ?
                new ObjectParameter("BillNO", billNO) :
                new ObjectParameter("BillNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleBillTermsCondition", billNOParameter);
        }
    
        public virtual int Prc_VehicleBillTermsCondition2(string billNO, string jobCardNo)
        {
            var billNOParameter = billNO != null ?
                new ObjectParameter("BillNO", billNO) :
                new ObjectParameter("BillNO", typeof(string));
    
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleBillTermsCondition2", billNOParameter, jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnostic(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnostic", jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticOtherCharge(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticOtherCharge", jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticReport(string jobCardID)
        {
            var jobCardIDParameter = jobCardID != null ?
                new ObjectParameter("JobCardID", jobCardID) :
                new ObjectParameter("JobCardID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticReport", jobCardIDParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticServiceCharge(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticServiceCharge", jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticSpareParts(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticSpareParts", jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticTermsCondition(string jobCardNo)
        {
            var jobCardNoParameter = jobCardNo != null ?
                new ObjectParameter("JobCardNo", jobCardNo) :
                new ObjectParameter("JobCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticTermsCondition", jobCardNoParameter);
        }
    
        public virtual int Prc_VehicleDiagnosticTest(string diagnosticTestNo)
        {
            var diagnosticTestNoParameter = diagnosticTestNo != null ?
                new ObjectParameter("DiagnosticTestNo", diagnosticTestNo) :
                new ObjectParameter("DiagnosticTestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleDiagnosticTest", diagnosticTestNoParameter);
        }
    
        public virtual int Prc_VehicleInventoryForm(string jobCardNO)
        {
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prc_VehicleInventoryForm", jobCardNOParameter);
        }
    
        public virtual int prc_VoucherDetailsReport(string voucherType, string main_CompanyCode, string branchCode, string divisionCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var voucherTypeParameter = voucherType != null ?
                new ObjectParameter("VoucherType", voucherType) :
                new ObjectParameter("VoucherType", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_VoucherDetailsReport", voucherTypeParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_Acc_ChartOfAccountsByParentKey_Delete(string parentKey)
        {
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Acc_ChartOfAccountsByParentKey_Delete", parentKeyParameter);
        }
    
        public virtual int proc_Acc_ChartOfAccountsBySLCode_Delete(string nodeKey)
        {
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Acc_ChartOfAccountsBySLCode_Delete", nodeKeyParameter);
        }
    
        public virtual int proc_AccVoucherEntry_ShowTempGrid(string lUser)
        {
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AccVoucherEntry_ShowTempGrid", lUserParameter);
        }
    
        public virtual ObjectResult<proc_AllFullLeaveApplicationReport_Result> proc_AllFullLeaveApplicationReport(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string applyLeaveFormat)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var applyLeaveFormatParameter = applyLeaveFormat != null ?
                new ObjectParameter("ApplyLeaveFormat", applyLeaveFormat) :
                new ObjectParameter("ApplyLeaveFormat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AllFullLeaveApplicationReport_Result>("proc_AllFullLeaveApplicationReport", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter, applyLeaveFormatParameter);
        }
    
        public virtual ObjectResult<proc_AllTypeLeaveApplicationReport_Result> proc_AllTypeLeaveApplicationReport(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string leaveApprovalStatus)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var leaveApprovalStatusParameter = leaveApprovalStatus != null ?
                new ObjectParameter("LeaveApprovalStatus", leaveApprovalStatus) :
                new ObjectParameter("LeaveApprovalStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AllTypeLeaveApplicationReport_Result>("proc_AllTypeLeaveApplicationReport", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter, leaveApprovalStatusParameter);
        }
    
        public virtual int proc_AttAbsentData(string companyCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AttAbsentData", companyCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int Proc_Attd_EmployeeMonthlyToDailyMovementExistingCustomerGrid(string employeeID, Nullable<System.DateTime> planDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Attd_EmployeeMonthlyToDailyMovementExistingCustomerGrid", employeeIDParameter, planDateParameter);
        }
    
        public virtual ObjectResult<Proc_Attd_EmployeeMonthlyToDailyMovementOtherCustomerGrid_Result> Proc_Attd_EmployeeMonthlyToDailyMovementOtherCustomerGrid(string employeeID, Nullable<System.DateTime> planDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var planDateParameter = planDate.HasValue ?
                new ObjectParameter("PlanDate", planDate) :
                new ObjectParameter("PlanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Attd_EmployeeMonthlyToDailyMovementOtherCustomerGrid_Result>("Proc_Attd_EmployeeMonthlyToDailyMovementOtherCustomerGrid", employeeIDParameter, planDateParameter);
        }
    
        public virtual int proc_AttData(string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AttData", companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_AttdHolidayData(string companyCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AttdHolidayData", companyCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int proc_AttdWeekendData(string companyCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AttdWeekendData", companyCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<proc_AttendanceSummary_Result> proc_AttendanceSummary(string companyCode, string departmentCode, string empTypeCode, string employeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AttendanceSummary_Result>("proc_AttendanceSummary", companyCodeParameter, departmentCodeParameter, empTypeCodeParameter, employeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_AttLeaveData(string companyCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AttLeaveData", companyCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int proc_DailyAttendanceStatement(string companyCode, string departmentCode, Nullable<System.DateTime> date)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DailyAttendanceStatement", companyCodeParameter, departmentCodeParameter, dateParameter);
        }
    
        public virtual int proc_DailyAttendanceSummary(string departmentCode, string empTypeCode, string shiftCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DailyAttendanceSummary", departmentCodeParameter, empTypeCodeParameter, shiftCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_DaliyAttReport(string companyCode, string departmentCode, string employeeId, Nullable<System.DateTime> date, string attdStatus)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var attdStatusParameter = attdStatus != null ?
                new ObjectParameter("AttdStatus", attdStatus) :
                new ObjectParameter("AttdStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DaliyAttReport", companyCodeParameter, departmentCodeParameter, employeeIdParameter, dateParameter, attdStatusParameter);
        }
    
        public virtual int proc_DaliyAttReport_2(string companyCode, string departmentCode, string employeeId, Nullable<System.DateTime> date, string attdStatus)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var attdStatusParameter = attdStatus != null ?
                new ObjectParameter("AttdStatus", attdStatus) :
                new ObjectParameter("AttdStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DaliyAttReport_2", companyCodeParameter, departmentCodeParameter, employeeIdParameter, dateParameter, attdStatusParameter);
        }
    
        public virtual int proc_Delete_Acc_COA_TemporaryInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_Acc_COA_TemporaryInfo");
        }
    
        public virtual int proc_Delete_IfMaxGGLCodeBigger(Nullable<decimal> autoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_IfMaxGGLCodeBigger", autoIdParameter);
        }
    
        public virtual int proc_Delete_IfMaxGLCodeBigger(Nullable<decimal> autoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_IfMaxGLCodeBigger", autoIdParameter);
        }
    
        public virtual int proc_Delete_IfMaxSCLCodeBigger(Nullable<decimal> autoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_IfMaxSCLCodeBigger", autoIdParameter);
        }
    
        public virtual int proc_Delete_MainItem(string mainItemID)
        {
            var mainItemIDParameter = mainItemID != null ?
                new ObjectParameter("MainItemID", mainItemID) :
                new ObjectParameter("MainItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_MainItem", mainItemIDParameter);
        }
    
        public virtual int proc_Delete_SubItem(string subItemID)
        {
            var subItemIDParameter = subItemID != null ?
                new ObjectParameter("SubItemID", subItemID) :
                new ObjectParameter("SubItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_SubItem", subItemIDParameter);
        }
    
        public virtual int proc_Delete_SubItem2(string subItem2ID)
        {
            var subItem2IDParameter = subItem2ID != null ?
                new ObjectParameter("SubItem2ID", subItem2ID) :
                new ObjectParameter("SubItem2ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Delete_SubItem2", subItem2IDParameter);
        }
    
        public virtual int proc_DeleteLeaveApplicationByLeaveAppEntryId(string leaveAppEntryId)
        {
            var leaveAppEntryIdParameter = leaveAppEntryId != null ?
                new ObjectParameter("LeaveAppEntryId", leaveAppEntryId) :
                new ObjectParameter("LeaveAppEntryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DeleteLeaveApplicationByLeaveAppEntryId", leaveAppEntryIdParameter);
        }
    
        public virtual ObjectResult<proc_frmLeaveApplication_select_empLeaveInfo_Application_Result> proc_frmLeaveApplication_select_empLeaveInfo_Application(string leaveApplicationAutoId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var leaveApplicationAutoIdParameter = leaveApplicationAutoId != null ?
                new ObjectParameter("leaveApplicationAutoId", leaveApplicationAutoId) :
                new ObjectParameter("leaveApplicationAutoId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_frmLeaveApplication_select_empLeaveInfo_Application_Result>("proc_frmLeaveApplication_select_empLeaveInfo_Application", leaveApplicationAutoIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<proc_GetEmpInfo_Result> proc_GetEmpInfo(string companyCode, string departmentCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetEmpInfo_Result>("proc_GetEmpInfo", companyCodeParameter, departmentCodeParameter);
        }
    
        public virtual ObjectResult<proc_GetMonthlySalaryData_Result> proc_GetMonthlySalaryData(string companyCode, string departmentCode, string empTypeCode, string employeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetMonthlySalaryData_Result>("proc_GetMonthlySalaryData", companyCodeParameter, departmentCodeParameter, empTypeCodeParameter, employeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_GetMonthStartAndEndDatesBetweenTwoDates_Result> proc_GetMonthStartAndEndDatesBetweenTwoDates(string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetMonthStartAndEndDatesBetweenTwoDates_Result>("proc_GetMonthStartAndEndDatesBetweenTwoDates", employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_HRM_Attd_JobCard_MAD_Result> proc_HRM_Attd_JobCard_MAD(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_HRM_Attd_JobCard_MAD_Result>("proc_HRM_Attd_JobCard_MAD", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_HRM_Attd_JobCard_WH_Result> proc_HRM_Attd_JobCard_WH(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_HRM_Attd_JobCard_WH_Result>("proc_HRM_Attd_JobCard_WH", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_Attd_Temp_InOutData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_Attd_Temp_InOutData", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_Attd_Temp_InOutData_Ab(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_Attd_Temp_InOutData_Ab", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_Attd_Temp_InOutData_Monthly(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_Attd_Temp_InOutData_Monthly", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_Attd_Temp_MaxOutData_DP(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_Attd_Temp_MaxOutData_DP", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_Attd_Temp_MinInData_DP(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_Attd_Temp_MinInData_DP", fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_HRM_EmployeeIdConfiguration_Delete(string employeeIdConfiguration_Code)
        {
            var employeeIdConfiguration_CodeParameter = employeeIdConfiguration_Code != null ?
                new ObjectParameter("EmployeeIdConfiguration_Code", employeeIdConfiguration_Code) :
                new ObjectParameter("EmployeeIdConfiguration_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_EmployeeIdConfiguration_Delete", employeeIdConfiguration_CodeParameter);
        }
    
        public virtual int proc_HRM_IdSetup_Delete(string idSetupCode)
        {
            var idSetupCodeParameter = idSetupCode != null ?
                new ObjectParameter("IdSetupCode", idSetupCode) :
                new ObjectParameter("IdSetupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HRM_IdSetup_Delete", idSetupCodeParameter);
        }
    
        public virtual int proc_InJobCardTimeBasedSalary2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InJobCardTimeBasedSalary2");
        }
    
        public virtual int proc_Insert_Acc_FinancialYear(string financialCodeNo, string name, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Insert_Acc_FinancialYear", financialCodeNoParameter, nameParameter, startDateParameter, endDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int Proc_Insert_HRM_TempImage(byte[] empPhoto, string employeeCode)
        {
            var empPhotoParameter = empPhoto != null ?
                new ObjectParameter("EmpPhoto", empPhoto) :
                new ObjectParameter("EmpPhoto", typeof(byte[]));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Insert_HRM_TempImage", empPhotoParameter, employeeCodeParameter);
        }
    
        public virtual int proc_Insert_JobCardMonthlyData(string processType, string monthName, Nullable<int> yearName, string isSalApp, Nullable<System.DateTime> salAppDate, Nullable<System.DateTime> processDate, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var processTypeParameter = processType != null ?
                new ObjectParameter("ProcessType", processType) :
                new ObjectParameter("ProcessType", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            var isSalAppParameter = isSalApp != null ?
                new ObjectParameter("IsSalApp", isSalApp) :
                new ObjectParameter("IsSalApp", typeof(string));
    
            var salAppDateParameter = salAppDate.HasValue ?
                new ObjectParameter("SalAppDate", salAppDate) :
                new ObjectParameter("SalAppDate", typeof(System.DateTime));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Insert_JobCardMonthlyData", processTypeParameter, monthNameParameter, yearNameParameter, isSalAppParameter, salAppDateParameter, processDateParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Proc_InsertToWarehouse(string warehouseID, string warehouseName, string warehouseAddess, string whTypeID, string city, string state, string zipCode, string countryId, string area, string remarks, string contactPerson, string designation, string contactPersonPhone, string contactPersonEmail, Nullable<System.DateTime> lDate, string lUser, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var warehouseIDParameter = warehouseID != null ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(string));
    
            var warehouseNameParameter = warehouseName != null ?
                new ObjectParameter("WarehouseName", warehouseName) :
                new ObjectParameter("WarehouseName", typeof(string));
    
            var warehouseAddessParameter = warehouseAddess != null ?
                new ObjectParameter("WarehouseAddess", warehouseAddess) :
                new ObjectParameter("WarehouseAddess", typeof(string));
    
            var whTypeIDParameter = whTypeID != null ?
                new ObjectParameter("WhTypeID", whTypeID) :
                new ObjectParameter("WhTypeID", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var countryIdParameter = countryId != null ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var contactPersonPhoneParameter = contactPersonPhone != null ?
                new ObjectParameter("ContactPersonPhone", contactPersonPhone) :
                new ObjectParameter("ContactPersonPhone", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InsertToWarehouse", warehouseIDParameter, warehouseNameParameter, warehouseAddessParameter, whTypeIDParameter, cityParameter, stateParameter, zipCodeParameter, countryIdParameter, areaParameter, remarksParameter, contactPersonParameter, designationParameter, contactPersonPhoneParameter, contactPersonEmailParameter, lDateParameter, lUserParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<proc_LeaveApplicationReport_Result> proc_LeaveApplicationReport(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string applyLeaveFormat, string leaveApprovalStatus)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var applyLeaveFormatParameter = applyLeaveFormat != null ?
                new ObjectParameter("ApplyLeaveFormat", applyLeaveFormat) :
                new ObjectParameter("ApplyLeaveFormat", typeof(string));
    
            var leaveApprovalStatusParameter = leaveApprovalStatus != null ?
                new ObjectParameter("LeaveApprovalStatus", leaveApprovalStatus) :
                new ObjectParameter("LeaveApprovalStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LeaveApplicationReport_Result>("proc_LeaveApplicationReport", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter, applyLeaveFormatParameter, leaveApprovalStatusParameter);
        }
    
        public virtual ObjectResult<proc_LeaveApplicationReport_ShortLeave_Result> proc_LeaveApplicationReport_ShortLeave(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string applyLeaveFormat, string leaveApprovalStatus)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var applyLeaveFormatParameter = applyLeaveFormat != null ?
                new ObjectParameter("ApplyLeaveFormat", applyLeaveFormat) :
                new ObjectParameter("ApplyLeaveFormat", typeof(string));
    
            var leaveApprovalStatusParameter = leaveApprovalStatus != null ?
                new ObjectParameter("LeaveApprovalStatus", leaveApprovalStatus) :
                new ObjectParameter("LeaveApprovalStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LeaveApplicationReport_ShortLeave_Result>("proc_LeaveApplicationReport_ShortLeave", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter, applyLeaveFormatParameter, leaveApprovalStatusParameter);
        }
    
        public virtual ObjectResult<proc_LeaveApplicationReport_TotalShortLeave_Result> proc_LeaveApplicationReport_TotalShortLeave(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string applyLeaveFormat)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var applyLeaveFormatParameter = applyLeaveFormat != null ?
                new ObjectParameter("ApplyLeaveFormat", applyLeaveFormat) :
                new ObjectParameter("ApplyLeaveFormat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LeaveApplicationReport_TotalShortLeave_Result>("proc_LeaveApplicationReport_TotalShortLeave", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter, applyLeaveFormatParameter);
        }
    
        public virtual ObjectResult<proc_LeavePendingReport_Result> proc_LeavePendingReport(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_LeavePendingReport_Result>("proc_LeavePendingReport", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, dateUseParameter);
        }
    
        public virtual ObjectResult<proc_MonthAndYear_Result> proc_MonthAndYear(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_MonthAndYear_Result>("proc_MonthAndYear", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<proc_PendingLeaveApprovedOrCanceledbyHR_Result> proc_PendingLeaveApprovedOrCanceledbyHR(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PendingLeaveApprovedOrCanceledbyHR_Result>("proc_PendingLeaveApprovedOrCanceledbyHR", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_PendingLeaveApprovedOrCanceledbyISOrHOD_Result> proc_PendingLeaveApprovedOrCanceledbyISOrHOD(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PendingLeaveApprovedOrCanceledbyISOrHOD_Result>("proc_PendingLeaveApprovedOrCanceledbyISOrHOD", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_PresentAge_Result> proc_PresentAge(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PresentAge_Result>("proc_PresentAge", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<proc_ProjectInfo_Result> proc_ProjectInfo(string projectPlanID, string moduleId)
        {
            var projectPlanIDParameter = projectPlanID != null ?
                new ObjectParameter("ProjectPlanID", projectPlanID) :
                new ObjectParameter("ProjectPlanID", typeof(string));
    
            var moduleIdParameter = moduleId != null ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ProjectInfo_Result>("proc_ProjectInfo", projectPlanIDParameter, moduleIdParameter);
        }
    
        public virtual int proc_ProjectWiseDailyWorkingStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ProjectWiseDailyWorkingStatus");
        }
    
        public virtual int proc_ProjectWiseDailyWorkingStatus_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ProjectWiseDailyWorkingStatus_Test");
        }
    
        public virtual int proc_Rpt_DailyEmpMovementReport(string employee, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse)
        {
            var employeeParameter = employee != null ?
                new ObjectParameter("Employee", employee) :
                new ObjectParameter("Employee", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_DailyEmpMovementReport", employeeParameter, fromDateParameter, toDateParameter, dateUseParameter);
        }
    
        public virtual int proc_Rpt_DailyEmpMovementReport2(string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_DailyEmpMovementReport2", companyCodeParameter, fromDateParameter, toDateParameter, dateUseParameter);
        }
    
        public virtual int proc_Rpt_Educational_History_Report(string employeeID, string nationalityCode, string companyCode, string branch, string department, string designation)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Educational_History_Report", employeeIDParameter, nationalityCodeParameter, companyCodeParameter, branchParameter, departmentParameter, designationParameter);
        }
    
        public virtual int proc_Rpt_EmployeeNomineeInfoReport(string companyCode, string employeeCardID, string employeeName, string nationalID, string tINID, string drivingLicenseID, string passportNo)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeCardIDParameter = employeeCardID != null ?
                new ObjectParameter("EmployeeCardID", employeeCardID) :
                new ObjectParameter("EmployeeCardID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeeNomineeInfoReport", companyCodeParameter, employeeCardIDParameter, employeeNameParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter);
        }
    
        public virtual int proc_Rpt_EmployeeNomineeLifeInsuranceDetailsInfo(string employeeCardID, string employeeName, string nationalID, string tINID, string drivingLicenseID, string passportNo)
        {
            var employeeCardIDParameter = employeeCardID != null ?
                new ObjectParameter("EmployeeCardID", employeeCardID) :
                new ObjectParameter("EmployeeCardID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeeNomineeLifeInsuranceDetailsInfo", employeeCardIDParameter, employeeNameParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter);
        }
    
        public virtual int proc_Rpt_EmployeeNomineeProvidentFundDetailsInfo(string employeeCardID, string employeeName, string nationalID, string tINID, string drivingLicenseID, string passportNo)
        {
            var employeeCardIDParameter = employeeCardID != null ?
                new ObjectParameter("EmployeeCardID", employeeCardID) :
                new ObjectParameter("EmployeeCardID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeeNomineeProvidentFundDetailsInfo", employeeCardIDParameter, employeeNameParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter);
        }
    
        public virtual int proc_Rpt_EmployeePersoanlInfoReport(string companyCode, string employeeCardID, string employeeName, string nationalID, string tINID, string drivingLicenseID, string passportNo)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeCardIDParameter = employeeCardID != null ?
                new ObjectParameter("EmployeeCardID", employeeCardID) :
                new ObjectParameter("EmployeeCardID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeePersoanlInfoReport", companyCodeParameter, employeeCardIDParameter, employeeNameParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter);
        }
    
        public virtual int proc_Rpt_EmployeeRecommendedTrainingList(string companyID, string branchID, string departmentID, string designationID, string gradeID, string stepID, string employeeTypeID, string emplyeeNatureID, string nationalID, string employeeID, string drivingLicenseID, string tINID, string passportNo, string genderID, string religionID, string natinalityID, string bloodGroupID, Nullable<System.DateTime> joiningStartDate, Nullable<System.DateTime> joiningToDate, string joiningDateuse, Nullable<System.DateTime> birthStartDate, Nullable<System.DateTime> birthToDate, string birthDateuse, Nullable<int> ageFrom, Nullable<int> ageTo, string ageUser, string trainingTitleID, Nullable<System.DateTime> trainingStartDate, Nullable<System.DateTime> trainingToDate, string trainignDateuse)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var gradeIDParameter = gradeID != null ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(string));
    
            var stepIDParameter = stepID != null ?
                new ObjectParameter("StepID", stepID) :
                new ObjectParameter("StepID", typeof(string));
    
            var employeeTypeIDParameter = employeeTypeID != null ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(string));
    
            var emplyeeNatureIDParameter = emplyeeNatureID != null ?
                new ObjectParameter("EmplyeeNatureID", emplyeeNatureID) :
                new ObjectParameter("EmplyeeNatureID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("GenderID", genderID) :
                new ObjectParameter("GenderID", typeof(string));
    
            var religionIDParameter = religionID != null ?
                new ObjectParameter("ReligionID", religionID) :
                new ObjectParameter("ReligionID", typeof(string));
    
            var natinalityIDParameter = natinalityID != null ?
                new ObjectParameter("NatinalityID", natinalityID) :
                new ObjectParameter("NatinalityID", typeof(string));
    
            var bloodGroupIDParameter = bloodGroupID != null ?
                new ObjectParameter("BloodGroupID", bloodGroupID) :
                new ObjectParameter("BloodGroupID", typeof(string));
    
            var joiningStartDateParameter = joiningStartDate.HasValue ?
                new ObjectParameter("JoiningStartDate", joiningStartDate) :
                new ObjectParameter("JoiningStartDate", typeof(System.DateTime));
    
            var joiningToDateParameter = joiningToDate.HasValue ?
                new ObjectParameter("JoiningToDate", joiningToDate) :
                new ObjectParameter("JoiningToDate", typeof(System.DateTime));
    
            var joiningDateuseParameter = joiningDateuse != null ?
                new ObjectParameter("JoiningDateuse", joiningDateuse) :
                new ObjectParameter("JoiningDateuse", typeof(string));
    
            var birthStartDateParameter = birthStartDate.HasValue ?
                new ObjectParameter("BirthStartDate", birthStartDate) :
                new ObjectParameter("BirthStartDate", typeof(System.DateTime));
    
            var birthToDateParameter = birthToDate.HasValue ?
                new ObjectParameter("BirthToDate", birthToDate) :
                new ObjectParameter("BirthToDate", typeof(System.DateTime));
    
            var birthDateuseParameter = birthDateuse != null ?
                new ObjectParameter("BirthDateuse", birthDateuse) :
                new ObjectParameter("BirthDateuse", typeof(string));
    
            var ageFromParameter = ageFrom.HasValue ?
                new ObjectParameter("AgeFrom", ageFrom) :
                new ObjectParameter("AgeFrom", typeof(int));
    
            var ageToParameter = ageTo.HasValue ?
                new ObjectParameter("AgeTo", ageTo) :
                new ObjectParameter("AgeTo", typeof(int));
    
            var ageUserParameter = ageUser != null ?
                new ObjectParameter("AgeUser", ageUser) :
                new ObjectParameter("AgeUser", typeof(string));
    
            var trainingTitleIDParameter = trainingTitleID != null ?
                new ObjectParameter("TrainingTitleID", trainingTitleID) :
                new ObjectParameter("TrainingTitleID", typeof(string));
    
            var trainingStartDateParameter = trainingStartDate.HasValue ?
                new ObjectParameter("TrainingStartDate", trainingStartDate) :
                new ObjectParameter("TrainingStartDate", typeof(System.DateTime));
    
            var trainingToDateParameter = trainingToDate.HasValue ?
                new ObjectParameter("TrainingToDate", trainingToDate) :
                new ObjectParameter("TrainingToDate", typeof(System.DateTime));
    
            var trainignDateuseParameter = trainignDateuse != null ?
                new ObjectParameter("TrainignDateuse", trainignDateuse) :
                new ObjectParameter("TrainignDateuse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeeRecommendedTrainingList", companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, gradeIDParameter, stepIDParameter, employeeTypeIDParameter, emplyeeNatureIDParameter, nationalIDParameter, employeeIDParameter, drivingLicenseIDParameter, tINIDParameter, passportNoParameter, genderIDParameter, religionIDParameter, natinalityIDParameter, bloodGroupIDParameter, joiningStartDateParameter, joiningToDateParameter, joiningDateuseParameter, birthStartDateParameter, birthToDateParameter, birthDateuseParameter, ageFromParameter, ageToParameter, ageUserParameter, trainingTitleIDParameter, trainingStartDateParameter, trainingToDateParameter, trainignDateuseParameter);
        }
    
        public virtual int proc_Rpt_EmployeeReferenceInfoReport(string companyCode, string employeeCardID, string employeeName, string nationalID, string tINID, string drivingLicenseID, string passportNo)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeCardIDParameter = employeeCardID != null ?
                new ObjectParameter("EmployeeCardID", employeeCardID) :
                new ObjectParameter("EmployeeCardID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_EmployeeReferenceInfoReport", companyCodeParameter, employeeCardIDParameter, employeeNameParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_PaySlipReport_Result> proc_Rpt_PaySlipReport(string sectionCode, string monthName, Nullable<int> yearName)
        {
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_PaySlipReport_Result>("proc_Rpt_PaySlipReport", sectionCodeParameter, monthNameParameter, yearNameParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_PersonalInfo2_Result> proc_Rpt_PersonalInfo2(string groupCode, string companyCode, string departmentCode, string employeeID, string nationalityCode, string bloodGroupCode, string sexCode, string religionCode, string maritalStatusCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse)
        {
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_PersonalInfo2_Result>("proc_Rpt_PersonalInfo2", groupCodeParameter, companyCodeParameter, departmentCodeParameter, employeeIDParameter, nationalityCodeParameter, bloodGroupCodeParameter, sexCodeParameter, religionCodeParameter, maritalStatusCodeParameter, fromDateParameter, toDateParameter, dateUseParameter);
        }
    
        public virtual int proc_Rpt_Professional_Qualification_History_Report(string employeeID, string nationalityCode, string companyCode, string branch)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Professional_Qualification_History_Report", employeeIDParameter, nationalityCodeParameter, companyCodeParameter, branchParameter);
        }
    
        public virtual int proc_Rpt_RepairOrderReport(string bookingOrderNo)
        {
            var bookingOrderNoParameter = bookingOrderNo != null ?
                new ObjectParameter("BookingOrderNo", bookingOrderNo) :
                new ObjectParameter("BookingOrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_RepairOrderReport", bookingOrderNoParameter);
        }
    
        public virtual int proc_Rpt_RepairOrderReport1(string jobCardNO, string regNo)
        {
            var jobCardNOParameter = jobCardNO != null ?
                new ObjectParameter("JobCardNO", jobCardNO) :
                new ObjectParameter("JobCardNO", typeof(string));
    
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_RepairOrderReport1", jobCardNOParameter, regNoParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_Select_AllEmployeeOfficialInfoListReport_Result> proc_Rpt_Select_AllEmployeeOfficialInfoListReport(string groupCode, string companyID, string branchID, string departmentID, string designationID, string employeeTypeID, string emplyeeNatureID, string gradeID, string nationalID, string tINID, string drivingLicenseID, string passportNo, string immediateSupervisorlID, string headofDepartment, string shiftID, string employeeStatus, Nullable<decimal> grossSalaryFrom, Nullable<decimal> grossSalaryTo, string grossSalaryUse, Nullable<System.DateTime> appointmentStartDate, Nullable<System.DateTime> appointmentToDate, string appoingDateuse, Nullable<System.DateTime> joiningStartDate, Nullable<System.DateTime> joiningToDate, string joiningDateuse, Nullable<System.DateTime> probationStartDate, Nullable<System.DateTime> probationToDate, string probationDateuse, Nullable<System.DateTime> confirmationStartDate, Nullable<System.DateTime> confirmationToDate, string confirmationDateuse)
        {
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeTypeIDParameter = employeeTypeID != null ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(string));
    
            var emplyeeNatureIDParameter = emplyeeNatureID != null ?
                new ObjectParameter("EmplyeeNatureID", emplyeeNatureID) :
                new ObjectParameter("EmplyeeNatureID", typeof(string));
    
            var gradeIDParameter = gradeID != null ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var immediateSupervisorlIDParameter = immediateSupervisorlID != null ?
                new ObjectParameter("ImmediateSupervisorlID", immediateSupervisorlID) :
                new ObjectParameter("ImmediateSupervisorlID", typeof(string));
    
            var headofDepartmentParameter = headofDepartment != null ?
                new ObjectParameter("HeadofDepartment", headofDepartment) :
                new ObjectParameter("HeadofDepartment", typeof(string));
    
            var shiftIDParameter = shiftID != null ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(string));
    
            var employeeStatusParameter = employeeStatus != null ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(string));
    
            var grossSalaryFromParameter = grossSalaryFrom.HasValue ?
                new ObjectParameter("GrossSalaryFrom", grossSalaryFrom) :
                new ObjectParameter("GrossSalaryFrom", typeof(decimal));
    
            var grossSalaryToParameter = grossSalaryTo.HasValue ?
                new ObjectParameter("GrossSalaryTo", grossSalaryTo) :
                new ObjectParameter("GrossSalaryTo", typeof(decimal));
    
            var grossSalaryUseParameter = grossSalaryUse != null ?
                new ObjectParameter("GrossSalaryUse", grossSalaryUse) :
                new ObjectParameter("GrossSalaryUse", typeof(string));
    
            var appointmentStartDateParameter = appointmentStartDate.HasValue ?
                new ObjectParameter("AppointmentStartDate", appointmentStartDate) :
                new ObjectParameter("AppointmentStartDate", typeof(System.DateTime));
    
            var appointmentToDateParameter = appointmentToDate.HasValue ?
                new ObjectParameter("AppointmentToDate", appointmentToDate) :
                new ObjectParameter("AppointmentToDate", typeof(System.DateTime));
    
            var appoingDateuseParameter = appoingDateuse != null ?
                new ObjectParameter("AppoingDateuse", appoingDateuse) :
                new ObjectParameter("AppoingDateuse", typeof(string));
    
            var joiningStartDateParameter = joiningStartDate.HasValue ?
                new ObjectParameter("JoiningStartDate", joiningStartDate) :
                new ObjectParameter("JoiningStartDate", typeof(System.DateTime));
    
            var joiningToDateParameter = joiningToDate.HasValue ?
                new ObjectParameter("JoiningToDate", joiningToDate) :
                new ObjectParameter("JoiningToDate", typeof(System.DateTime));
    
            var joiningDateuseParameter = joiningDateuse != null ?
                new ObjectParameter("JoiningDateuse", joiningDateuse) :
                new ObjectParameter("JoiningDateuse", typeof(string));
    
            var probationStartDateParameter = probationStartDate.HasValue ?
                new ObjectParameter("ProbationStartDate", probationStartDate) :
                new ObjectParameter("ProbationStartDate", typeof(System.DateTime));
    
            var probationToDateParameter = probationToDate.HasValue ?
                new ObjectParameter("ProbationToDate", probationToDate) :
                new ObjectParameter("ProbationToDate", typeof(System.DateTime));
    
            var probationDateuseParameter = probationDateuse != null ?
                new ObjectParameter("ProbationDateuse", probationDateuse) :
                new ObjectParameter("ProbationDateuse", typeof(string));
    
            var confirmationStartDateParameter = confirmationStartDate.HasValue ?
                new ObjectParameter("ConfirmationStartDate", confirmationStartDate) :
                new ObjectParameter("ConfirmationStartDate", typeof(System.DateTime));
    
            var confirmationToDateParameter = confirmationToDate.HasValue ?
                new ObjectParameter("ConfirmationToDate", confirmationToDate) :
                new ObjectParameter("ConfirmationToDate", typeof(System.DateTime));
    
            var confirmationDateuseParameter = confirmationDateuse != null ?
                new ObjectParameter("ConfirmationDateuse", confirmationDateuse) :
                new ObjectParameter("ConfirmationDateuse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_Select_AllEmployeeOfficialInfoListReport_Result>("proc_Rpt_Select_AllEmployeeOfficialInfoListReport", groupCodeParameter, companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeTypeIDParameter, emplyeeNatureIDParameter, gradeIDParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter, immediateSupervisorlIDParameter, headofDepartmentParameter, shiftIDParameter, employeeStatusParameter, grossSalaryFromParameter, grossSalaryToParameter, grossSalaryUseParameter, appointmentStartDateParameter, appointmentToDateParameter, appoingDateuseParameter, joiningStartDateParameter, joiningToDateParameter, joiningDateuseParameter, probationStartDateParameter, probationToDateParameter, probationDateuseParameter, confirmationStartDateParameter, confirmationToDateParameter, confirmationDateuseParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_Select_EmployeebyImmediateSupervisorOrHOD_Result> proc_Rpt_Select_EmployeebyImmediateSupervisorOrHOD(string immediateSupervisor, string headOfDepartment)
        {
            var immediateSupervisorParameter = immediateSupervisor != null ?
                new ObjectParameter("ImmediateSupervisor", immediateSupervisor) :
                new ObjectParameter("ImmediateSupervisor", typeof(string));
    
            var headOfDepartmentParameter = headOfDepartment != null ?
                new ObjectParameter("HeadOfDepartment", headOfDepartment) :
                new ObjectParameter("HeadOfDepartment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_Select_EmployeebyImmediateSupervisorOrHOD_Result>("proc_Rpt_Select_EmployeebyImmediateSupervisorOrHOD", immediateSupervisorParameter, headOfDepartmentParameter);
        }
    
        public virtual int proc_Rpt_Select_EmployeeCashReward(string companyID, string branchID, string departmentID, string designationID, string employeeID, string nationalID, string cashRewareDateUser, Nullable<System.DateTime> cashRewareStartDate, Nullable<System.DateTime> cashRewareToDate)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var cashRewareDateUserParameter = cashRewareDateUser != null ?
                new ObjectParameter("CashRewareDateUser", cashRewareDateUser) :
                new ObjectParameter("CashRewareDateUser", typeof(string));
    
            var cashRewareStartDateParameter = cashRewareStartDate.HasValue ?
                new ObjectParameter("CashRewareStartDate", cashRewareStartDate) :
                new ObjectParameter("CashRewareStartDate", typeof(System.DateTime));
    
            var cashRewareToDateParameter = cashRewareToDate.HasValue ?
                new ObjectParameter("CashRewareToDate", cashRewareToDate) :
                new ObjectParameter("CashRewareToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Select_EmployeeCashReward", companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeIDParameter, nationalIDParameter, cashRewareDateUserParameter, cashRewareStartDateParameter, cashRewareToDateParameter);
        }
    
        public virtual int proc_Rpt_Select_EmployeeFineEntry(string companyID, string branchID, string departmentID, string designationID, string employeeID, string nationalID, string cashRewareDateUser, Nullable<System.DateTime> cashRewareStartDate, Nullable<System.DateTime> cashRewareToDate)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var cashRewareDateUserParameter = cashRewareDateUser != null ?
                new ObjectParameter("CashRewareDateUser", cashRewareDateUser) :
                new ObjectParameter("CashRewareDateUser", typeof(string));
    
            var cashRewareStartDateParameter = cashRewareStartDate.HasValue ?
                new ObjectParameter("CashRewareStartDate", cashRewareStartDate) :
                new ObjectParameter("CashRewareStartDate", typeof(System.DateTime));
    
            var cashRewareToDateParameter = cashRewareToDate.HasValue ?
                new ObjectParameter("CashRewareToDate", cashRewareToDate) :
                new ObjectParameter("CashRewareToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Select_EmployeeFineEntry", companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeIDParameter, nationalIDParameter, cashRewareDateUserParameter, cashRewareStartDateParameter, cashRewareToDateParameter);
        }
    
        public virtual int proc_Rpt_Select_EmployeeLetterOfAppreciation(string companyID, string branchID, string departmentID, string designationID, string employeeID, string nationalID, string appreciationDateUser, Nullable<System.DateTime> appreciationStartDate, Nullable<System.DateTime> appreciationToDate)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var appreciationDateUserParameter = appreciationDateUser != null ?
                new ObjectParameter("AppreciationDateUser", appreciationDateUser) :
                new ObjectParameter("AppreciationDateUser", typeof(string));
    
            var appreciationStartDateParameter = appreciationStartDate.HasValue ?
                new ObjectParameter("AppreciationStartDate", appreciationStartDate) :
                new ObjectParameter("AppreciationStartDate", typeof(System.DateTime));
    
            var appreciationToDateParameter = appreciationToDate.HasValue ?
                new ObjectParameter("AppreciationToDate", appreciationToDate) :
                new ObjectParameter("AppreciationToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Select_EmployeeLetterOfAppreciation", companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeIDParameter, nationalIDParameter, appreciationDateUserParameter, appreciationStartDateParameter, appreciationToDateParameter);
        }
    
        public virtual int proc_Rpt_Select_EmployeeLetterOfWarning(string companyID, string branchID, string departmentID, string designationID, string employeeID, string nationalID, string appreciationDateUser, Nullable<System.DateTime> appreciationStartDate, Nullable<System.DateTime> appreciationToDate)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var appreciationDateUserParameter = appreciationDateUser != null ?
                new ObjectParameter("AppreciationDateUser", appreciationDateUser) :
                new ObjectParameter("AppreciationDateUser", typeof(string));
    
            var appreciationStartDateParameter = appreciationStartDate.HasValue ?
                new ObjectParameter("AppreciationStartDate", appreciationStartDate) :
                new ObjectParameter("AppreciationStartDate", typeof(System.DateTime));
    
            var appreciationToDateParameter = appreciationToDate.HasValue ?
                new ObjectParameter("AppreciationToDate", appreciationToDate) :
                new ObjectParameter("AppreciationToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Select_EmployeeLetterOfWarning", companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeIDParameter, nationalIDParameter, appreciationDateUserParameter, appreciationStartDateParameter, appreciationToDateParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_Select_EmployeeOfficialInfoListReport_Result> proc_Rpt_Select_EmployeeOfficialInfoListReport(string groupCode, string companyID, string branchID, string departmentID, string designationID, string employeeTypeID, string emplyeeNatureID, string gradeID, string nationalID, string tINID, string drivingLicenseID, string passportNo, string immediateSupervisorlID, string headofDepartment, string shiftID, string employeeStatus, Nullable<decimal> grossSalaryFrom, Nullable<decimal> grossSalaryTo, string grossSalaryUse, Nullable<System.DateTime> appointmentStartDate, Nullable<System.DateTime> appointmentToDate, string appoingDateuse, Nullable<System.DateTime> joiningStartDate, Nullable<System.DateTime> joiningToDate, string joiningDateuse, Nullable<System.DateTime> probationStartDate, Nullable<System.DateTime> probationToDate, string probationDateuse, Nullable<System.DateTime> confirmationStartDate, Nullable<System.DateTime> confirmationToDate, string confirmationDateuse)
        {
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeTypeIDParameter = employeeTypeID != null ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(string));
    
            var emplyeeNatureIDParameter = emplyeeNatureID != null ?
                new ObjectParameter("EmplyeeNatureID", emplyeeNatureID) :
                new ObjectParameter("EmplyeeNatureID", typeof(string));
    
            var gradeIDParameter = gradeID != null ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var immediateSupervisorlIDParameter = immediateSupervisorlID != null ?
                new ObjectParameter("ImmediateSupervisorlID", immediateSupervisorlID) :
                new ObjectParameter("ImmediateSupervisorlID", typeof(string));
    
            var headofDepartmentParameter = headofDepartment != null ?
                new ObjectParameter("HeadofDepartment", headofDepartment) :
                new ObjectParameter("HeadofDepartment", typeof(string));
    
            var shiftIDParameter = shiftID != null ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(string));
    
            var employeeStatusParameter = employeeStatus != null ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(string));
    
            var grossSalaryFromParameter = grossSalaryFrom.HasValue ?
                new ObjectParameter("GrossSalaryFrom", grossSalaryFrom) :
                new ObjectParameter("GrossSalaryFrom", typeof(decimal));
    
            var grossSalaryToParameter = grossSalaryTo.HasValue ?
                new ObjectParameter("GrossSalaryTo", grossSalaryTo) :
                new ObjectParameter("GrossSalaryTo", typeof(decimal));
    
            var grossSalaryUseParameter = grossSalaryUse != null ?
                new ObjectParameter("GrossSalaryUse", grossSalaryUse) :
                new ObjectParameter("GrossSalaryUse", typeof(string));
    
            var appointmentStartDateParameter = appointmentStartDate.HasValue ?
                new ObjectParameter("AppointmentStartDate", appointmentStartDate) :
                new ObjectParameter("AppointmentStartDate", typeof(System.DateTime));
    
            var appointmentToDateParameter = appointmentToDate.HasValue ?
                new ObjectParameter("AppointmentToDate", appointmentToDate) :
                new ObjectParameter("AppointmentToDate", typeof(System.DateTime));
    
            var appoingDateuseParameter = appoingDateuse != null ?
                new ObjectParameter("AppoingDateuse", appoingDateuse) :
                new ObjectParameter("AppoingDateuse", typeof(string));
    
            var joiningStartDateParameter = joiningStartDate.HasValue ?
                new ObjectParameter("JoiningStartDate", joiningStartDate) :
                new ObjectParameter("JoiningStartDate", typeof(System.DateTime));
    
            var joiningToDateParameter = joiningToDate.HasValue ?
                new ObjectParameter("JoiningToDate", joiningToDate) :
                new ObjectParameter("JoiningToDate", typeof(System.DateTime));
    
            var joiningDateuseParameter = joiningDateuse != null ?
                new ObjectParameter("JoiningDateuse", joiningDateuse) :
                new ObjectParameter("JoiningDateuse", typeof(string));
    
            var probationStartDateParameter = probationStartDate.HasValue ?
                new ObjectParameter("ProbationStartDate", probationStartDate) :
                new ObjectParameter("ProbationStartDate", typeof(System.DateTime));
    
            var probationToDateParameter = probationToDate.HasValue ?
                new ObjectParameter("ProbationToDate", probationToDate) :
                new ObjectParameter("ProbationToDate", typeof(System.DateTime));
    
            var probationDateuseParameter = probationDateuse != null ?
                new ObjectParameter("ProbationDateuse", probationDateuse) :
                new ObjectParameter("ProbationDateuse", typeof(string));
    
            var confirmationStartDateParameter = confirmationStartDate.HasValue ?
                new ObjectParameter("ConfirmationStartDate", confirmationStartDate) :
                new ObjectParameter("ConfirmationStartDate", typeof(System.DateTime));
    
            var confirmationToDateParameter = confirmationToDate.HasValue ?
                new ObjectParameter("ConfirmationToDate", confirmationToDate) :
                new ObjectParameter("ConfirmationToDate", typeof(System.DateTime));
    
            var confirmationDateuseParameter = confirmationDateuse != null ?
                new ObjectParameter("ConfirmationDateuse", confirmationDateuse) :
                new ObjectParameter("ConfirmationDateuse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_Select_EmployeeOfficialInfoListReport_Result>("proc_Rpt_Select_EmployeeOfficialInfoListReport", groupCodeParameter, companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeTypeIDParameter, emplyeeNatureIDParameter, gradeIDParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter, immediateSupervisorlIDParameter, headofDepartmentParameter, shiftIDParameter, employeeStatusParameter, grossSalaryFromParameter, grossSalaryToParameter, grossSalaryUseParameter, appointmentStartDateParameter, appointmentToDateParameter, appoingDateuseParameter, joiningStartDateParameter, joiningToDateParameter, joiningDateuseParameter, probationStartDateParameter, probationToDateParameter, probationDateuseParameter, confirmationStartDateParameter, confirmationToDateParameter, confirmationDateuseParameter);
        }
    
        public virtual ObjectResult<proc_Rpt_Select_SeparationEmployeeOfficialInfoListReport_Result> proc_Rpt_Select_SeparationEmployeeOfficialInfoListReport(string groupCode, string companyID, string branchID, string departmentID, string designationID, string employeeTypeID, string emplyeeNatureID, string gradeID, string nationalID, string tINID, string drivingLicenseID, string passportNo, string immediateSupervisorlID, string headofDepartment, string shiftID, string employeeStatus, Nullable<decimal> grossSalaryFrom, Nullable<decimal> grossSalaryTo, string grossSalaryUse, Nullable<System.DateTime> appointmentStartDate, Nullable<System.DateTime> appointmentToDate, string appoingDateuse, Nullable<System.DateTime> joiningStartDate, Nullable<System.DateTime> joiningToDate, string joiningDateuse, Nullable<System.DateTime> probationStartDate, Nullable<System.DateTime> probationToDate, string probationDateuse, Nullable<System.DateTime> confirmationStartDate, Nullable<System.DateTime> confirmationToDate, string confirmationDateuse)
        {
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var branchIDParameter = branchID != null ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(string));
    
            var departmentIDParameter = departmentID != null ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(string));
    
            var designationIDParameter = designationID != null ?
                new ObjectParameter("DesignationID", designationID) :
                new ObjectParameter("DesignationID", typeof(string));
    
            var employeeTypeIDParameter = employeeTypeID != null ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(string));
    
            var emplyeeNatureIDParameter = emplyeeNatureID != null ?
                new ObjectParameter("EmplyeeNatureID", emplyeeNatureID) :
                new ObjectParameter("EmplyeeNatureID", typeof(string));
    
            var gradeIDParameter = gradeID != null ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var tINIDParameter = tINID != null ?
                new ObjectParameter("TINID", tINID) :
                new ObjectParameter("TINID", typeof(string));
    
            var drivingLicenseIDParameter = drivingLicenseID != null ?
                new ObjectParameter("DrivingLicenseID", drivingLicenseID) :
                new ObjectParameter("DrivingLicenseID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var immediateSupervisorlIDParameter = immediateSupervisorlID != null ?
                new ObjectParameter("ImmediateSupervisorlID", immediateSupervisorlID) :
                new ObjectParameter("ImmediateSupervisorlID", typeof(string));
    
            var headofDepartmentParameter = headofDepartment != null ?
                new ObjectParameter("HeadofDepartment", headofDepartment) :
                new ObjectParameter("HeadofDepartment", typeof(string));
    
            var shiftIDParameter = shiftID != null ?
                new ObjectParameter("ShiftID", shiftID) :
                new ObjectParameter("ShiftID", typeof(string));
    
            var employeeStatusParameter = employeeStatus != null ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(string));
    
            var grossSalaryFromParameter = grossSalaryFrom.HasValue ?
                new ObjectParameter("GrossSalaryFrom", grossSalaryFrom) :
                new ObjectParameter("GrossSalaryFrom", typeof(decimal));
    
            var grossSalaryToParameter = grossSalaryTo.HasValue ?
                new ObjectParameter("GrossSalaryTo", grossSalaryTo) :
                new ObjectParameter("GrossSalaryTo", typeof(decimal));
    
            var grossSalaryUseParameter = grossSalaryUse != null ?
                new ObjectParameter("GrossSalaryUse", grossSalaryUse) :
                new ObjectParameter("GrossSalaryUse", typeof(string));
    
            var appointmentStartDateParameter = appointmentStartDate.HasValue ?
                new ObjectParameter("AppointmentStartDate", appointmentStartDate) :
                new ObjectParameter("AppointmentStartDate", typeof(System.DateTime));
    
            var appointmentToDateParameter = appointmentToDate.HasValue ?
                new ObjectParameter("AppointmentToDate", appointmentToDate) :
                new ObjectParameter("AppointmentToDate", typeof(System.DateTime));
    
            var appoingDateuseParameter = appoingDateuse != null ?
                new ObjectParameter("AppoingDateuse", appoingDateuse) :
                new ObjectParameter("AppoingDateuse", typeof(string));
    
            var joiningStartDateParameter = joiningStartDate.HasValue ?
                new ObjectParameter("JoiningStartDate", joiningStartDate) :
                new ObjectParameter("JoiningStartDate", typeof(System.DateTime));
    
            var joiningToDateParameter = joiningToDate.HasValue ?
                new ObjectParameter("JoiningToDate", joiningToDate) :
                new ObjectParameter("JoiningToDate", typeof(System.DateTime));
    
            var joiningDateuseParameter = joiningDateuse != null ?
                new ObjectParameter("JoiningDateuse", joiningDateuse) :
                new ObjectParameter("JoiningDateuse", typeof(string));
    
            var probationStartDateParameter = probationStartDate.HasValue ?
                new ObjectParameter("ProbationStartDate", probationStartDate) :
                new ObjectParameter("ProbationStartDate", typeof(System.DateTime));
    
            var probationToDateParameter = probationToDate.HasValue ?
                new ObjectParameter("ProbationToDate", probationToDate) :
                new ObjectParameter("ProbationToDate", typeof(System.DateTime));
    
            var probationDateuseParameter = probationDateuse != null ?
                new ObjectParameter("ProbationDateuse", probationDateuse) :
                new ObjectParameter("ProbationDateuse", typeof(string));
    
            var confirmationStartDateParameter = confirmationStartDate.HasValue ?
                new ObjectParameter("ConfirmationStartDate", confirmationStartDate) :
                new ObjectParameter("ConfirmationStartDate", typeof(System.DateTime));
    
            var confirmationToDateParameter = confirmationToDate.HasValue ?
                new ObjectParameter("ConfirmationToDate", confirmationToDate) :
                new ObjectParameter("ConfirmationToDate", typeof(System.DateTime));
    
            var confirmationDateuseParameter = confirmationDateuse != null ?
                new ObjectParameter("ConfirmationDateuse", confirmationDateuse) :
                new ObjectParameter("ConfirmationDateuse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Rpt_Select_SeparationEmployeeOfficialInfoListReport_Result>("proc_Rpt_Select_SeparationEmployeeOfficialInfoListReport", groupCodeParameter, companyIDParameter, branchIDParameter, departmentIDParameter, designationIDParameter, employeeTypeIDParameter, emplyeeNatureIDParameter, gradeIDParameter, nationalIDParameter, tINIDParameter, drivingLicenseIDParameter, passportNoParameter, immediateSupervisorlIDParameter, headofDepartmentParameter, shiftIDParameter, employeeStatusParameter, grossSalaryFromParameter, grossSalaryToParameter, grossSalaryUseParameter, appointmentStartDateParameter, appointmentToDateParameter, appoingDateuseParameter, joiningStartDateParameter, joiningToDateParameter, joiningDateuseParameter, probationStartDateParameter, probationToDateParameter, probationDateuseParameter, confirmationStartDateParameter, confirmationToDateParameter, confirmationDateuseParameter);
        }
    
        public virtual int proc_Rpt_Work_Experience_History_Report(string employeeID, string nationalityCode, string companyCode, string branch)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Rpt_Work_Experience_History_Report", employeeIDParameter, nationalityCodeParameter, companyCodeParameter, branchParameter);
        }
    
        public virtual int proc_RptTestCOA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RptTestCOA");
        }
    
        public virtual int proc_RptTestCOA_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RptTestCOA_2");
        }
    
        public virtual int proc_Select_Acc_COA_Temporary1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_Acc_COA_Temporary1");
        }
    
        public virtual int proc_Select_Acc_COA_Temporary2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_Acc_COA_Temporary2");
        }
    
        public virtual int proc_select_Acc_COA_TemporaryInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_select_Acc_COA_TemporaryInfo");
        }
    
        public virtual int proc_Select_AccountHeadByParentKey()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_AccountHeadByParentKey");
        }
    
        public virtual int proc_Select_AccountHeadTreeView(string nodeKey)
        {
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_AccountHeadTreeView", nodeKeyParameter);
        }
    
        public virtual ObjectResult<proc_Select_ApprovedLeave_Result> proc_Select_ApprovedLeave(Nullable<decimal> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_ApprovedLeave_Result>("proc_Select_ApprovedLeave", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_Select_ApprovedLeave_New_Result> proc_Select_ApprovedLeave_New(string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_ApprovedLeave_New_Result>("proc_Select_ApprovedLeave_New", employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_Select_ApprovedLeave_New_Mail_Result> proc_Select_ApprovedLeave_New_Mail(string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string leaveTypeId)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var leaveTypeIdParameter = leaveTypeId != null ?
                new ObjectParameter("LeaveTypeId", leaveTypeId) :
                new ObjectParameter("LeaveTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_ApprovedLeave_New_Mail_Result>("proc_Select_ApprovedLeave_New_Mail", employeeIDParameter, fromDateParameter, toDateParameter, leaveTypeIdParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLAllInfo(string subSusidiaryLedgerCodeNo)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLAllInfo", subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLAllInfo2(string subSusidiaryLedgerCodeNo)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLAllInfo2", subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLAllInfoLT1(string subSusidiaryLedgerCodeNo)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLAllInfoLT1", subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLAllInfoLT2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLAllInfoLT2");
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLInfo(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLInfo", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLInfo_2(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLInfo_2", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_CL_SCL_GGL_GLAndSLInfo_RT1(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_CL_SCL_GGL_GLAndSLInfo_RT1", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_ControlLedgerCode(Nullable<decimal> controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo.HasValue ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_ControlLedgerCode", controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_ControlLedgerCodeByControlLedgerCode(Nullable<decimal> controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo.HasValue ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_ControlLedgerCodeByControlLedgerCode", controlLedgerCodeNoParameter);
        }
    
        public virtual ObjectResult<proc_select_Emp_ApprovedLeaveList_Result> proc_select_Emp_ApprovedLeaveList(Nullable<decimal> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_select_Emp_ApprovedLeaveList_Result>("proc_select_Emp_ApprovedLeaveList", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_Select_EmpFinancialFDTO_Result> proc_Select_EmpFinancialFDTO(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_EmpFinancialFDTO_Result>("proc_Select_EmpFinancialFDTO", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_Select_EmpFinancialFDTO_2_Result> proc_Select_EmpFinancialFDTO_2(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_EmpFinancialFDTO_2_Result>("proc_Select_EmpFinancialFDTO_2", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_Select_EmployeeInf0_1_Result> proc_Select_EmployeeInf0_1(string employeeID, string companyCode)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_EmployeeInf0_1_Result>("proc_Select_EmployeeInf0_1", employeeIDParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_EmployeeInf0_2_Result> proc_Select_EmployeeInf0_2(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_EmployeeInf0_2_Result>("proc_Select_EmployeeInf0_2", employeeIDParameter);
        }
    
        public virtual int proc_Select_FinancialYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_FinancialYear");
        }
    
        public virtual int proc_Select_GeneralLedgerCodeNo(Nullable<decimal> generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo.HasValue ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_GeneralLedgerCodeNo", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_GeneralLedgerCodeNoByGeneralLedgerCodeNo(Nullable<decimal> generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo.HasValue ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_GeneralLedgerCodeNoByGeneralLedgerCodeNo", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_GeneralLedgerCodeNoBySubControlLedgerCode(Nullable<decimal> subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo.HasValue ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_GeneralLedgerCodeNoBySubControlLedgerCode", subControlLedgerCodeNoParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_ATD_AttendanceType_Result> proc_Select_HRM_ATD_AttendanceType(string attendanceTypeCode)
        {
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_ATD_AttendanceType_Result>("proc_Select_HRM_ATD_AttendanceType", attendanceTypeCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_ATD_CompanyWeekEnd_Result> proc_Select_HRM_ATD_CompanyWeekEnd(string companyWeekEndCode)
        {
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_ATD_CompanyWeekEnd_Result>("proc_Select_HRM_ATD_CompanyWeekEnd", companyWeekEndCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_Select_HRM_ATD_CompanyWeekEnd_SUBSTRING(string companyWeekEndCode)
        {
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_Select_HRM_ATD_CompanyWeekEnd_SUBSTRING", companyWeekEndCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_Select_HRM_ATD_CompanyWeekEnd_SUBSTRING_2(string empAttdSetupCode)
        {
            var empAttdSetupCodeParameter = empAttdSetupCode != null ?
                new ObjectParameter("EmpAttdSetupCode", empAttdSetupCode) :
                new ObjectParameter("EmpAttdSetupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_Select_HRM_ATD_CompanyWeekEnd_SUBSTRING_2", empAttdSetupCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_ATD_Holiday_Result> proc_Select_HRM_ATD_Holiday(string holidayCode)
        {
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_ATD_Holiday_Result>("proc_Select_HRM_ATD_Holiday", holidayCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_ATD_Shift_Result> proc_Select_HRM_ATD_Shift(string shiftCode)
        {
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_ATD_Shift_Result>("proc_Select_HRM_ATD_Shift", shiftCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_ATD_WorkingDay_Result> proc_Select_HRM_ATD_WorkingDay(string workingDayCode)
        {
            var workingDayCodeParameter = workingDayCode != null ?
                new ObjectParameter("WorkingDayCode", workingDayCode) :
                new ObjectParameter("WorkingDayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_ATD_WorkingDay_Result>("proc_Select_HRM_ATD_WorkingDay", workingDayCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_HRM_Def_EmployeeException_Result> proc_Select_HRM_Def_EmployeeException(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_HRM_Def_EmployeeException_Result>("proc_Select_HRM_Def_EmployeeException", employeeIDParameter);
        }
    
        public virtual ObjectResult<proc_Select_LoginEmployeeInfo_Result> proc_Select_LoginEmployeeInfo(string employeeCode, string companyCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_LoginEmployeeInfo_Result>("proc_Select_LoginEmployeeInfo", employeeCodeParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_ManualAttendanceInfo_Result> proc_Select_ManualAttendanceInfo(string manualCode, string companyCode)
        {
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_ManualAttendanceInfo_Result>("proc_Select_ManualAttendanceInfo", manualCodeParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<proc_Select_ManualAttendanceInfo_S_Result> proc_Select_ManualAttendanceInfo_S(string companyCode, string employeeID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Select_ManualAttendanceInfo_S_Result>("proc_Select_ManualAttendanceInfo_S", companyCodeParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxAttendanceTypeCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxAttendanceTypeCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxBloodGroupCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxBloodGroupCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxBranchCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxBranchCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxBulkEntryCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxBulkEntryCode");
        }
    
        public virtual int proc_Select_MaxCOACode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxCOACode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxCompanyWeekEndCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxCompanyWeekEndCode");
        }
    
        public virtual int proc_Select_MaxControlLedgerCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxControlLedgerCode");
        }
    
        public virtual int proc_Select_MaxCostCenterCodeNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxCostCenterCodeNo");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxDepartmentCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxDepartmentCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxDivisionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxDivisionCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxDivisionGradeCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxDivisionGradeCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpAttdSetupCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpAttdSetupCode");
        }
    
        public virtual ObjectResult<string> proc_Select_MaxEmpEduCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_Select_MaxEmpEduCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmployeeExceptionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmployeeExceptionCode");
        }
    
        public virtual ObjectResult<string> proc_Select_MaxEmployeeIdConfiguration_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_Select_MaxEmployeeIdConfiguration_Code");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmployeeWeekEndCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmployeeWeekEndCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmploymentNatureId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmploymentNatureId");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpMedicalInfoCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpMedicalInfoCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpMembershipCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpMembershipCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpRefCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpRefCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpTriCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpTriCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxEmpTypeCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxEmpTypeCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxExamTitleCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxExamTitleCode");
        }
    
        public virtual int proc_Select_MaxFinancialCodeNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxFinancialCodeNo");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxGradeCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxGradeCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxHolidayCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxHolidayCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxInstituteCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxInstituteCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxLeaveTypeCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxLeaveTypeCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxLineCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxLineCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxLineCodeDesignationCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxLineCodeDesignationCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxManualCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxManualCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxMaritalStatusCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxMaritalStatusCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxNationalityCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxNationalityCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxOccupationCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxOccupationCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxPeriodCodeNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxPeriodCodeNo");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxRelationshipCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxRelationshipCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxReligionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxReligionCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxSectionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxSectionCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxSexCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxSexCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxShiftCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxShiftCode");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxTrainingTitleCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxTrainingTitleCode");
        }
    
        public virtual int proc_Select_MaxVoucherEntryCodeNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxVoucherEntryCodeNo");
        }
    
        public virtual int proc_Select_MaxVoucherEntryDetailsCodeNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxVoucherEntryDetailsCodeNo");
        }
    
        public virtual int proc_Select_MaxVoucherType_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_MaxVoucherType_Code");
        }
    
        public virtual ObjectResult<Nullable<int>> proc_Select_MaxWorkingDayCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_Select_MaxWorkingDayCode");
        }
    
        public virtual int proc_Select_SLCodeNoBySLCodeNo(Nullable<decimal> subsidiaryLedgerCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SLCodeNoBySLCodeNo", subsidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubControlLedgerCodeBySubControlLedgerCode(Nullable<decimal> subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo.HasValue ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubControlLedgerCodeBySubControlLedgerCode", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubControlLedgerCodeNo(Nullable<decimal> subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo.HasValue ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubControlLedgerCodeNo", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubControlLedgerCodeNoByControlLedgerCode(Nullable<decimal> controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo.HasValue ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubControlLedgerCodeNoByControlLedgerCode", controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubControlLedgerCodeNoBySubControlLedgerCodeNo(Nullable<decimal> subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo.HasValue ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubControlLedgerCodeNoBySubControlLedgerCodeNo", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubsidiaryLedgerCodeNo(Nullable<decimal> susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubsidiaryLedgerCodeNo", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubsidiaryLedgerCodeNoNoBySubsidiaryLedgerCodeNo(Nullable<decimal> subsidiaryLedgerCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubsidiaryLedgerCodeNoNoBySubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubSusidiaryLedgerCodeNoBySubsidiaryLedgerCodeNo_(Nullable<decimal> subsidiaryLedgerCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubSusidiaryLedgerCodeNoBySubsidiaryLedgerCodeNo_", subsidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SubSusidiaryLedgerCodeNoBySubsidiaryLedgerCodeNo1(Nullable<decimal> subsidiaryLedgerCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SubSusidiaryLedgerCodeNoBySubsidiaryLedgerCodeNo1", subsidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_SusidiaryLedgerCodeNoByGeneralLedgerCodeNo_(Nullable<decimal> generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo.HasValue ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_SusidiaryLedgerCodeNoByGeneralLedgerCodeNo_", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Select_wbFrm_EmployeeOfficialInfo_Nipa(string employeeCode, string companyCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Select_wbFrm_EmployeeOfficialInfo_Nipa", employeeCodeParameter, companyCodeParameter);
        }
    
        public virtual int proc_SelectCL_SCL_GGLAndGLInfoByGGLCode(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_SelectCL_SCL_GGLAndGLInfoByGGLCode", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_SelectCL_SCL_GGLAndGLInfoBySLCode_1(string subSusidiaryLedgerCodeNo)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_SelectCL_SCL_GGLAndGLInfoBySLCode_1", subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_SelectCLAndSCL_InfoByGGLCode(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_SelectCLAndSCL_InfoByGGLCode", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Test(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Test", dateParameter);
        }
    
        public virtual int proc_Update__ReligionCode(Nullable<decimal> autoId, string religionCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update__ReligionCode", autoIdParameter, religionCodeParameter);
        }
    
        public virtual int proc_Update_Acc_ChartOfAccounts(Nullable<decimal> autoId, string cOACode, string nodeKey)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var cOACodeParameter = cOACode != null ?
                new ObjectParameter("COACode", cOACode) :
                new ObjectParameter("COACode", typeof(string));
    
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_Acc_ChartOfAccounts", autoIdParameter, cOACodeParameter, nodeKeyParameter);
        }
    
        public virtual int proc_Update_AttendanceTypeCode(Nullable<decimal> autoId, string attendanceTypeCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_AttendanceTypeCode", autoIdParameter, attendanceTypeCodeParameter);
        }
    
        public virtual int proc_Update_BloodGroupCode(Nullable<decimal> autoId, string bloodGroupCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_BloodGroupCode", autoIdParameter, bloodGroupCodeParameter);
        }
    
        public virtual int proc_Update_BranchCode(Nullable<decimal> autoId, string branchCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_BranchCode", autoIdParameter, branchCodeParameter);
        }
    
        public virtual int proc_Update_BulkEntryCode(Nullable<decimal> autoId, string bulkEntryCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var bulkEntryCodeParameter = bulkEntryCode != null ?
                new ObjectParameter("BulkEntryCode", bulkEntryCode) :
                new ObjectParameter("BulkEntryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_BulkEntryCode", autoIdParameter, bulkEntryCodeParameter);
        }
    
        public virtual int proc_Update_CompanyWeekEndCode(Nullable<decimal> autoId, string companyWeekEndCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_CompanyWeekEndCode", autoIdParameter, companyWeekEndCodeParameter);
        }
    
        public virtual int proc_Update_ControlLedgerCodeNo(Nullable<decimal> autoId, string controlLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_ControlLedgerCodeNo", autoIdParameter, controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_CostCenterCodeNo(Nullable<decimal> autoId, string costCenterCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_CostCenterCodeNo", autoIdParameter, costCenterCodeNoParameter);
        }
    
        public virtual int proc_Update_DepartmentCode(Nullable<decimal> autoId, string departmentCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_DepartmentCode", autoIdParameter, departmentCodeParameter);
        }
    
        public virtual int proc_Update_DesignationCode(Nullable<decimal> autoId, string designationCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_DesignationCode", autoIdParameter, designationCodeParameter);
        }
    
        public virtual int proc_Update_DivisionCode(Nullable<decimal> autoId, string divisionCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_DivisionCode", autoIdParameter, divisionCodeParameter);
        }
    
        public virtual int proc_Update_DivisionGradeCode(Nullable<decimal> autoId, string divisionGradeCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var divisionGradeCodeParameter = divisionGradeCode != null ?
                new ObjectParameter("DivisionGradeCode", divisionGradeCode) :
                new ObjectParameter("DivisionGradeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_DivisionGradeCode", autoIdParameter, divisionGradeCodeParameter);
        }
    
        public virtual int proc_Update_EmpAttdSetupCode(Nullable<decimal> autoId, string empAttdSetupCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empAttdSetupCodeParameter = empAttdSetupCode != null ?
                new ObjectParameter("EmpAttdSetupCode", empAttdSetupCode) :
                new ObjectParameter("EmpAttdSetupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpAttdSetupCode", autoIdParameter, empAttdSetupCodeParameter);
        }
    
        public virtual int proc_Update_EmpEduCode(Nullable<decimal> autoId, string empEduCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empEduCodeParameter = empEduCode != null ?
                new ObjectParameter("EmpEduCode", empEduCode) :
                new ObjectParameter("EmpEduCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpEduCode", autoIdParameter, empEduCodeParameter);
        }
    
        public virtual int proc_Update_EmployeeExceptionCode(Nullable<decimal> autoId, string employeeExceptionCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeExceptionCodeParameter = employeeExceptionCode != null ?
                new ObjectParameter("EmployeeExceptionCode", employeeExceptionCode) :
                new ObjectParameter("EmployeeExceptionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmployeeExceptionCode", autoIdParameter, employeeExceptionCodeParameter);
        }
    
        public virtual int proc_Update_EmployeeIdConfiguration_Code(Nullable<decimal> autoId, string employeeIdConfiguration_Code)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeIdConfiguration_CodeParameter = employeeIdConfiguration_Code != null ?
                new ObjectParameter("EmployeeIdConfiguration_Code", employeeIdConfiguration_Code) :
                new ObjectParameter("EmployeeIdConfiguration_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmployeeIdConfiguration_Code", autoIdParameter, employeeIdConfiguration_CodeParameter);
        }
    
        public virtual int proc_Update_EmployeeWeekEndCode(Nullable<decimal> autoId, string employeeWeekEndCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeWeekEndCodeParameter = employeeWeekEndCode != null ?
                new ObjectParameter("EmployeeWeekEndCode", employeeWeekEndCode) :
                new ObjectParameter("EmployeeWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmployeeWeekEndCode", autoIdParameter, employeeWeekEndCodeParameter);
        }
    
        public virtual int proc_Update_EmploymentNatureId(Nullable<decimal> tC, string employmentNatureId)
        {
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(decimal));
    
            var employmentNatureIdParameter = employmentNatureId != null ?
                new ObjectParameter("EmploymentNatureId", employmentNatureId) :
                new ObjectParameter("EmploymentNatureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmploymentNatureId", tCParameter, employmentNatureIdParameter);
        }
    
        public virtual int proc_Update_EmpMedicalInfoCode(Nullable<decimal> autoId, string empMedicalInfoCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empMedicalInfoCodeParameter = empMedicalInfoCode != null ?
                new ObjectParameter("EmpMedicalInfoCode", empMedicalInfoCode) :
                new ObjectParameter("EmpMedicalInfoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpMedicalInfoCode", autoIdParameter, empMedicalInfoCodeParameter);
        }
    
        public virtual int proc_Update_EmpMembershipCode(Nullable<decimal> autoId, string empMembershipCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empMembershipCodeParameter = empMembershipCode != null ?
                new ObjectParameter("EmpMembershipCode", empMembershipCode) :
                new ObjectParameter("EmpMembershipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpMembershipCode", autoIdParameter, empMembershipCodeParameter);
        }
    
        public virtual int proc_Update_EmpRefCode(Nullable<decimal> autoId, string empRefCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empRefCodeParameter = empRefCode != null ?
                new ObjectParameter("EmpRefCode", empRefCode) :
                new ObjectParameter("EmpRefCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpRefCode", autoIdParameter, empRefCodeParameter);
        }
    
        public virtual int proc_Update_EmpTriCode(Nullable<decimal> autoId, string empTriCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empTriCodeParameter = empTriCode != null ?
                new ObjectParameter("EmpTriCode", empTriCode) :
                new ObjectParameter("EmpTriCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpTriCode", autoIdParameter, empTriCodeParameter);
        }
    
        public virtual int proc_Update_EmpTypeCode(Nullable<decimal> autoId, string empTypeCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_EmpTypeCode", autoIdParameter, empTypeCodeParameter);
        }
    
        public virtual int proc_Update_ExamTitleCode(Nullable<decimal> autoId, string examTitleCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var examTitleCodeParameter = examTitleCode != null ?
                new ObjectParameter("ExamTitleCode", examTitleCode) :
                new ObjectParameter("ExamTitleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_ExamTitleCode", autoIdParameter, examTitleCodeParameter);
        }
    
        public virtual int proc_Update_FinancialCodeNo(Nullable<decimal> autoId, string financialCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_FinancialCodeNo", autoIdParameter, financialCodeNoParameter);
        }
    
        public virtual int proc_Update_GeneralLedgerCodeNo(Nullable<decimal> autoId, string generalLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_GeneralLedgerCodeNo", autoIdParameter, generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_GradeCode(Nullable<decimal> autoId, string gradeCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_GradeCode", autoIdParameter, gradeCodeParameter);
        }
    
        public virtual int proc_Update_HolidayCode(Nullable<decimal> autoId, string holidayCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_HolidayCode", autoIdParameter, holidayCodeParameter);
        }
    
        public virtual int proc_Update_InstituteCode(Nullable<decimal> autoId, string instituteCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var instituteCodeParameter = instituteCode != null ?
                new ObjectParameter("InstituteCode", instituteCode) :
                new ObjectParameter("InstituteCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_InstituteCode", autoIdParameter, instituteCodeParameter);
        }
    
        public virtual int proc_Update_LineCode(Nullable<decimal> autoId, string lineCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_LineCode", autoIdParameter, lineCodeParameter);
        }
    
        public virtual int proc_Update_ManualCode(Nullable<decimal> autoId, string manualCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_ManualCode", autoIdParameter, manualCodeParameter);
        }
    
        public virtual int proc_Update_MaritalStatusCode(Nullable<decimal> autoId, string maritalStatusCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_MaritalStatusCode", autoIdParameter, maritalStatusCodeParameter);
        }
    
        public virtual int proc_Update_NationalityCode(Nullable<decimal> autoId, string nationalityCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_NationalityCode", autoIdParameter, nationalityCodeParameter);
        }
    
        public virtual int proc_Update_OccupationCode(Nullable<decimal> autoId, string occupationCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var occupationCodeParameter = occupationCode != null ?
                new ObjectParameter("OccupationCode", occupationCode) :
                new ObjectParameter("OccupationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_OccupationCode", autoIdParameter, occupationCodeParameter);
        }
    
        public virtual int proc_Update_PeriodCodeNo(Nullable<decimal> autoId, string periodCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var periodCodeNoParameter = periodCodeNo != null ?
                new ObjectParameter("PeriodCodeNo", periodCodeNo) :
                new ObjectParameter("PeriodCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_PeriodCodeNo", autoIdParameter, periodCodeNoParameter);
        }
    
        public virtual int proc_Update_RelationshipCode(Nullable<decimal> autoId, string relationshipCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var relationshipCodeParameter = relationshipCode != null ?
                new ObjectParameter("RelationshipCode", relationshipCode) :
                new ObjectParameter("RelationshipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_RelationshipCode", autoIdParameter, relationshipCodeParameter);
        }
    
        public virtual int proc_Update_SectionCode(Nullable<decimal> autoId, string sectionCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SectionCode", autoIdParameter, sectionCodeParameter);
        }
    
        public virtual int proc_Update_SexCode(Nullable<decimal> autoId, string sexCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SexCode", autoIdParameter, sexCodeParameter);
        }
    
        public virtual int proc_Update_ShiftCode(Nullable<decimal> autoId, string shiftCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_ShiftCode", autoIdParameter, shiftCodeParameter);
        }
    
        public virtual int proc_Update_SSLCode(Nullable<decimal> autoId, string subSusidiaryLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SSLCode", autoIdParameter, subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_SubControlLedgerCodeNo(Nullable<decimal> autoId, string subControlLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SubControlLedgerCodeNo", autoIdParameter, subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_SubSusidiaryLedgerCodeNo(Nullable<decimal> autoId, string subSusidiaryLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SubSusidiaryLedgerCodeNo", autoIdParameter, subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_SusidiaryLedgerCodeNo(Nullable<decimal> autoId, string susidiaryLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_SusidiaryLedgerCodeNo", autoIdParameter, susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Update_TrainingTitleCode(Nullable<decimal> autoId, string trainingTitleCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_TrainingTitleCode", autoIdParameter, trainingTitleCodeParameter);
        }
    
        public virtual int proc_Update_VoucherEntryCodeNo(Nullable<decimal> autoId, string voucherEntryCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_VoucherEntryCodeNo", autoIdParameter, voucherEntryCodeNoParameter);
        }
    
        public virtual int proc_Update_VoucherEntryDetailsCodeNo(Nullable<decimal> autoId, string voucherEntryDetailsCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherEntryDetailsCodeNoParameter = voucherEntryDetailsCodeNo != null ?
                new ObjectParameter("VoucherEntryDetailsCodeNo", voucherEntryDetailsCodeNo) :
                new ObjectParameter("VoucherEntryDetailsCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_VoucherEntryDetailsCodeNo", autoIdParameter, voucherEntryDetailsCodeNoParameter);
        }
    
        public virtual int proc_Update_VoucherType_Code(Nullable<decimal> autoId, string voucherType_Code)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_VoucherType_Code", autoIdParameter, voucherType_CodeParameter);
        }
    
        public virtual int proc_Update_VoucherTypeCodeNo(Nullable<decimal> autoId, string voucherTypeCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherTypeCodeNoParameter = voucherTypeCodeNo != null ?
                new ObjectParameter("VoucherTypeCodeNo", voucherTypeCodeNo) :
                new ObjectParameter("VoucherTypeCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_VoucherTypeCodeNo", autoIdParameter, voucherTypeCodeNoParameter);
        }
    
        public virtual int proc_Update_WorkingDayCode(Nullable<decimal> autoId, string workingDayCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var workingDayCodeParameter = workingDayCode != null ?
                new ObjectParameter("WorkingDayCode", workingDayCode) :
                new ObjectParameter("WorkingDayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Update_WorkingDayCode", autoIdParameter, workingDayCodeParameter);
        }
    
        public virtual int proc_UpdateToWarehouse(string warehouseID, string warehouseName, string warehouseAddess, string whTypeID, string city, string state, string zipCode, string countryId, string area, string remarks, string contactPerson, string designation, string contactPersonPhone, string contactPersonEmail, string lUser, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var warehouseIDParameter = warehouseID != null ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(string));
    
            var warehouseNameParameter = warehouseName != null ?
                new ObjectParameter("WarehouseName", warehouseName) :
                new ObjectParameter("WarehouseName", typeof(string));
    
            var warehouseAddessParameter = warehouseAddess != null ?
                new ObjectParameter("WarehouseAddess", warehouseAddess) :
                new ObjectParameter("WarehouseAddess", typeof(string));
    
            var whTypeIDParameter = whTypeID != null ?
                new ObjectParameter("WhTypeID", whTypeID) :
                new ObjectParameter("WhTypeID", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var countryIdParameter = countryId != null ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var contactPersonPhoneParameter = contactPersonPhone != null ?
                new ObjectParameter("ContactPersonPhone", contactPersonPhone) :
                new ObjectParameter("ContactPersonPhone", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateToWarehouse", warehouseIDParameter, warehouseNameParameter, warehouseAddessParameter, whTypeIDParameter, cityParameter, stateParameter, zipCodeParameter, countryIdParameter, areaParameter, remarksParameter, contactPersonParameter, designationParameter, contactPersonPhoneParameter, contactPersonEmailParameter, lUserParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_VehicleReceiveHistoryList(string companyCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string vehicleType, string brandID, string modelID, string registrationNo, string vIN, string manufactureYear)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("dateUse", dateUse) :
                new ObjectParameter("dateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var brandIDParameter = brandID != null ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(string));
    
            var modelIDParameter = modelID != null ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var manufactureYearParameter = manufactureYear != null ?
                new ObjectParameter("ManufactureYear", manufactureYear) :
                new ObjectParameter("ManufactureYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VehicleReceiveHistoryList", companyCodeParameter, dateUseParameter, fromDateParameter, toDateParameter, vehicleTypeParameter, brandIDParameter, modelIDParameter, registrationNoParameter, vINParameter, manufactureYearParameter);
        }
    
        public virtual int proc_VehicleRepariWorkFlow(string companyCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string vehicleType, string brandID, string modelID, string registrationNo, string vIN, string manufactureYear)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("dateUse", dateUse) :
                new ObjectParameter("dateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var brandIDParameter = brandID != null ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(string));
    
            var modelIDParameter = modelID != null ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var manufactureYearParameter = manufactureYear != null ?
                new ObjectParameter("ManufactureYear", manufactureYear) :
                new ObjectParameter("ManufactureYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VehicleRepariWorkFlow", companyCodeParameter, dateUseParameter, fromDateParameter, toDateParameter, vehicleTypeParameter, brandIDParameter, modelIDParameter, registrationNoParameter, vINParameter, manufactureYearParameter);
        }
    
        public virtual int proc_wbFrm_Acc_SubSubsidiaryLedger_Insert_Acc_SubSubsidiaryLedger(Nullable<decimal> subsidiaryLedgerCodeNo, string subSusidiaryLedgerCodeNo, string subSubsidiaryLedgerName, string shortName, Nullable<decimal> openingBalance, string trType, Nullable<System.DateTime> openingDate, string isActive, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string cashFlowTypeID, string costCenterCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var subSubsidiaryLedgerNameParameter = subSubsidiaryLedgerName != null ?
                new ObjectParameter("SubSubsidiaryLedgerName", subSubsidiaryLedgerName) :
                new ObjectParameter("SubSubsidiaryLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var openingDateParameter = openingDate.HasValue ?
                new ObjectParameter("OpeningDate", openingDate) :
                new ObjectParameter("OpeningDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var cashFlowTypeIDParameter = cashFlowTypeID != null ?
                new ObjectParameter("CashFlowTypeID", cashFlowTypeID) :
                new ObjectParameter("CashFlowTypeID", typeof(string));
    
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Acc_SubSubsidiaryLedger_Insert_Acc_SubSubsidiaryLedger", subsidiaryLedgerCodeNoParameter, subSusidiaryLedgerCodeNoParameter, subSubsidiaryLedgerNameParameter, shortNameParameter, openingBalanceParameter, trTypeParameter, openingDateParameter, isActiveParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, cashFlowTypeIDParameter, costCenterCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_Acc_SubSubsidiaryLedger_Update_Acc_SubSubsidiaryLedger_1(Nullable<decimal> autoId, Nullable<decimal> subsidiaryLedgerCodeNo, string subSusidiaryLedgerCodeNo, string subSubsidiaryLedgerName, string shortName, Nullable<decimal> openingBalance, string trType, Nullable<System.DateTime> openingDate, string isActive, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(decimal));
    
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            var subSubsidiaryLedgerNameParameter = subSubsidiaryLedgerName != null ?
                new ObjectParameter("SubSubsidiaryLedgerName", subSubsidiaryLedgerName) :
                new ObjectParameter("SubSubsidiaryLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var openingDateParameter = openingDate.HasValue ?
                new ObjectParameter("OpeningDate", openingDate) :
                new ObjectParameter("OpeningDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Acc_SubSubsidiaryLedger_Update_Acc_SubSubsidiaryLedger_1", autoIdParameter, subsidiaryLedgerCodeNoParameter, subSusidiaryLedgerCodeNoParameter, subSubsidiaryLedgerNameParameter, shortNameParameter, openingBalanceParameter, trTypeParameter, openingDateParameter, isActiveParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_BloodGroup_Insert_HRM_Def_BloodGroup(string bloodGroupCode, string bloodGroup, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_BloodGroup_Insert_HRM_Def_BloodGroup", bloodGroupCodeParameter, bloodGroupParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_BloodGroup_Update_HRM_Def_BloodGroup(Nullable<decimal> autoId, string bloodGroupCode, string bloodGroup, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_BloodGroup_Update_HRM_Def_BloodGroup", autoIdParameter, bloodGroupCodeParameter, bloodGroupParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<proc_wbFrm_Brance_Select_Core_Branch_Result> proc_wbFrm_Brance_Select_Core_Branch(string branchCode)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrm_Brance_Select_Core_Branch_Result>("proc_wbFrm_Brance_Select_Core_Branch", branchCodeParameter);
        }
    
        public virtual ObjectResult<proc_wbFrm_Brance_Select_Core_Branch_2_Result> proc_wbFrm_Brance_Select_Core_Branch_2(string branchCode)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrm_Brance_Select_Core_Branch_2_Result>("proc_wbFrm_Brance_Select_Core_Branch_2", branchCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Branch_Update_Core_Branch(Nullable<decimal> autoId, string branchCode, string companyCode, string branchName, string address, string phone, string fax, string email, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaBranch)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaBranchParameter = banglaBranch != null ?
                new ObjectParameter("BanglaBranch", banglaBranch) :
                new ObjectParameter("BanglaBranch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Branch_Update_Core_Branch", autoIdParameter, branchCodeParameter, companyCodeParameter, branchNameParameter, addressParameter, phoneParameter, faxParameter, emailParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaBranchParameter);
        }
    
        public virtual int proc_wbFrm_ControlLedger_Insert_Acc_ChartOfAccounts(string cOACode, string parentKey, string nodeKey, string accountHead, string shortName, Nullable<decimal> level, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var cOACodeParameter = cOACode != null ?
                new ObjectParameter("COACode", cOACode) :
                new ObjectParameter("COACode", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            var accountHeadParameter = accountHead != null ?
                new ObjectParameter("AccountHead", accountHead) :
                new ObjectParameter("AccountHead", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(decimal));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_ControlLedger_Insert_Acc_ChartOfAccounts", cOACodeParameter, parentKeyParameter, nodeKeyParameter, accountHeadParameter, shortNameParameter, levelParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_ControlLedger_Insert_Acc_ControlLedger(string controlLedgerCodeNo, string controlLedgerName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            var controlLedgerNameParameter = controlLedgerName != null ?
                new ObjectParameter("ControlLedgerName", controlLedgerName) :
                new ObjectParameter("ControlLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_ControlLedger_Insert_Acc_ControlLedger", controlLedgerCodeNoParameter, controlLedgerNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_ControlLedger_Update_Acc_ChartOfAccounts(Nullable<decimal> autoId, string cOACode, string parentKey, string nodeKey, string accountHead, string shortName, Nullable<decimal> level, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("AutoId", autoId) :
                new ObjectParameter("AutoId", typeof(decimal));
    
            var cOACodeParameter = cOACode != null ?
                new ObjectParameter("COACode", cOACode) :
                new ObjectParameter("COACode", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            var accountHeadParameter = accountHead != null ?
                new ObjectParameter("AccountHead", accountHead) :
                new ObjectParameter("AccountHead", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(decimal));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_ControlLedger_Update_Acc_ChartOfAccounts", autoIdParameter, cOACodeParameter, parentKeyParameter, nodeKeyParameter, accountHeadParameter, shortNameParameter, levelParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_ControlLedger_Update_Acc_ControlLedger(Nullable<decimal> autoId, string controlLedgerCodeNo, string controlLedgerName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            var controlLedgerNameParameter = controlLedgerName != null ?
                new ObjectParameter("ControlLedgerName", controlLedgerName) :
                new ObjectParameter("ControlLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_ControlLedger_Update_Acc_ControlLedger", autoIdParameter, controlLedgerCodeNoParameter, controlLedgerNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_CostCenter_Insert_Acc_CostCenter(string costCenterCodeNo, string costCenterName, string description, string isActive, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            var costCenterNameParameter = costCenterName != null ?
                new ObjectParameter("CostCenterName", costCenterName) :
                new ObjectParameter("CostCenterName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_CostCenter_Insert_Acc_CostCenter", costCenterCodeNoParameter, costCenterNameParameter, descriptionParameter, isActiveParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_CostCenter_Update_Acc_CostCenter(Nullable<decimal> autoId, string costCenterCodeNo, string costCenterName, string description, string isActive, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            var costCenterNameParameter = costCenterName != null ?
                new ObjectParameter("CostCenterName", costCenterName) :
                new ObjectParameter("CostCenterName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_CostCenter_Update_Acc_CostCenter", autoIdParameter, costCenterCodeNoParameter, costCenterNameParameter, descriptionParameter, isActiveParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Def_EmployeeMembership_Insert_HRM_EmployeeMembership(string empMembershipCode, string employeeCode, string organization, string address, string memberId, string position, Nullable<System.DateTime> joinDate, Nullable<System.DateTime> expires, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var empMembershipCodeParameter = empMembershipCode != null ?
                new ObjectParameter("EmpMembershipCode", empMembershipCode) :
                new ObjectParameter("EmpMembershipCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var joinDateParameter = joinDate.HasValue ?
                new ObjectParameter("JoinDate", joinDate) :
                new ObjectParameter("JoinDate", typeof(System.DateTime));
    
            var expiresParameter = expires.HasValue ?
                new ObjectParameter("Expires", expires) :
                new ObjectParameter("Expires", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Def_EmployeeMembership_Insert_HRM_EmployeeMembership", empMembershipCodeParameter, employeeCodeParameter, organizationParameter, addressParameter, memberIdParameter, positionParameter, joinDateParameter, expiresParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Def_EmployeeMembership_Update_HRM_EmployeeMembership(Nullable<decimal> autoId, string empMembershipCode, string employeeCode, string organization, string address, string memberId, string position, Nullable<System.DateTime> joinDate, Nullable<System.DateTime> expires, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empMembershipCodeParameter = empMembershipCode != null ?
                new ObjectParameter("EmpMembershipCode", empMembershipCode) :
                new ObjectParameter("EmpMembershipCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var joinDateParameter = joinDate.HasValue ?
                new ObjectParameter("JoinDate", joinDate) :
                new ObjectParameter("JoinDate", typeof(System.DateTime));
    
            var expiresParameter = expires.HasValue ?
                new ObjectParameter("Expires", expires) :
                new ObjectParameter("Expires", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Def_EmployeeMembership_Update_HRM_EmployeeMembership", autoIdParameter, empMembershipCodeParameter, employeeCodeParameter, organizationParameter, addressParameter, memberIdParameter, positionParameter, joinDateParameter, expiresParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Def_Membership_Insert_HRM_Def_Membership(string membershipCode, string employeeCode, string membershipName, string membershipShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var membershipCodeParameter = membershipCode != null ?
                new ObjectParameter("MembershipCode", membershipCode) :
                new ObjectParameter("MembershipCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var membershipNameParameter = membershipName != null ?
                new ObjectParameter("MembershipName", membershipName) :
                new ObjectParameter("MembershipName", typeof(string));
    
            var membershipShortNameParameter = membershipShortName != null ?
                new ObjectParameter("MembershipShortName", membershipShortName) :
                new ObjectParameter("MembershipShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Def_Membership_Insert_HRM_Def_Membership", membershipCodeParameter, employeeCodeParameter, membershipNameParameter, membershipShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Def_Membership_Update_HRM_Def_Membership(Nullable<decimal> autoId, string membershipCode, string employeeCode, string membershipName, string membershipShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var membershipCodeParameter = membershipCode != null ?
                new ObjectParameter("MembershipCode", membershipCode) :
                new ObjectParameter("MembershipCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var membershipNameParameter = membershipName != null ?
                new ObjectParameter("MembershipName", membershipName) :
                new ObjectParameter("MembershipName", typeof(string));
    
            var membershipShortNameParameter = membershipShortName != null ?
                new ObjectParameter("MembershipShortName", membershipShortName) :
                new ObjectParameter("MembershipShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Def_Membership_Update_HRM_Def_Membership", autoIdParameter, membershipCodeParameter, employeeCodeParameter, membershipNameParameter, membershipShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Department_Insert_HRM_Def_Department(string departmentCode, string departmentName, string departmentShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDepartment, string banglaShortName)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var departmentNameParameter = departmentName != null ?
                new ObjectParameter("DepartmentName", departmentName) :
                new ObjectParameter("DepartmentName", typeof(string));
    
            var departmentShortNameParameter = departmentShortName != null ?
                new ObjectParameter("DepartmentShortName", departmentShortName) :
                new ObjectParameter("DepartmentShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDepartmentParameter = banglaDepartment != null ?
                new ObjectParameter("BanglaDepartment", banglaDepartment) :
                new ObjectParameter("BanglaDepartment", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Department_Insert_HRM_Def_Department", departmentCodeParameter, departmentNameParameter, departmentShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDepartmentParameter, banglaShortNameParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Department_Update_HRM_Def_Department(Nullable<decimal> autoId, string departmentCode, string departmentName, string departmentShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDepartment, string banglaShortName)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var departmentNameParameter = departmentName != null ?
                new ObjectParameter("DepartmentName", departmentName) :
                new ObjectParameter("DepartmentName", typeof(string));
    
            var departmentShortNameParameter = departmentShortName != null ?
                new ObjectParameter("DepartmentShortName", departmentShortName) :
                new ObjectParameter("DepartmentShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDepartmentParameter = banglaDepartment != null ?
                new ObjectParameter("BanglaDepartment", banglaDepartment) :
                new ObjectParameter("BanglaDepartment", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Department_Update_HRM_Def_Department", autoIdParameter, departmentCodeParameter, departmentNameParameter, departmentShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDepartmentParameter, banglaShortNameParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Designation_Insert_HRM_Def_Designation(string designationCode, string designationName, string designationShortName, string gradeCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDesignation, string banglaShortName, string stepNoId)
        {
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            var designationNameParameter = designationName != null ?
                new ObjectParameter("DesignationName", designationName) :
                new ObjectParameter("DesignationName", typeof(string));
    
            var designationShortNameParameter = designationShortName != null ?
                new ObjectParameter("DesignationShortName", designationShortName) :
                new ObjectParameter("DesignationShortName", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDesignationParameter = banglaDesignation != null ?
                new ObjectParameter("BanglaDesignation", banglaDesignation) :
                new ObjectParameter("BanglaDesignation", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            var stepNoIdParameter = stepNoId != null ?
                new ObjectParameter("StepNoId", stepNoId) :
                new ObjectParameter("StepNoId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Designation_Insert_HRM_Def_Designation", designationCodeParameter, designationNameParameter, designationShortNameParameter, gradeCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDesignationParameter, banglaShortNameParameter, stepNoIdParameter);
        }
    
        public virtual ObjectResult<proc_wbFrm_Designation_Select_HRM_Def_Designation_Result> proc_wbFrm_Designation_Select_HRM_Def_Designation(string designationCode)
        {
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrm_Designation_Select_HRM_Def_Designation_Result>("proc_wbFrm_Designation_Select_HRM_Def_Designation", designationCodeParameter);
        }
    
        public virtual ObjectResult<proc_wbFrm_Designation_Select_HRM_Def_Designation_2_Result> proc_wbFrm_Designation_Select_HRM_Def_Designation_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrm_Designation_Select_HRM_Def_Designation_2_Result>("proc_wbFrm_Designation_Select_HRM_Def_Designation_2");
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Designation_Update_HRM_Def_Designation(Nullable<decimal> autoId, string designationCode, string designationName, string designationShortName, string gradeCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDesignation, string banglaShortName, string stepNoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            var designationNameParameter = designationName != null ?
                new ObjectParameter("DesignationName", designationName) :
                new ObjectParameter("DesignationName", typeof(string));
    
            var designationShortNameParameter = designationShortName != null ?
                new ObjectParameter("DesignationShortName", designationShortName) :
                new ObjectParameter("DesignationShortName", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDesignationParameter = banglaDesignation != null ?
                new ObjectParameter("BanglaDesignation", banglaDesignation) :
                new ObjectParameter("BanglaDesignation", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            var stepNoIdParameter = stepNoId != null ?
                new ObjectParameter("StepNoId", stepNoId) :
                new ObjectParameter("StepNoId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Designation_Update_HRM_Def_Designation", autoIdParameter, designationCodeParameter, designationNameParameter, designationShortNameParameter, gradeCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDesignationParameter, banglaShortNameParameter, stepNoIdParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Division_Insert_HRM_Def_Division(string divisionCode, string divisionName, string divisionShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDivision, string banglaShortName)
        {
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionNameParameter = divisionName != null ?
                new ObjectParameter("DivisionName", divisionName) :
                new ObjectParameter("DivisionName", typeof(string));
    
            var divisionShortNameParameter = divisionShortName != null ?
                new ObjectParameter("DivisionShortName", divisionShortName) :
                new ObjectParameter("DivisionShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDivisionParameter = banglaDivision != null ?
                new ObjectParameter("BanglaDivision", banglaDivision) :
                new ObjectParameter("BanglaDivision", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Division_Insert_HRM_Def_Division", divisionCodeParameter, divisionNameParameter, divisionShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDivisionParameter, banglaShortNameParameter);
        }
    
        public virtual int proc_wbFrm_Division_Update_HRM_Def_Division(Nullable<decimal> autoId, string divisionCode, string divisionName, string divisionShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaDivision, string banglaShortName)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var divisionNameParameter = divisionName != null ?
                new ObjectParameter("DivisionName", divisionName) :
                new ObjectParameter("DivisionName", typeof(string));
    
            var divisionShortNameParameter = divisionShortName != null ?
                new ObjectParameter("DivisionShortName", divisionShortName) :
                new ObjectParameter("DivisionShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaDivisionParameter = banglaDivision != null ?
                new ObjectParameter("BanglaDivision", banglaDivision) :
                new ObjectParameter("BanglaDivision", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Division_Update_HRM_Def_Division", autoIdParameter, divisionCodeParameter, divisionNameParameter, divisionShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaDivisionParameter, banglaShortNameParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_DivisionGrade_Insert_HRM_Def_DivisionGrade(string divisionGradeCode, string divisionGradeName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var divisionGradeCodeParameter = divisionGradeCode != null ?
                new ObjectParameter("DivisionGradeCode", divisionGradeCode) :
                new ObjectParameter("DivisionGradeCode", typeof(string));
    
            var divisionGradeNameParameter = divisionGradeName != null ?
                new ObjectParameter("DivisionGradeName", divisionGradeName) :
                new ObjectParameter("DivisionGradeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_DivisionGrade_Insert_HRM_Def_DivisionGrade", divisionGradeCodeParameter, divisionGradeNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_DivisionGrade_Update_HRM_Def_DivisionGrade(Nullable<decimal> autoId, string divisionGradeCode, string divisionGradeName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var divisionGradeCodeParameter = divisionGradeCode != null ?
                new ObjectParameter("DivisionGradeCode", divisionGradeCode) :
                new ObjectParameter("DivisionGradeCode", typeof(string));
    
            var divisionGradeNameParameter = divisionGradeName != null ?
                new ObjectParameter("DivisionGradeName", divisionGradeName) :
                new ObjectParameter("DivisionGradeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_DivisionGrade_Update_HRM_Def_DivisionGrade", autoIdParameter, divisionGradeCodeParameter, divisionGradeNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EducationInstitute_Update_HRM_Def_Institute(Nullable<decimal> autoId, string instituteCode, string instituteName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var instituteCodeParameter = instituteCode != null ?
                new ObjectParameter("InstituteCode", instituteCode) :
                new ObjectParameter("InstituteCode", typeof(string));
    
            var instituteNameParameter = instituteName != null ?
                new ObjectParameter("InstituteName", instituteName) :
                new ObjectParameter("InstituteName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EducationInstitute_Update_HRM_Def_Institute", autoIdParameter, instituteCodeParameter, instituteNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeEducation_Delete_HRM_EmployeeEducation(string empEduCode)
        {
            var empEduCodeParameter = empEduCode != null ?
                new ObjectParameter("EmpEduCode", empEduCode) :
                new ObjectParameter("EmpEduCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeEducation_Delete_HRM_EmployeeEducation", empEduCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeExceptionInfo_Insert_HRM_Def_EmployeeException(string employeeExceptionCode, string employeeID, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var employeeExceptionCodeParameter = employeeExceptionCode != null ?
                new ObjectParameter("EmployeeExceptionCode", employeeExceptionCode) :
                new ObjectParameter("EmployeeExceptionCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeExceptionInfo_Insert_HRM_Def_EmployeeException", employeeExceptionCodeParameter, employeeIDParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeExceptionInfo_Update_HRM_Def_EmployeeException(Nullable<decimal> autoId, string employeeExceptionCode, string employeeID, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeExceptionCodeParameter = employeeExceptionCode != null ?
                new ObjectParameter("EmployeeExceptionCode", employeeExceptionCode) :
                new ObjectParameter("EmployeeExceptionCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeExceptionInfo_Update_HRM_Def_EmployeeException", autoIdParameter, employeeExceptionCodeParameter, employeeIDParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeIdConfiguration_Update_HRM_EmployeeIdConfiguration(Nullable<decimal> autoId, string employeeIdConfiguration_Code, string employeeIdConfiguration, string description, string numberingMethod, Nullable<decimal> startingNumber, Nullable<decimal> resetDuration, string resetDurationType_Code, string prefix, string suffix, string padding, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeIdConfiguration_CodeParameter = employeeIdConfiguration_Code != null ?
                new ObjectParameter("EmployeeIdConfiguration_Code", employeeIdConfiguration_Code) :
                new ObjectParameter("EmployeeIdConfiguration_Code", typeof(string));
    
            var employeeIdConfigurationParameter = employeeIdConfiguration != null ?
                new ObjectParameter("EmployeeIdConfiguration", employeeIdConfiguration) :
                new ObjectParameter("EmployeeIdConfiguration", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var numberingMethodParameter = numberingMethod != null ?
                new ObjectParameter("numberingMethod", numberingMethod) :
                new ObjectParameter("numberingMethod", typeof(string));
    
            var startingNumberParameter = startingNumber.HasValue ?
                new ObjectParameter("startingNumber", startingNumber) :
                new ObjectParameter("startingNumber", typeof(decimal));
    
            var resetDurationParameter = resetDuration.HasValue ?
                new ObjectParameter("resetDuration", resetDuration) :
                new ObjectParameter("resetDuration", typeof(decimal));
    
            var resetDurationType_CodeParameter = resetDurationType_Code != null ?
                new ObjectParameter("resetDurationType_Code", resetDurationType_Code) :
                new ObjectParameter("resetDurationType_Code", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var paddingParameter = padding != null ?
                new ObjectParameter("padding", padding) :
                new ObjectParameter("padding", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeIdConfiguration_Update_HRM_EmployeeIdConfiguration", autoIdParameter, employeeIdConfiguration_CodeParameter, employeeIdConfigurationParameter, descriptionParameter, numberingMethodParameter, startingNumberParameter, resetDurationParameter, resetDurationType_CodeParameter, prefixParameter, suffixParameter, paddingParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeInfo_Select_HRM_Employee_2(string employeeCode, string companyCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeInfo_Select_HRM_Employee_2", employeeCodeParameter, companyCodeParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeInfo_Select_HRM_EmployeeGeneralInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeInfo_Select_HRM_EmployeeGeneralInfo");
        }
    
        public virtual int proc_wbFrm_EmployeeInfo_Select_HRM_EmployeeGeneralInfo_2(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeInfo_Select_HRM_EmployeeGeneralInfo_2", employeeCodeParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeMedicalInfo_Delete_HRM_EmployeeMedicalInfo(string empMedicalInfoCode)
        {
            var empMedicalInfoCodeParameter = empMedicalInfoCode != null ?
                new ObjectParameter("EmpMedicalInfoCode", empMedicalInfoCode) :
                new ObjectParameter("EmpMedicalInfoCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeMedicalInfo_Delete_HRM_EmployeeMedicalInfo", empMedicalInfoCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeMedicalInfo_Insert_HRM_EmployeeMedicalInfo(string empMedicalInfoCode, string employeeCode, string height, string weight, string healthCard, string disease, string allergies, string operation, Nullable<decimal> limitAnount, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string heightUnit, string weightUnit)
        {
            var empMedicalInfoCodeParameter = empMedicalInfoCode != null ?
                new ObjectParameter("EmpMedicalInfoCode", empMedicalInfoCode) :
                new ObjectParameter("EmpMedicalInfoCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var healthCardParameter = healthCard != null ?
                new ObjectParameter("HealthCard", healthCard) :
                new ObjectParameter("HealthCard", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var allergiesParameter = allergies != null ?
                new ObjectParameter("Allergies", allergies) :
                new ObjectParameter("Allergies", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var limitAnountParameter = limitAnount.HasValue ?
                new ObjectParameter("LimitAnount", limitAnount) :
                new ObjectParameter("LimitAnount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var heightUnitParameter = heightUnit != null ?
                new ObjectParameter("HeightUnit", heightUnit) :
                new ObjectParameter("HeightUnit", typeof(string));
    
            var weightUnitParameter = weightUnit != null ?
                new ObjectParameter("WeightUnit", weightUnit) :
                new ObjectParameter("WeightUnit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeMedicalInfo_Insert_HRM_EmployeeMedicalInfo", empMedicalInfoCodeParameter, employeeCodeParameter, heightParameter, weightParameter, healthCardParameter, diseaseParameter, allergiesParameter, operationParameter, limitAnountParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, heightUnitParameter, weightUnitParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeMedicalInfo_Update_HRM_EmployeeMedicalInfo(Nullable<decimal> autoId, string empMedicalInfoCode, string employeeCode, string height, string weight, string healthCard, string disease, string allergies, string operation, Nullable<decimal> limitAnount, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string heightUnit, string weightUnit)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empMedicalInfoCodeParameter = empMedicalInfoCode != null ?
                new ObjectParameter("EmpMedicalInfoCode", empMedicalInfoCode) :
                new ObjectParameter("EmpMedicalInfoCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var healthCardParameter = healthCard != null ?
                new ObjectParameter("HealthCard", healthCard) :
                new ObjectParameter("HealthCard", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var allergiesParameter = allergies != null ?
                new ObjectParameter("Allergies", allergies) :
                new ObjectParameter("Allergies", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var limitAnountParameter = limitAnount.HasValue ?
                new ObjectParameter("LimitAnount", limitAnount) :
                new ObjectParameter("LimitAnount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var heightUnitParameter = heightUnit != null ?
                new ObjectParameter("HeightUnit", heightUnit) :
                new ObjectParameter("HeightUnit", typeof(string));
    
            var weightUnitParameter = weightUnit != null ?
                new ObjectParameter("WeightUnit", weightUnit) :
                new ObjectParameter("WeightUnit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeMedicalInfo_Update_HRM_EmployeeMedicalInfo", autoIdParameter, empMedicalInfoCodeParameter, employeeCodeParameter, heightParameter, weightParameter, healthCardParameter, diseaseParameter, allergiesParameter, operationParameter, limitAnountParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, heightUnitParameter, weightUnitParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeMembership_Delete_HRM_EmployeeMembership(string empMembershipCode)
        {
            var empMembershipCodeParameter = empMembershipCode != null ?
                new ObjectParameter("EmpMembershipCode", empMembershipCode) :
                new ObjectParameter("EmpMembershipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeMembership_Delete_HRM_EmployeeMembership", empMembershipCodeParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo(string employeeCode, string companyCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo", employeeCodeParameter, companyCodeParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo_All(string companyCode, string employeeID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo_All", companyCodeParameter, employeeIDParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo_All_LikeSearch(string companyCode, string employee_searchText)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employee_searchTextParameter = employee_searchText != null ?
                new ObjectParameter("employee_searchText", employee_searchText) :
                new ObjectParameter("employee_searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeOfficialInfo_Select_HRM_EmployeeOfficialInfo_All_LikeSearch", companyCodeParameter, employee_searchTextParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeRef_Delete_HRM_EmployeeRef(string empRefCode)
        {
            var empRefCodeParameter = empRefCode != null ?
                new ObjectParameter("EmpRefCode", empRefCode) :
                new ObjectParameter("EmpRefCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeRef_Delete_HRM_EmployeeRef", empRefCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeRef_Insert_HRM_EmployeeRef(string empRefCode, string employeeCode, string email, string name, string occupation, string address, string phone, string type, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var empRefCodeParameter = empRefCode != null ?
                new ObjectParameter("EmpRefCode", empRefCode) :
                new ObjectParameter("EmpRefCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeRef_Insert_HRM_EmployeeRef", empRefCodeParameter, employeeCodeParameter, emailParameter, nameParameter, occupationParameter, addressParameter, phoneParameter, typeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeRef_Update_HRM_EmployeeRef(Nullable<decimal> autoId, string empRefCode, string employeeCode, string email, string name, string occupation, string address, string phone, string type, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empRefCodeParameter = empRefCode != null ?
                new ObjectParameter("EmpRefCode", empRefCode) :
                new ObjectParameter("EmpRefCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeRef_Update_HRM_EmployeeRef", autoIdParameter, empRefCodeParameter, employeeCodeParameter, emailParameter, nameParameter, occupationParameter, addressParameter, phoneParameter, typeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual int proc_wbFrm_EmployeeTraining_Delete_HRM_EmployeeTraining(string empTriCode)
        {
            var empTriCodeParameter = empTriCode != null ?
                new ObjectParameter("EmpTriCode", empTriCode) :
                new ObjectParameter("EmpTriCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_EmployeeTraining_Delete_HRM_EmployeeTraining", empTriCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeTraining_Insert_HRM_EmployeeTraining(string empTriCode, string employeeCode, string trainingTitleCode, string instituteName, string yearsOfCompletion, string duration, string achivement, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var empTriCodeParameter = empTriCode != null ?
                new ObjectParameter("EmpTriCode", empTriCode) :
                new ObjectParameter("EmpTriCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            var instituteNameParameter = instituteName != null ?
                new ObjectParameter("InstituteName", instituteName) :
                new ObjectParameter("InstituteName", typeof(string));
    
            var yearsOfCompletionParameter = yearsOfCompletion != null ?
                new ObjectParameter("YearsOfCompletion", yearsOfCompletion) :
                new ObjectParameter("YearsOfCompletion", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var achivementParameter = achivement != null ?
                new ObjectParameter("Achivement", achivement) :
                new ObjectParameter("Achivement", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeTraining_Insert_HRM_EmployeeTraining", empTriCodeParameter, employeeCodeParameter, trainingTitleCodeParameter, instituteNameParameter, yearsOfCompletionParameter, durationParameter, achivementParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmployeeTraining_Update_HRM_EmployeeTraining(Nullable<decimal> autoId, string empTriCode, string employeeCode, string trainingTitleCode, string instituteName, string yearsOfCompletion, string duration, string achivement, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empTriCodeParameter = empTriCode != null ?
                new ObjectParameter("EmpTriCode", empTriCode) :
                new ObjectParameter("EmpTriCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            var instituteNameParameter = instituteName != null ?
                new ObjectParameter("InstituteName", instituteName) :
                new ObjectParameter("InstituteName", typeof(string));
    
            var yearsOfCompletionParameter = yearsOfCompletion != null ?
                new ObjectParameter("YearsOfCompletion", yearsOfCompletion) :
                new ObjectParameter("YearsOfCompletion", typeof(string));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var achivementParameter = achivement != null ?
                new ObjectParameter("Achivement", achivement) :
                new ObjectParameter("Achivement", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmployeeTraining_Update_HRM_EmployeeTraining", autoIdParameter, empTriCodeParameter, employeeCodeParameter, trainingTitleCodeParameter, instituteNameParameter, yearsOfCompletionParameter, durationParameter, achivementParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmpType_Update_HRM_Def_EmpType(Nullable<decimal> autoId, string empTypeCode, string empTypeName, string empTypeShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var empTypeNameParameter = empTypeName != null ?
                new ObjectParameter("EmpTypeName", empTypeName) :
                new ObjectParameter("EmpTypeName", typeof(string));
    
            var empTypeShortNameParameter = empTypeShortName != null ?
                new ObjectParameter("EmpTypeShortName", empTypeShortName) :
                new ObjectParameter("EmpTypeShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmpType_Update_HRM_Def_EmpType", autoIdParameter, empTypeCodeParameter, empTypeNameParameter, empTypeShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_EmpType_Update_HRM_EIS_Def_EmploymentNature(Nullable<decimal> tC, string employmentNatureId, string employmentNature, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(decimal));
    
            var employmentNatureIdParameter = employmentNatureId != null ?
                new ObjectParameter("EmploymentNatureId", employmentNatureId) :
                new ObjectParameter("EmploymentNatureId", typeof(string));
    
            var employmentNatureParameter = employmentNature != null ?
                new ObjectParameter("EmploymentNature", employmentNature) :
                new ObjectParameter("EmploymentNature", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_EmpType_Update_HRM_EIS_Def_EmploymentNature", tCParameter, employmentNatureIdParameter, employmentNatureParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_ExamTitle_Insert_HRM_Def_ExamTitle(string examTitleCode, string examTitleName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var examTitleCodeParameter = examTitleCode != null ?
                new ObjectParameter("ExamTitleCode", examTitleCode) :
                new ObjectParameter("ExamTitleCode", typeof(string));
    
            var examTitleNameParameter = examTitleName != null ?
                new ObjectParameter("ExamTitleName", examTitleName) :
                new ObjectParameter("ExamTitleName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_ExamTitle_Insert_HRM_Def_ExamTitle", examTitleCodeParameter, examTitleNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_ExamTitle_Update_HRM_Def_ExamTitle(Nullable<decimal> autoId, string examTitleCode, string examTitleName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var examTitleCodeParameter = examTitleCode != null ?
                new ObjectParameter("ExamTitleCode", examTitleCode) :
                new ObjectParameter("ExamTitleCode", typeof(string));
    
            var examTitleNameParameter = examTitleName != null ?
                new ObjectParameter("ExamTitleName", examTitleName) :
                new ObjectParameter("ExamTitleName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_ExamTitle_Update_HRM_Def_ExamTitle", autoIdParameter, examTitleCodeParameter, examTitleNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_Financial_Insert_dbo_Acc_FinancialYear(string financialCodeNo, string name, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Financial_Insert_dbo_Acc_FinancialYear", financialCodeNoParameter, nameParameter, startDateParameter, endDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_Financial_Select_Acc_FinancialYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Financial_Select_Acc_FinancialYear");
        }
    
        public virtual int proc_wbFrm_Financial_Select_Acc_FinancialYear_2(string financialCodeNo)
        {
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Financial_Select_Acc_FinancialYear_2", financialCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_Financial_Update_Acc_FinancialYear(Nullable<decimal> autoId, string financialCodeNo, string name, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Financial_Update_Acc_FinancialYear", autoIdParameter, financialCodeNoParameter, nameParameter, startDateParameter, endDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_GeneralLedger_Insert_Acc_GeneralLedger(Nullable<decimal> subControlLedgerCodeNo, string generalLedgerCodeNo, string subControlLedgerName, string shortName, string isSameNameGL, string isSameNameSL, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo.HasValue ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(decimal));
    
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            var subControlLedgerNameParameter = subControlLedgerName != null ?
                new ObjectParameter("SubControlLedgerName", subControlLedgerName) :
                new ObjectParameter("SubControlLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var isSameNameGLParameter = isSameNameGL != null ?
                new ObjectParameter("IsSameNameGL", isSameNameGL) :
                new ObjectParameter("IsSameNameGL", typeof(string));
    
            var isSameNameSLParameter = isSameNameSL != null ?
                new ObjectParameter("IsSameNameSL", isSameNameSL) :
                new ObjectParameter("IsSameNameSL", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_GeneralLedger_Insert_Acc_GeneralLedger", subControlLedgerCodeNoParameter, generalLedgerCodeNoParameter, subControlLedgerNameParameter, shortNameParameter, isSameNameGLParameter, isSameNameSLParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfo");
        }
    
        public virtual int proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfo_2(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfo_2", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfoWithXProcess(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_GeneralLedger_Select_Acc_GeneralLedgerInfoWithXProcess", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_Grade_Delete_HRM_Def_Grade(string gradeCode)
        {
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Grade_Delete_HRM_Def_Grade", gradeCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Grade_Insert_HRM_Def_Grade(string gradeCode, string gradeName, string gradeShortName, Nullable<decimal> fromGrossSalary, Nullable<decimal> toGrossSalary, string empTypeCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var gradeNameParameter = gradeName != null ?
                new ObjectParameter("GradeName", gradeName) :
                new ObjectParameter("GradeName", typeof(string));
    
            var gradeShortNameParameter = gradeShortName != null ?
                new ObjectParameter("GradeShortName", gradeShortName) :
                new ObjectParameter("GradeShortName", typeof(string));
    
            var fromGrossSalaryParameter = fromGrossSalary.HasValue ?
                new ObjectParameter("FromGrossSalary", fromGrossSalary) :
                new ObjectParameter("FromGrossSalary", typeof(decimal));
    
            var toGrossSalaryParameter = toGrossSalary.HasValue ?
                new ObjectParameter("ToGrossSalary", toGrossSalary) :
                new ObjectParameter("ToGrossSalary", typeof(decimal));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Grade_Insert_HRM_Def_Grade", gradeCodeParameter, gradeNameParameter, gradeShortNameParameter, fromGrossSalaryParameter, toGrossSalaryParameter, empTypeCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Grade_Update_HRM_Def_Grade(Nullable<decimal> autoId, string gradeCode, string gradeName, string gradeShortName, Nullable<decimal> fromGrossSalary, Nullable<decimal> toGrossSalary, string empTypeCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var gradeNameParameter = gradeName != null ?
                new ObjectParameter("GradeName", gradeName) :
                new ObjectParameter("GradeName", typeof(string));
    
            var gradeShortNameParameter = gradeShortName != null ?
                new ObjectParameter("GradeShortName", gradeShortName) :
                new ObjectParameter("GradeShortName", typeof(string));
    
            var fromGrossSalaryParameter = fromGrossSalary.HasValue ?
                new ObjectParameter("FromGrossSalary", fromGrossSalary) :
                new ObjectParameter("FromGrossSalary", typeof(decimal));
    
            var toGrossSalaryParameter = toGrossSalary.HasValue ?
                new ObjectParameter("ToGrossSalary", toGrossSalary) :
                new ObjectParameter("ToGrossSalary", typeof(decimal));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Grade_Update_HRM_Def_Grade", autoIdParameter, gradeCodeParameter, gradeNameParameter, gradeShortNameParameter, fromGrossSalaryParameter, toGrossSalaryParameter, empTypeCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_IdSetup_Insert_HRM_Def_IdSetup(string idSetupCode, string setupNameCode, string description, string numberingMethod, Nullable<decimal> length, Nullable<decimal> startingNumber, Nullable<decimal> increment, Nullable<decimal> resetDuration, string resetDurationType_Code, string prefix, string suffix, string zeroPadding, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var idSetupCodeParameter = idSetupCode != null ?
                new ObjectParameter("IdSetupCode", idSetupCode) :
                new ObjectParameter("IdSetupCode", typeof(string));
    
            var setupNameCodeParameter = setupNameCode != null ?
                new ObjectParameter("SetupNameCode", setupNameCode) :
                new ObjectParameter("SetupNameCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var numberingMethodParameter = numberingMethod != null ?
                new ObjectParameter("numberingMethod", numberingMethod) :
                new ObjectParameter("numberingMethod", typeof(string));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(decimal));
    
            var startingNumberParameter = startingNumber.HasValue ?
                new ObjectParameter("startingNumber", startingNumber) :
                new ObjectParameter("startingNumber", typeof(decimal));
    
            var incrementParameter = increment.HasValue ?
                new ObjectParameter("Increment", increment) :
                new ObjectParameter("Increment", typeof(decimal));
    
            var resetDurationParameter = resetDuration.HasValue ?
                new ObjectParameter("resetDuration", resetDuration) :
                new ObjectParameter("resetDuration", typeof(decimal));
    
            var resetDurationType_CodeParameter = resetDurationType_Code != null ?
                new ObjectParameter("resetDurationType_Code", resetDurationType_Code) :
                new ObjectParameter("resetDurationType_Code", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var zeroPaddingParameter = zeroPadding != null ?
                new ObjectParameter("ZeroPadding", zeroPadding) :
                new ObjectParameter("ZeroPadding", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_IdSetup_Insert_HRM_Def_IdSetup", idSetupCodeParameter, setupNameCodeParameter, descriptionParameter, numberingMethodParameter, lengthParameter, startingNumberParameter, incrementParameter, resetDurationParameter, resetDurationType_CodeParameter, prefixParameter, suffixParameter, zeroPaddingParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_IdSetup_Update_HRM_Def_IdSetup(Nullable<decimal> autoId, string idSetupCode, string setupNameCode, string description, string numberingMethod, Nullable<decimal> length, Nullable<decimal> startingNumber, Nullable<decimal> increment, Nullable<decimal> resetDuration, string resetDurationType_Code, string prefix, string suffix, string zeroPadding, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var idSetupCodeParameter = idSetupCode != null ?
                new ObjectParameter("IdSetupCode", idSetupCode) :
                new ObjectParameter("IdSetupCode", typeof(string));
    
            var setupNameCodeParameter = setupNameCode != null ?
                new ObjectParameter("SetupNameCode", setupNameCode) :
                new ObjectParameter("SetupNameCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var numberingMethodParameter = numberingMethod != null ?
                new ObjectParameter("numberingMethod", numberingMethod) :
                new ObjectParameter("numberingMethod", typeof(string));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(decimal));
    
            var startingNumberParameter = startingNumber.HasValue ?
                new ObjectParameter("startingNumber", startingNumber) :
                new ObjectParameter("startingNumber", typeof(decimal));
    
            var incrementParameter = increment.HasValue ?
                new ObjectParameter("Increment", increment) :
                new ObjectParameter("Increment", typeof(decimal));
    
            var resetDurationParameter = resetDuration.HasValue ?
                new ObjectParameter("resetDuration", resetDuration) :
                new ObjectParameter("resetDuration", typeof(decimal));
    
            var resetDurationType_CodeParameter = resetDurationType_Code != null ?
                new ObjectParameter("resetDurationType_Code", resetDurationType_Code) :
                new ObjectParameter("resetDurationType_Code", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var zeroPaddingParameter = zeroPadding != null ?
                new ObjectParameter("ZeroPadding", zeroPadding) :
                new ObjectParameter("ZeroPadding", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_IdSetup_Update_HRM_Def_IdSetup", autoIdParameter, idSetupCodeParameter, setupNameCodeParameter, descriptionParameter, numberingMethodParameter, lengthParameter, startingNumberParameter, incrementParameter, resetDurationParameter, resetDurationType_CodeParameter, prefixParameter, suffixParameter, zeroPaddingParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Line_Insert_HRM_Def_Line(string lineCode, string lineName, string lineCapacity, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string sectionCode, string banglaLine)
        {
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var lineNameParameter = lineName != null ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(string));
    
            var lineCapacityParameter = lineCapacity != null ?
                new ObjectParameter("LineCapacity", lineCapacity) :
                new ObjectParameter("LineCapacity", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var banglaLineParameter = banglaLine != null ?
                new ObjectParameter("BanglaLine", banglaLine) :
                new ObjectParameter("BanglaLine", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Line_Insert_HRM_Def_Line", lineCodeParameter, lineNameParameter, lineCapacityParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, sectionCodeParameter, banglaLineParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Line_Update_HRM_Def_Line(Nullable<decimal> autoId, string lineCode, string lineName, string lineCapacity, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string sectionCode, string banglaLine)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var lineNameParameter = lineName != null ?
                new ObjectParameter("LineName", lineName) :
                new ObjectParameter("LineName", typeof(string));
    
            var lineCapacityParameter = lineCapacity != null ?
                new ObjectParameter("LineCapacity", lineCapacity) :
                new ObjectParameter("LineCapacity", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var banglaLineParameter = banglaLine != null ?
                new ObjectParameter("BanglaLine", banglaLine) :
                new ObjectParameter("BanglaLine", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Line_Update_HRM_Def_Line", autoIdParameter, lineCodeParameter, lineNameParameter, lineCapacityParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, sectionCodeParameter, banglaLineParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_MaritalStatus_Insert_HRM_Def_MaritalStatus(string maritalStatusCode, string maritalStatus, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_MaritalStatus_Insert_HRM_Def_MaritalStatus", maritalStatusCodeParameter, maritalStatusParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_MaritalStatus_Update_HRM_Def_MaritalStatus(Nullable<decimal> autoId, string maritalStatusCode, string maritalStatus, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_MaritalStatus_Update_HRM_Def_MaritalStatus", autoIdParameter, maritalStatusCodeParameter, maritalStatusParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_Nationality_Delete_HRM_Def_Nationality(string nationalityCode)
        {
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_Nationality_Delete_HRM_Def_Nationality", nationalityCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Nationality_Insert_HRM_Def_Nationality(string nationalityCode, string nationality, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Nationality_Insert_HRM_Def_Nationality", nationalityCodeParameter, nationalityParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Nationality_Update_HRM_Def_Nationality(Nullable<decimal> autoId, string nationalityCode, string nationality, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Nationality_Update_HRM_Def_Nationality", autoIdParameter, nationalityCodeParameter, nationalityParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Occupation_Insert_HRM_Def_Occupation(string occupationCode, string occupation, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var occupationCodeParameter = occupationCode != null ?
                new ObjectParameter("OccupationCode", occupationCode) :
                new ObjectParameter("OccupationCode", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Occupation_Insert_HRM_Def_Occupation", occupationCodeParameter, occupationParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Occupation_Update_HRM_Def_Occupation(Nullable<decimal> autoId, string occupationCode, string occupation, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var occupationCodeParameter = occupationCode != null ?
                new ObjectParameter("OccupationCode", occupationCode) :
                new ObjectParameter("OccupationCode", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Occupation_Update_HRM_Def_Occupation", autoIdParameter, occupationCodeParameter, occupationParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Period_Insert_Acc_Period(string periodCodeNo, string startMonth, string endMonth, string description, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var periodCodeNoParameter = periodCodeNo != null ?
                new ObjectParameter("PeriodCodeNo", periodCodeNo) :
                new ObjectParameter("PeriodCodeNo", typeof(string));
    
            var startMonthParameter = startMonth != null ?
                new ObjectParameter("StartMonth", startMonth) :
                new ObjectParameter("StartMonth", typeof(string));
    
            var endMonthParameter = endMonth != null ?
                new ObjectParameter("EndMonth", endMonth) :
                new ObjectParameter("EndMonth", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Period_Insert_Acc_Period", periodCodeNoParameter, startMonthParameter, endMonthParameter, descriptionParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<proc_wbFrm_Period_Select_PeriodCodeNo_2_Result> proc_wbFrm_Period_Select_PeriodCodeNo_2(string periodCodeNo)
        {
            var periodCodeNoParameter = periodCodeNo != null ?
                new ObjectParameter("PeriodCodeNo", periodCodeNo) :
                new ObjectParameter("PeriodCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrm_Period_Select_PeriodCodeNo_2_Result>("proc_wbFrm_Period_Select_PeriodCodeNo_2", periodCodeNoParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Relationship_Insert_HRM_Def_Relationship(string relationshipCode, string relationship, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var relationshipCodeParameter = relationshipCode != null ?
                new ObjectParameter("RelationshipCode", relationshipCode) :
                new ObjectParameter("RelationshipCode", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Relationship_Insert_HRM_Def_Relationship", relationshipCodeParameter, relationshipParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Relationship_Update_HRM_Def_Relationship(Nullable<decimal> autoId, string relationshipCode, string relationship, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var relationshipCodeParameter = relationshipCode != null ?
                new ObjectParameter("RelationshipCode", relationshipCode) :
                new ObjectParameter("RelationshipCode", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Relationship_Update_HRM_Def_Relationship", autoIdParameter, relationshipCodeParameter, relationshipParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Religion_Insert_HRM_Def_Religion(string religionCode, string religion, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Religion_Insert_HRM_Def_Religion", religionCodeParameter, religionParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Religion_Update_HRM_Def_Religion(Nullable<decimal> autoId, string religionCode, string religion, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Religion_Update_HRM_Def_Religion", autoIdParameter, religionCodeParameter, religionParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Section_Insert_HRM_Def_Section(string sectionCode, string sectionName, string sectionShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaSection, string banglaShortName, string departmentCode)
        {
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            var sectionShortNameParameter = sectionShortName != null ?
                new ObjectParameter("SectionShortName", sectionShortName) :
                new ObjectParameter("SectionShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaSectionParameter = banglaSection != null ?
                new ObjectParameter("BanglaSection", banglaSection) :
                new ObjectParameter("BanglaSection", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Section_Insert_HRM_Def_Section", sectionCodeParameter, sectionNameParameter, sectionShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaSectionParameter, banglaShortNameParameter, departmentCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Section_Update_HRM_Def_Section(Nullable<decimal> autoId, string sectionCode, string sectionName, string sectionShortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string banglaSection, string banglaShortName, string departmentCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            var sectionShortNameParameter = sectionShortName != null ?
                new ObjectParameter("SectionShortName", sectionShortName) :
                new ObjectParameter("SectionShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var banglaSectionParameter = banglaSection != null ?
                new ObjectParameter("BanglaSection", banglaSection) :
                new ObjectParameter("BanglaSection", typeof(string));
    
            var banglaShortNameParameter = banglaShortName != null ?
                new ObjectParameter("BanglaShortName", banglaShortName) :
                new ObjectParameter("BanglaShortName", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Section_Update_HRM_Def_Section", autoIdParameter, sectionCodeParameter, sectionNameParameter, sectionShortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, banglaSectionParameter, banglaShortNameParameter, departmentCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Sex_Insert_HRM_Def_Sex(string sexCode, string sex, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Sex_Insert_HRM_Def_Sex", sexCodeParameter, sexParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_Sex_Update_HRM_Def_Sex(Nullable<decimal> autoId, string sexCode, string sex, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_Sex_Update_HRM_Def_Sex", autoIdParameter, sexCodeParameter, sexParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger(Nullable<decimal> autoId)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger", autoIdParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger_1(Nullable<decimal> autoId, string subControlLedgerCodeNo)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger_1", autoIdParameter, subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger1(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Delete_Acc_SubControlLedger1", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Insert_Acc_SubControlLedger(Nullable<decimal> controlLedgerCodeNo, string subControlLedgerCodeNo, string subControlLedgerName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo.HasValue ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(decimal));
    
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            var subControlLedgerNameParameter = subControlLedgerName != null ?
                new ObjectParameter("SubControlLedgerName", subControlLedgerName) :
                new ObjectParameter("SubControlLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Insert_Acc_SubControlLedger", controlLedgerCodeNoParameter, subControlLedgerCodeNoParameter, subControlLedgerNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedger()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedger");
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedger_2(string controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedger_2", controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedgerWithXProcess(string controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_Acc_SubControlLedgerWithXProcess", controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_SCLAndCLInfo(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_SCLAndCLInfo", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_SclClAndGGLInfo(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_SclClAndGGLInfo", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Select_SclClAndGGLInfo_2(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Select_SclClAndGGLInfo_2", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubControlLedger_Update_Acc_SubControlLedger(Nullable<decimal> autoId, Nullable<decimal> controlLedgerCodeNo, string subControlLedgerCodeNo, string subControlLedgerName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var controlLedgerCodeNoParameter = controlLedgerCodeNo.HasValue ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(decimal));
    
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            var subControlLedgerNameParameter = subControlLedgerName != null ?
                new ObjectParameter("SubControlLedgerName", subControlLedgerName) :
                new ObjectParameter("SubControlLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubControlLedger_Update_Acc_SubControlLedger", autoIdParameter, controlLedgerCodeNoParameter, subControlLedgerCodeNoParameter, subControlLedgerNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_SubsidiaryLedger_Insert_Acc_SubsidiaryLedger(Nullable<decimal> generalLedgerCodeNo, string susidiaryLedgerCodeNo, string subsidiaryLedgerName, string shortName, string isSameNameSL, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo.HasValue ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(decimal));
    
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            var subsidiaryLedgerNameParameter = subsidiaryLedgerName != null ?
                new ObjectParameter("SubsidiaryLedgerName", subsidiaryLedgerName) :
                new ObjectParameter("SubsidiaryLedgerName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var isSameNameSLParameter = isSameNameSL != null ?
                new ObjectParameter("IsSameNameSL", isSameNameSL) :
                new ObjectParameter("IsSameNameSL", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubsidiaryLedger_Insert_Acc_SubsidiaryLedger", generalLedgerCodeNoParameter, susidiaryLedgerCodeNoParameter, subsidiaryLedgerNameParameter, shortNameParameter, isSameNameSLParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfo");
        }
    
        public virtual int proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfo_2(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfo_2", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfoWithXProcess(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubsidiaryLedger_Select_Acc_SubsidiaryLedgerInfoWithXProcess", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfo");
        }
    
        public virtual int proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfo_2(Nullable<decimal> susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo.HasValue ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfo_2", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfoWithXProcess(string subsidiaryLedgerCodeNo)
        {
            var subsidiaryLedgerCodeNoParameter = subsidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubsidiaryLedgerCodeNo", subsidiaryLedgerCodeNo) :
                new ObjectParameter("SubsidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_SubSubsidiaryLedger_Select_Acc_SubSubsidiaryLedgerInfoWithXProcess", subsidiaryLedgerCodeNoParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_TrainingTitle_Insert_HRM_Def_TrainingTitle(string trainingTitleCode, string trainingTitleName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            var trainingTitleNameParameter = trainingTitleName != null ?
                new ObjectParameter("TrainingTitleName", trainingTitleName) :
                new ObjectParameter("TrainingTitleName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_TrainingTitle_Insert_HRM_Def_TrainingTitle", trainingTitleCodeParameter, trainingTitleNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrm_TrainingTitle_Update_HRM_Def_TrainingTitle(Nullable<decimal> autoId, string trainingTitleCode, string trainingTitleName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            var trainingTitleNameParameter = trainingTitleName != null ?
                new ObjectParameter("TrainingTitleName", trainingTitleName) :
                new ObjectParameter("TrainingTitleName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrm_TrainingTitle_Update_HRM_Def_TrainingTitle", autoIdParameter, trainingTitleCodeParameter, trainingTitleNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_VoucherEntry_Insert_Acc_VoucherEntry(string voucherEntryCodeNo, string costCenterCodeNo, string financialYear, string periodCodeNo, string voucherType_Code, Nullable<System.DateTime> voucherDate, string voucherNo, string narration, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string userInfoEmployeeID, string main_CompanyCode, string branchCode, string divisionCode, string invoiceNo)
        {
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            var financialYearParameter = financialYear != null ?
                new ObjectParameter("FinancialYear", financialYear) :
                new ObjectParameter("FinancialYear", typeof(string));
    
            var periodCodeNoParameter = periodCodeNo != null ?
                new ObjectParameter("PeriodCodeNo", periodCodeNo) :
                new ObjectParameter("PeriodCodeNo", typeof(string));
    
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            var voucherDateParameter = voucherDate.HasValue ?
                new ObjectParameter("VoucherDate", voucherDate) :
                new ObjectParameter("VoucherDate", typeof(System.DateTime));
    
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var userInfoEmployeeIDParameter = userInfoEmployeeID != null ?
                new ObjectParameter("UserInfoEmployeeID", userInfoEmployeeID) :
                new ObjectParameter("UserInfoEmployeeID", typeof(string));
    
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherEntry_Insert_Acc_VoucherEntry", voucherEntryCodeNoParameter, costCenterCodeNoParameter, financialYearParameter, periodCodeNoParameter, voucherType_CodeParameter, voucherDateParameter, voucherNoParameter, narrationParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, userInfoEmployeeIDParameter, main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, invoiceNoParameter);
        }
    
        public virtual int proc_wbFrm_VoucherEntryDetails_Insert_Acc_VoucherEntryDetails(string voucherEntryDetailsCodeNo, string voucherEntryCodeNo, string accCode, string trType, string description, Nullable<decimal> debitAmount, Nullable<decimal> creditAmount, string chequeNo, Nullable<System.DateTime> chequeDate, string bankName, string branch, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, Nullable<System.DateTime> voucherEntryDetailsDate)
        {
            var voucherEntryDetailsCodeNoParameter = voucherEntryDetailsCodeNo != null ?
                new ObjectParameter("VoucherEntryDetailsCodeNo", voucherEntryDetailsCodeNo) :
                new ObjectParameter("VoucherEntryDetailsCodeNo", typeof(string));
    
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var debitAmountParameter = debitAmount.HasValue ?
                new ObjectParameter("DebitAmount", debitAmount) :
                new ObjectParameter("DebitAmount", typeof(decimal));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(decimal));
    
            var chequeNoParameter = chequeNo != null ?
                new ObjectParameter("ChequeNo", chequeNo) :
                new ObjectParameter("ChequeNo", typeof(string));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var voucherEntryDetailsDateParameter = voucherEntryDetailsDate.HasValue ?
                new ObjectParameter("VoucherEntryDetailsDate", voucherEntryDetailsDate) :
                new ObjectParameter("VoucherEntryDetailsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherEntryDetails_Insert_Acc_VoucherEntryDetails", voucherEntryDetailsCodeNoParameter, voucherEntryCodeNoParameter, accCodeParameter, trTypeParameter, descriptionParameter, debitAmountParameter, creditAmountParameter, chequeNoParameter, chequeDateParameter, bankNameParameter, branchParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, voucherEntryDetailsDateParameter);
        }
    
        public virtual int proc_wbFrm_VoucherEntryDetails_Insert_Acc_VoucherEntryDetails1(string voucherEntryDetailsCodeNo, string voucherEntryCodeNo, string accCode, string trType, string description, Nullable<decimal> debitAmount, Nullable<decimal> creditAmount, string chequeNo, Nullable<System.DateTime> chequeDate, string bankName, string branch, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, Nullable<System.DateTime> voucherEntryDetailsDate)
        {
            var voucherEntryDetailsCodeNoParameter = voucherEntryDetailsCodeNo != null ?
                new ObjectParameter("VoucherEntryDetailsCodeNo", voucherEntryDetailsCodeNo) :
                new ObjectParameter("VoucherEntryDetailsCodeNo", typeof(string));
    
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var debitAmountParameter = debitAmount.HasValue ?
                new ObjectParameter("DebitAmount", debitAmount) :
                new ObjectParameter("DebitAmount", typeof(decimal));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(decimal));
    
            var chequeNoParameter = chequeNo != null ?
                new ObjectParameter("ChequeNo", chequeNo) :
                new ObjectParameter("ChequeNo", typeof(string));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var voucherEntryDetailsDateParameter = voucherEntryDetailsDate.HasValue ?
                new ObjectParameter("VoucherEntryDetailsDate", voucherEntryDetailsDate) :
                new ObjectParameter("VoucherEntryDetailsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherEntryDetails_Insert_Acc_VoucherEntryDetails1", voucherEntryDetailsCodeNoParameter, voucherEntryCodeNoParameter, accCodeParameter, trTypeParameter, descriptionParameter, debitAmountParameter, creditAmountParameter, chequeNoParameter, chequeDateParameter, bankNameParameter, branchParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, voucherEntryDetailsDateParameter);
        }
    
        public virtual int proc_wbFrm_VoucherType_Insert_Acc_VoucherType(string voucherType_Code, string voucher_TypeName, string description, string numberingMethod, Nullable<decimal> startingNumber, Nullable<decimal> resetDuration, string resetDurationType_Code, string prefix, string suffix, Nullable<decimal> padding, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            var voucher_TypeNameParameter = voucher_TypeName != null ?
                new ObjectParameter("Voucher_TypeName", voucher_TypeName) :
                new ObjectParameter("Voucher_TypeName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var numberingMethodParameter = numberingMethod != null ?
                new ObjectParameter("numberingMethod", numberingMethod) :
                new ObjectParameter("numberingMethod", typeof(string));
    
            var startingNumberParameter = startingNumber.HasValue ?
                new ObjectParameter("startingNumber", startingNumber) :
                new ObjectParameter("startingNumber", typeof(decimal));
    
            var resetDurationParameter = resetDuration.HasValue ?
                new ObjectParameter("resetDuration", resetDuration) :
                new ObjectParameter("resetDuration", typeof(decimal));
    
            var resetDurationType_CodeParameter = resetDurationType_Code != null ?
                new ObjectParameter("resetDurationType_Code", resetDurationType_Code) :
                new ObjectParameter("resetDurationType_Code", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var paddingParameter = padding.HasValue ?
                new ObjectParameter("padding", padding) :
                new ObjectParameter("padding", typeof(decimal));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherType_Insert_Acc_VoucherType", voucherType_CodeParameter, voucher_TypeNameParameter, descriptionParameter, numberingMethodParameter, startingNumberParameter, resetDurationParameter, resetDurationType_CodeParameter, prefixParameter, suffixParameter, paddingParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_VoucherType_Update_Acc_VoucherType(Nullable<decimal> autoId, string voucherTypeCodeNo, string voucherName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherTypeCodeNoParameter = voucherTypeCodeNo != null ?
                new ObjectParameter("VoucherTypeCodeNo", voucherTypeCodeNo) :
                new ObjectParameter("VoucherTypeCodeNo", typeof(string));
    
            var voucherNameParameter = voucherName != null ?
                new ObjectParameter("VoucherName", voucherName) :
                new ObjectParameter("VoucherName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherType_Update_Acc_VoucherType", autoIdParameter, voucherTypeCodeNoParameter, voucherNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrm_VoucherType_Update_Acc_VoucherType1(Nullable<decimal> autoId, string voucherType_Code, string voucher_TypeName, string description, string numberingMethod, Nullable<decimal> startingNumber, Nullable<decimal> resetDuration, string resetDurationType_Code, string prefix, string suffix, Nullable<decimal> padding, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            var voucher_TypeNameParameter = voucher_TypeName != null ?
                new ObjectParameter("Voucher_TypeName", voucher_TypeName) :
                new ObjectParameter("Voucher_TypeName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var numberingMethodParameter = numberingMethod != null ?
                new ObjectParameter("numberingMethod", numberingMethod) :
                new ObjectParameter("numberingMethod", typeof(string));
    
            var startingNumberParameter = startingNumber.HasValue ?
                new ObjectParameter("startingNumber", startingNumber) :
                new ObjectParameter("startingNumber", typeof(decimal));
    
            var resetDurationParameter = resetDuration.HasValue ?
                new ObjectParameter("resetDuration", resetDuration) :
                new ObjectParameter("resetDuration", typeof(decimal));
    
            var resetDurationType_CodeParameter = resetDurationType_Code != null ?
                new ObjectParameter("resetDurationType_Code", resetDurationType_Code) :
                new ObjectParameter("resetDurationType_Code", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("suffix", suffix) :
                new ObjectParameter("suffix", typeof(string));
    
            var paddingParameter = padding.HasValue ?
                new ObjectParameter("padding", padding) :
                new ObjectParameter("padding", typeof(decimal));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrm_VoucherType_Update_Acc_VoucherType1", autoIdParameter, voucherType_CodeParameter, voucher_TypeNameParameter, descriptionParameter, numberingMethodParameter, startingNumberParameter, resetDurationParameter, resetDurationType_CodeParameter, prefixParameter, suffixParameter, paddingParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry");
        }
    
        public virtual int proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry_2(string voucherEntryCodeNo)
        {
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry_2", voucherEntryCodeNoParameter);
        }
    
        public virtual int proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry_SigngleLoad(string voucherNo)
        {
            var voucherNoParameter = voucherNo != null ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAcc_VoucherEntry_Select_Acc_VoucherEntry_SigngleLoad", voucherNoParameter);
        }
    
        public virtual int proc_wbFrmAcc_VoucherEntryDetails_Select_Acc_VoucherEntryDetails(string voucherEntryCodeNo)
        {
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAcc_VoucherEntryDetails_Select_Acc_VoucherEntryDetails", voucherEntryCodeNoParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdBulkEntry_Update_HRM_ATD_BulkEntry(Nullable<decimal> autoId, string bulkEntryCode, string employeeId, string attendanceTypeCode, Nullable<System.DateTime> date, Nullable<System.TimeSpan> time, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var bulkEntryCodeParameter = bulkEntryCode != null ?
                new ObjectParameter("BulkEntryCode", bulkEntryCode) :
                new ObjectParameter("BulkEntryCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdBulkEntry_Update_HRM_ATD_BulkEntry", autoIdParameter, bulkEntryCodeParameter, employeeIdParameter, attendanceTypeCodeParameter, dateParameter, timeParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdCompanyWeekEnd_Insert_HRM_ATD_CompanyWeekEnd(string companyWeekEndCode, string weekend, string effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            var effectiveDateParameter = effectiveDate != null ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdCompanyWeekEnd_Insert_HRM_ATD_CompanyWeekEnd", companyWeekEndCodeParameter, weekendParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdCompanyWeekEnd_Update_HRM_ATD_CompanyWeekEnd(Nullable<decimal> autoId, string companyWeekEndCode, string weekend, string effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            var effectiveDateParameter = effectiveDate != null ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdCompanyWeekEnd_Update_HRM_ATD_CompanyWeekEnd", autoIdParameter, companyWeekEndCodeParameter, weekendParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdEmployeeWeekEnd_Insert_HRM_ATD_EmployeeWeekEnd(string employeeWeekEndCode, string employeeCode, string weekendDay, string effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var employeeWeekEndCodeParameter = employeeWeekEndCode != null ?
                new ObjectParameter("EmployeeWeekEndCode", employeeWeekEndCode) :
                new ObjectParameter("EmployeeWeekEndCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var weekendDayParameter = weekendDay != null ?
                new ObjectParameter("WeekendDay", weekendDay) :
                new ObjectParameter("WeekendDay", typeof(string));
    
            var effectiveDateParameter = effectiveDate != null ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdEmployeeWeekEnd_Insert_HRM_ATD_EmployeeWeekEnd", employeeWeekEndCodeParameter, employeeCodeParameter, weekendDayParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdEmployeeWeekEnd_Update_HRM_ATD_EmployeeWeekEnd(Nullable<decimal> autoId, string employeeWeekEndCode, string employeeCode, string weekendDay, string effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeWeekEndCodeParameter = employeeWeekEndCode != null ?
                new ObjectParameter("EmployeeWeekEndCode", employeeWeekEndCode) :
                new ObjectParameter("EmployeeWeekEndCode", typeof(string));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var weekendDayParameter = weekendDay != null ?
                new ObjectParameter("WeekendDay", weekendDay) :
                new ObjectParameter("WeekendDay", typeof(string));
    
            var effectiveDateParameter = effectiveDate != null ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdEmployeeWeekEnd_Update_HRM_ATD_EmployeeWeekEnd", autoIdParameter, employeeWeekEndCodeParameter, employeeCodeParameter, weekendDayParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmAtdHoliday_Delete_HRM_ATD_Holiday(string holidayCode)
        {
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdHoliday_Delete_HRM_ATD_Holiday", holidayCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdHoliday_Insert_HRM_ATD_Holiday(string holidayCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> noOfDays, string holidayName, string holidayType, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(byte));
    
            var holidayNameParameter = holidayName != null ?
                new ObjectParameter("HolidayName", holidayName) :
                new ObjectParameter("HolidayName", typeof(string));
    
            var holidayTypeParameter = holidayType != null ?
                new ObjectParameter("HolidayType", holidayType) :
                new ObjectParameter("HolidayType", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdHoliday_Insert_HRM_ATD_Holiday", holidayCodeParameter, fromDateParameter, toDateParameter, noOfDaysParameter, holidayNameParameter, holidayTypeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdHoliday_Update_HRM_ATD_Holiday(Nullable<decimal> autoId, string holidayCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> noOfDays, string holidayName, string holidayType, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var holidayCodeParameter = holidayCode != null ?
                new ObjectParameter("HolidayCode", holidayCode) :
                new ObjectParameter("HolidayCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(byte));
    
            var holidayNameParameter = holidayName != null ?
                new ObjectParameter("HolidayName", holidayName) :
                new ObjectParameter("HolidayName", typeof(string));
    
            var holidayTypeParameter = holidayType != null ?
                new ObjectParameter("HolidayType", holidayType) :
                new ObjectParameter("HolidayType", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdHoliday_Update_HRM_ATD_Holiday", autoIdParameter, holidayCodeParameter, fromDateParameter, toDateParameter, noOfDaysParameter, holidayNameParameter, holidayTypeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmAtdManual_Delete_HRM_ATD_Manual(string manualCode)
        {
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdManual_Delete_HRM_ATD_Manual", manualCodeParameter);
        }
    
        public virtual int proc_wbFrmAtdManual_Insert_HRM_ATD_Manual(string manualCode, string employeeId, string bulkEntryId, string attdEntryType, string attendanceTypeCode, Nullable<System.DateTime> date, Nullable<System.DateTime> time, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string latitude, string longitude, string attendanceLocation, string mapUrl)
        {
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var bulkEntryIdParameter = bulkEntryId != null ?
                new ObjectParameter("BulkEntryId", bulkEntryId) :
                new ObjectParameter("BulkEntryId", typeof(string));
    
            var attdEntryTypeParameter = attdEntryType != null ?
                new ObjectParameter("AttdEntryType", attdEntryType) :
                new ObjectParameter("AttdEntryType", typeof(string));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var attendanceLocationParameter = attendanceLocation != null ?
                new ObjectParameter("AttendanceLocation", attendanceLocation) :
                new ObjectParameter("AttendanceLocation", typeof(string));
    
            var mapUrlParameter = mapUrl != null ?
                new ObjectParameter("MapUrl", mapUrl) :
                new ObjectParameter("MapUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdManual_Insert_HRM_ATD_Manual", manualCodeParameter, employeeIdParameter, bulkEntryIdParameter, attdEntryTypeParameter, attendanceTypeCodeParameter, dateParameter, timeParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, latitudeParameter, longitudeParameter, attendanceLocationParameter, mapUrlParameter);
        }
    
        public virtual int proc_wbFrmAtdManual_Update_HRM_ATD_Manual(Nullable<decimal> autoId, string manualCode, string employeeId, string attendanceTypeCode, Nullable<System.DateTime> date, Nullable<System.DateTime> time, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode, string latitude, string longitude, string attendanceLocation, string mapUrl)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var manualCodeParameter = manualCode != null ?
                new ObjectParameter("ManualCode", manualCode) :
                new ObjectParameter("ManualCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var attendanceLocationParameter = attendanceLocation != null ?
                new ObjectParameter("AttendanceLocation", attendanceLocation) :
                new ObjectParameter("AttendanceLocation", typeof(string));
    
            var mapUrlParameter = mapUrl != null ?
                new ObjectParameter("MapUrl", mapUrl) :
                new ObjectParameter("MapUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdManual_Update_HRM_ATD_Manual", autoIdParameter, manualCodeParameter, employeeIdParameter, attendanceTypeCodeParameter, dateParameter, timeParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter, latitudeParameter, longitudeParameter, attendanceLocationParameter, mapUrlParameter);
        }
    
        public virtual int proc_wbFrmAtdShift_Delete_HRM_ATD_Shift(string shiftCode)
        {
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdShift_Delete_HRM_ATD_Shift", shiftCodeParameter);
        }
    
        public virtual int proc_wbFrmAtdShift_Insert_HRM_ATD_Shift(string shiftCode, string shiftName, string shiftShortName, Nullable<System.DateTime> shiftStartTime, Nullable<System.DateTime> shiftEndTime, Nullable<System.DateTime> lateTime, Nullable<System.DateTime> absentTime, Nullable<System.DateTime> wEF, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var shiftShortNameParameter = shiftShortName != null ?
                new ObjectParameter("ShiftShortName", shiftShortName) :
                new ObjectParameter("ShiftShortName", typeof(string));
    
            var shiftStartTimeParameter = shiftStartTime.HasValue ?
                new ObjectParameter("ShiftStartTime", shiftStartTime) :
                new ObjectParameter("ShiftStartTime", typeof(System.DateTime));
    
            var shiftEndTimeParameter = shiftEndTime.HasValue ?
                new ObjectParameter("ShiftEndTime", shiftEndTime) :
                new ObjectParameter("ShiftEndTime", typeof(System.DateTime));
    
            var lateTimeParameter = lateTime.HasValue ?
                new ObjectParameter("LateTime", lateTime) :
                new ObjectParameter("LateTime", typeof(System.DateTime));
    
            var absentTimeParameter = absentTime.HasValue ?
                new ObjectParameter("AbsentTime", absentTime) :
                new ObjectParameter("AbsentTime", typeof(System.DateTime));
    
            var wEFParameter = wEF.HasValue ?
                new ObjectParameter("WEF", wEF) :
                new ObjectParameter("WEF", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdShift_Insert_HRM_ATD_Shift", shiftCodeParameter, shiftNameParameter, shiftShortNameParameter, shiftStartTimeParameter, shiftEndTimeParameter, lateTimeParameter, absentTimeParameter, wEFParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdShift_Update_HRM_ATD_Shift(Nullable<decimal> autoId, string shiftCode, string shiftName, string shiftShortName, Nullable<System.DateTime> shiftStartTime, Nullable<System.DateTime> shiftEndTime, Nullable<System.DateTime> lateTime, Nullable<System.DateTime> absentTime, Nullable<System.DateTime> wEF, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var shiftShortNameParameter = shiftShortName != null ?
                new ObjectParameter("ShiftShortName", shiftShortName) :
                new ObjectParameter("ShiftShortName", typeof(string));
    
            var shiftStartTimeParameter = shiftStartTime.HasValue ?
                new ObjectParameter("ShiftStartTime", shiftStartTime) :
                new ObjectParameter("ShiftStartTime", typeof(System.DateTime));
    
            var shiftEndTimeParameter = shiftEndTime.HasValue ?
                new ObjectParameter("ShiftEndTime", shiftEndTime) :
                new ObjectParameter("ShiftEndTime", typeof(System.DateTime));
    
            var lateTimeParameter = lateTime.HasValue ?
                new ObjectParameter("LateTime", lateTime) :
                new ObjectParameter("LateTime", typeof(System.DateTime));
    
            var absentTimeParameter = absentTime.HasValue ?
                new ObjectParameter("AbsentTime", absentTime) :
                new ObjectParameter("AbsentTime", typeof(System.DateTime));
    
            var wEFParameter = wEF.HasValue ?
                new ObjectParameter("WEF", wEF) :
                new ObjectParameter("WEF", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdShift_Update_HRM_ATD_Shift", autoIdParameter, shiftCodeParameter, shiftNameParameter, shiftShortNameParameter, shiftStartTimeParameter, shiftEndTimeParameter, lateTimeParameter, absentTimeParameter, wEFParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmAtdWorkingDay_Delete_HRM_ATD_WorkingDay(string workingDayCode)
        {
            var workingDayCodeParameter = workingDayCode != null ?
                new ObjectParameter("WorkingDayCode", workingDayCode) :
                new ObjectParameter("WorkingDayCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAtdWorkingDay_Delete_HRM_ATD_WorkingDay", workingDayCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdWorkingDay_Insert_HRM_ATD_WorkingDay(string workingDayCode, string workingDayName, string workingDayType, Nullable<System.DateTime> workingDayDate, Nullable<System.DateTime> toDate, Nullable<byte> noOfDays, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var workingDayCodeParameter = workingDayCode != null ?
                new ObjectParameter("WorkingDayCode", workingDayCode) :
                new ObjectParameter("WorkingDayCode", typeof(string));
    
            var workingDayNameParameter = workingDayName != null ?
                new ObjectParameter("WorkingDayName", workingDayName) :
                new ObjectParameter("WorkingDayName", typeof(string));
    
            var workingDayTypeParameter = workingDayType != null ?
                new ObjectParameter("WorkingDayType", workingDayType) :
                new ObjectParameter("WorkingDayType", typeof(string));
    
            var workingDayDateParameter = workingDayDate.HasValue ?
                new ObjectParameter("WorkingDayDate", workingDayDate) :
                new ObjectParameter("WorkingDayDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(byte));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdWorkingDay_Insert_HRM_ATD_WorkingDay", workingDayCodeParameter, workingDayNameParameter, workingDayTypeParameter, workingDayDateParameter, toDateParameter, noOfDaysParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAtdWorkingDay_Update_HRM_ATD_WorkingDay(Nullable<decimal> autoId, string workingDayCode, string workingDayName, string workingDayType, Nullable<System.DateTime> workingDayDate, Nullable<System.DateTime> toDate, Nullable<byte> noOfDays, string remarks, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var workingDayCodeParameter = workingDayCode != null ?
                new ObjectParameter("WorkingDayCode", workingDayCode) :
                new ObjectParameter("WorkingDayCode", typeof(string));
    
            var workingDayNameParameter = workingDayName != null ?
                new ObjectParameter("WorkingDayName", workingDayName) :
                new ObjectParameter("WorkingDayName", typeof(string));
    
            var workingDayTypeParameter = workingDayType != null ?
                new ObjectParameter("WorkingDayType", workingDayType) :
                new ObjectParameter("WorkingDayType", typeof(string));
    
            var workingDayDateParameter = workingDayDate.HasValue ?
                new ObjectParameter("WorkingDayDate", workingDayDate) :
                new ObjectParameter("WorkingDayDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(byte));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAtdWorkingDay_Update_HRM_ATD_WorkingDay", autoIdParameter, workingDayCodeParameter, workingDayNameParameter, workingDayTypeParameter, workingDayDateParameter, toDateParameter, noOfDaysParameter, remarksParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmAttendanceTypeInformation_Delete_HRM_ATD_AttendanceType(string attendanceTypeCode)
        {
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmAttendanceTypeInformation_Delete_HRM_ATD_AttendanceType", attendanceTypeCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAttendanceTypeInformation_Insert_HRM_ATD_AttendanceType(string attendanceTypeCode, string attendanceTypeName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var attendanceTypeNameParameter = attendanceTypeName != null ?
                new ObjectParameter("AttendanceTypeName", attendanceTypeName) :
                new ObjectParameter("AttendanceTypeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAttendanceTypeInformation_Insert_HRM_ATD_AttendanceType", attendanceTypeCodeParameter, attendanceTypeNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmAttendanceTypeInformation_Update_HRM_ATD_AttendanceType(Nullable<decimal> autoId, string attendanceTypeCode, string attendanceTypeName, string shortName, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var attendanceTypeCodeParameter = attendanceTypeCode != null ?
                new ObjectParameter("AttendanceTypeCode", attendanceTypeCode) :
                new ObjectParameter("AttendanceTypeCode", typeof(string));
    
            var attendanceTypeNameParameter = attendanceTypeName != null ?
                new ObjectParameter("AttendanceTypeName", attendanceTypeName) :
                new ObjectParameter("AttendanceTypeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmAttendanceTypeInformation_Update_HRM_ATD_AttendanceType", autoIdParameter, attendanceTypeCodeParameter, attendanceTypeNameParameter, shortNameParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmCompanyWeekEnd_Delete_HRM_ATD_CompanyWeekEnd(string companyWeekEndCode)
        {
            var companyWeekEndCodeParameter = companyWeekEndCode != null ?
                new ObjectParameter("CompanyWeekEndCode", companyWeekEndCode) :
                new ObjectParameter("CompanyWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmCompanyWeekEnd_Delete_HRM_ATD_CompanyWeekEnd", companyWeekEndCodeParameter);
        }
    
        public virtual int proc_wbFrmEmpAttendanceSetup_Delete_HRM_ATD_EmpAttendanceSetup(string empAttdSetupCode)
        {
            var empAttdSetupCodeParameter = empAttdSetupCode != null ?
                new ObjectParameter("EmpAttdSetupCode", empAttdSetupCode) :
                new ObjectParameter("EmpAttdSetupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmpAttendanceSetup_Delete_HRM_ATD_EmpAttendanceSetup", empAttdSetupCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmEmpAttendanceSetup_Insert_HRM_ATD_EmpAttendanceSetup(string empAttdSetupCode, string employeeId, string shiftCode, string weekend, Nullable<System.DateTime> effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var empAttdSetupCodeParameter = empAttdSetupCode != null ?
                new ObjectParameter("EmpAttdSetupCode", empAttdSetupCode) :
                new ObjectParameter("EmpAttdSetupCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmEmpAttendanceSetup_Insert_HRM_ATD_EmpAttendanceSetup", empAttdSetupCodeParameter, employeeIdParameter, shiftCodeParameter, weekendParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<string> proc_wbFrmEmpAttendanceSetup_Update_HRM_ATD_EmpAttendanceSetup(Nullable<decimal> autoId, string empAttdSetupCode, string employeeId, string shiftCode, string weekend, Nullable<System.DateTime> effectiveDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var empAttdSetupCodeParameter = empAttdSetupCode != null ?
                new ObjectParameter("EmpAttdSetupCode", empAttdSetupCode) :
                new ObjectParameter("EmpAttdSetupCode", typeof(string));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var weekendParameter = weekend != null ?
                new ObjectParameter("Weekend", weekend) :
                new ObjectParameter("Weekend", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proc_wbFrmEmpAttendanceSetup_Update_HRM_ATD_EmpAttendanceSetup", autoIdParameter, empAttdSetupCodeParameter, employeeIdParameter, shiftCodeParameter, weekendParameter, effectiveDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_Result> proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration(string employeeIdConfiguration_Code)
        {
            var employeeIdConfiguration_CodeParameter = employeeIdConfiguration_Code != null ?
                new ObjectParameter("EmployeeIdConfiguration_Code", employeeIdConfiguration_Code) :
                new ObjectParameter("EmployeeIdConfiguration_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_Result>("proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration", employeeIdConfiguration_CodeParameter);
        }
    
        public virtual ObjectResult<proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_2_Result> proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_2_Result>("proc_wbFrmEmployeeIdConfiguration_Select_HRM_EmployeeIdConfiguration_2");
        }
    
        public virtual int proc_wbFrmEmployeeInfo_Insert_HRM_EmployeeGeneralInfo(string employeeCode, string employeeID, string employeeName, string employeeShortName, string fatherName, string motherName, string nationalityCode, Nullable<System.DateTime> dateOfBirth, string placeOfBirth, string bloodGroupCode, string sexCode, string religionCode, string presentAddress, string permanentAddress, string telephone, string mobileNo, string email, string maritalStatusCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeShortNameParameter = employeeShortName != null ?
                new ObjectParameter("EmployeeShortName", employeeShortName) :
                new ObjectParameter("EmployeeShortName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var placeOfBirthParameter = placeOfBirth != null ?
                new ObjectParameter("PlaceOfBirth", placeOfBirth) :
                new ObjectParameter("PlaceOfBirth", typeof(string));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeInfo_Insert_HRM_EmployeeGeneralInfo", employeeCodeParameter, employeeIDParameter, employeeNameParameter, employeeShortNameParameter, fatherNameParameter, motherNameParameter, nationalityCodeParameter, dateOfBirthParameter, placeOfBirthParameter, bloodGroupCodeParameter, sexCodeParameter, religionCodeParameter, presentAddressParameter, permanentAddressParameter, telephoneParameter, mobileNoParameter, emailParameter, maritalStatusCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmEmployeeInfo_Update_HRM_Employee(Nullable<decimal> autoId, string employeeCode, string employeeID, string firstName, string lastName, string fatherName, string motherName, string nationalityCode, Nullable<System.DateTime> dateOfBirth, string placeOfBirth, string bloodGroupCode, string sexCode, string religionCode, string presentAddress, string permanentAddress, string mobileNo, string personalEmail, string maritalStatusCode, string companyCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string empPhoto, string fingerPrintId, string digitalSignature, string shortName, string nationalIdNo, string hobbies, Nullable<System.DateTime> marriageDate, string banglaFirstName, string banglaLastName, string spouse, string noOfSon, string noOfDaughter, string tIN, string fathersOccupation, string mothersOccupation, Nullable<System.DateTime> dateOfBirthOriginal, string birthCertificateNo, string passportNo, string placeOfIssue, Nullable<System.DateTime> dateIssued, Nullable<System.DateTime> passportExpiryDate, string licenseNo, string airportSecurityPassNo, Nullable<System.DateTime> securityPassExpiryDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var placeOfBirthParameter = placeOfBirth != null ?
                new ObjectParameter("PlaceOfBirth", placeOfBirth) :
                new ObjectParameter("PlaceOfBirth", typeof(string));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var personalEmailParameter = personalEmail != null ?
                new ObjectParameter("PersonalEmail", personalEmail) :
                new ObjectParameter("PersonalEmail", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var empPhotoParameter = empPhoto != null ?
                new ObjectParameter("EmpPhoto", empPhoto) :
                new ObjectParameter("EmpPhoto", typeof(string));
    
            var fingerPrintIdParameter = fingerPrintId != null ?
                new ObjectParameter("FingerPrintId", fingerPrintId) :
                new ObjectParameter("FingerPrintId", typeof(string));
    
            var digitalSignatureParameter = digitalSignature != null ?
                new ObjectParameter("DigitalSignature", digitalSignature) :
                new ObjectParameter("DigitalSignature", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var nationalIdNoParameter = nationalIdNo != null ?
                new ObjectParameter("NationalIdNo", nationalIdNo) :
                new ObjectParameter("NationalIdNo", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("Hobbies", hobbies) :
                new ObjectParameter("Hobbies", typeof(string));
    
            var marriageDateParameter = marriageDate.HasValue ?
                new ObjectParameter("MarriageDate", marriageDate) :
                new ObjectParameter("MarriageDate", typeof(System.DateTime));
    
            var banglaFirstNameParameter = banglaFirstName != null ?
                new ObjectParameter("BanglaFirstName", banglaFirstName) :
                new ObjectParameter("BanglaFirstName", typeof(string));
    
            var banglaLastNameParameter = banglaLastName != null ?
                new ObjectParameter("BanglaLastName", banglaLastName) :
                new ObjectParameter("BanglaLastName", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("Spouse", spouse) :
                new ObjectParameter("Spouse", typeof(string));
    
            var noOfSonParameter = noOfSon != null ?
                new ObjectParameter("NoOfSon", noOfSon) :
                new ObjectParameter("NoOfSon", typeof(string));
    
            var noOfDaughterParameter = noOfDaughter != null ?
                new ObjectParameter("NoOfDaughter", noOfDaughter) :
                new ObjectParameter("NoOfDaughter", typeof(string));
    
            var tINParameter = tIN != null ?
                new ObjectParameter("TIN", tIN) :
                new ObjectParameter("TIN", typeof(string));
    
            var fathersOccupationParameter = fathersOccupation != null ?
                new ObjectParameter("FathersOccupation", fathersOccupation) :
                new ObjectParameter("FathersOccupation", typeof(string));
    
            var mothersOccupationParameter = mothersOccupation != null ?
                new ObjectParameter("MothersOccupation", mothersOccupation) :
                new ObjectParameter("MothersOccupation", typeof(string));
    
            var dateOfBirthOriginalParameter = dateOfBirthOriginal.HasValue ?
                new ObjectParameter("DateOfBirthOriginal", dateOfBirthOriginal) :
                new ObjectParameter("DateOfBirthOriginal", typeof(System.DateTime));
    
            var birthCertificateNoParameter = birthCertificateNo != null ?
                new ObjectParameter("BirthCertificateNo", birthCertificateNo) :
                new ObjectParameter("BirthCertificateNo", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var placeOfIssueParameter = placeOfIssue != null ?
                new ObjectParameter("PlaceOfIssue", placeOfIssue) :
                new ObjectParameter("PlaceOfIssue", typeof(string));
    
            var dateIssuedParameter = dateIssued.HasValue ?
                new ObjectParameter("DateIssued", dateIssued) :
                new ObjectParameter("DateIssued", typeof(System.DateTime));
    
            var passportExpiryDateParameter = passportExpiryDate.HasValue ?
                new ObjectParameter("PassportExpiryDate", passportExpiryDate) :
                new ObjectParameter("PassportExpiryDate", typeof(System.DateTime));
    
            var licenseNoParameter = licenseNo != null ?
                new ObjectParameter("LicenseNo", licenseNo) :
                new ObjectParameter("LicenseNo", typeof(string));
    
            var airportSecurityPassNoParameter = airportSecurityPassNo != null ?
                new ObjectParameter("AirportSecurityPassNo", airportSecurityPassNo) :
                new ObjectParameter("AirportSecurityPassNo", typeof(string));
    
            var securityPassExpiryDateParameter = securityPassExpiryDate.HasValue ?
                new ObjectParameter("SecurityPassExpiryDate", securityPassExpiryDate) :
                new ObjectParameter("SecurityPassExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeInfo_Update_HRM_Employee", autoIdParameter, employeeCodeParameter, employeeIDParameter, firstNameParameter, lastNameParameter, fatherNameParameter, motherNameParameter, nationalityCodeParameter, dateOfBirthParameter, placeOfBirthParameter, bloodGroupCodeParameter, sexCodeParameter, religionCodeParameter, presentAddressParameter, permanentAddressParameter, mobileNoParameter, personalEmailParameter, maritalStatusCodeParameter, companyCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, empPhotoParameter, fingerPrintIdParameter, digitalSignatureParameter, shortNameParameter, nationalIdNoParameter, hobbiesParameter, marriageDateParameter, banglaFirstNameParameter, banglaLastNameParameter, spouseParameter, noOfSonParameter, noOfDaughterParameter, tINParameter, fathersOccupationParameter, mothersOccupationParameter, dateOfBirthOriginalParameter, birthCertificateNoParameter, passportNoParameter, placeOfIssueParameter, dateIssuedParameter, passportExpiryDateParameter, licenseNoParameter, airportSecurityPassNoParameter, securityPassExpiryDateParameter);
        }
    
        public virtual int proc_wbFrmEmployeeInfo_Update_HRM_Employee_2(Nullable<decimal> autoId, string employeeCode, string employeeID, string passportNo, string placeOfIssue, Nullable<System.DateTime> dateIssued, Nullable<System.DateTime> passportExpiryDate, string bankName, string bankAccountNo, string bankBranch, string aTMCardNo, string licenseNo, string licenseType, Nullable<System.DateTime> dateIssued1, Nullable<System.DateTime> expiryDate, string symbolOfVehicleClass, string placeOfIssue1, string workPermitNumber, string workPermitType, Nullable<System.DateTime> wPEffectiveDate, Nullable<System.DateTime> wPExpireDate, string currencyCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var placeOfIssueParameter = placeOfIssue != null ?
                new ObjectParameter("PlaceOfIssue", placeOfIssue) :
                new ObjectParameter("PlaceOfIssue", typeof(string));
    
            var dateIssuedParameter = dateIssued.HasValue ?
                new ObjectParameter("DateIssued", dateIssued) :
                new ObjectParameter("DateIssued", typeof(System.DateTime));
    
            var passportExpiryDateParameter = passportExpiryDate.HasValue ?
                new ObjectParameter("PassportExpiryDate", passportExpiryDate) :
                new ObjectParameter("PassportExpiryDate", typeof(System.DateTime));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankAccountNoParameter = bankAccountNo != null ?
                new ObjectParameter("BankAccountNo", bankAccountNo) :
                new ObjectParameter("BankAccountNo", typeof(string));
    
            var bankBranchParameter = bankBranch != null ?
                new ObjectParameter("BankBranch", bankBranch) :
                new ObjectParameter("BankBranch", typeof(string));
    
            var aTMCardNoParameter = aTMCardNo != null ?
                new ObjectParameter("ATMCardNo", aTMCardNo) :
                new ObjectParameter("ATMCardNo", typeof(string));
    
            var licenseNoParameter = licenseNo != null ?
                new ObjectParameter("LicenseNo", licenseNo) :
                new ObjectParameter("LicenseNo", typeof(string));
    
            var licenseTypeParameter = licenseType != null ?
                new ObjectParameter("LicenseType", licenseType) :
                new ObjectParameter("LicenseType", typeof(string));
    
            var dateIssued1Parameter = dateIssued1.HasValue ?
                new ObjectParameter("DateIssued1", dateIssued1) :
                new ObjectParameter("DateIssued1", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var symbolOfVehicleClassParameter = symbolOfVehicleClass != null ?
                new ObjectParameter("SymbolOfVehicleClass", symbolOfVehicleClass) :
                new ObjectParameter("SymbolOfVehicleClass", typeof(string));
    
            var placeOfIssue1Parameter = placeOfIssue1 != null ?
                new ObjectParameter("PlaceOfIssue1", placeOfIssue1) :
                new ObjectParameter("PlaceOfIssue1", typeof(string));
    
            var workPermitNumberParameter = workPermitNumber != null ?
                new ObjectParameter("WorkPermitNumber", workPermitNumber) :
                new ObjectParameter("WorkPermitNumber", typeof(string));
    
            var workPermitTypeParameter = workPermitType != null ?
                new ObjectParameter("WorkPermitType", workPermitType) :
                new ObjectParameter("WorkPermitType", typeof(string));
    
            var wPEffectiveDateParameter = wPEffectiveDate.HasValue ?
                new ObjectParameter("WPEffectiveDate", wPEffectiveDate) :
                new ObjectParameter("WPEffectiveDate", typeof(System.DateTime));
    
            var wPExpireDateParameter = wPExpireDate.HasValue ?
                new ObjectParameter("WPExpireDate", wPExpireDate) :
                new ObjectParameter("WPExpireDate", typeof(System.DateTime));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeInfo_Update_HRM_Employee_2", autoIdParameter, employeeCodeParameter, employeeIDParameter, passportNoParameter, placeOfIssueParameter, dateIssuedParameter, passportExpiryDateParameter, bankNameParameter, bankAccountNoParameter, bankBranchParameter, aTMCardNoParameter, licenseNoParameter, licenseTypeParameter, dateIssued1Parameter, expiryDateParameter, symbolOfVehicleClassParameter, placeOfIssue1Parameter, workPermitNumberParameter, workPermitTypeParameter, wPEffectiveDateParameter, wPExpireDateParameter, currencyCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmEmployeeInfo_Update_HRM_Employee_offi(Nullable<decimal> autoId, string employeeCode, string employeeID, string companyCode, string branchCode, string divisionCode, string departmentCode, string sectionCode, string lineCode, string locationCode, string designationCode, string empTypeCode, string employmentNatureId, string gradeCode, string stepNoId, string costCenterId, Nullable<decimal> grossSalary, string shiftCode, string currencyCode, string periodInfoId, string disbursementMethodId, string overTimeEligibility, string employeeStatus, string reportingTo, string hOD, string appointmentLetterNo, Nullable<System.DateTime> appointmentDate, Nullable<System.DateTime> joiningDate, string salaryAtJoin, Nullable<int> probationPeriod, string probationPeriodType, Nullable<System.DateTime> confirmDate, string confirmationLetterNo, Nullable<System.DateTime> confirmationLetterDate, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string telephone, string email, string attendanceCardID, Nullable<decimal> oTAmount)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var employmentNatureIdParameter = employmentNatureId != null ?
                new ObjectParameter("EmploymentNatureId", employmentNatureId) :
                new ObjectParameter("EmploymentNatureId", typeof(string));
    
            var gradeCodeParameter = gradeCode != null ?
                new ObjectParameter("GradeCode", gradeCode) :
                new ObjectParameter("GradeCode", typeof(string));
    
            var stepNoIdParameter = stepNoId != null ?
                new ObjectParameter("StepNoId", stepNoId) :
                new ObjectParameter("StepNoId", typeof(string));
    
            var costCenterIdParameter = costCenterId != null ?
                new ObjectParameter("CostCenterId", costCenterId) :
                new ObjectParameter("CostCenterId", typeof(string));
    
            var grossSalaryParameter = grossSalary.HasValue ?
                new ObjectParameter("GrossSalary", grossSalary) :
                new ObjectParameter("GrossSalary", typeof(decimal));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var periodInfoIdParameter = periodInfoId != null ?
                new ObjectParameter("PeriodInfoId", periodInfoId) :
                new ObjectParameter("PeriodInfoId", typeof(string));
    
            var disbursementMethodIdParameter = disbursementMethodId != null ?
                new ObjectParameter("DisbursementMethodId", disbursementMethodId) :
                new ObjectParameter("DisbursementMethodId", typeof(string));
    
            var overTimeEligibilityParameter = overTimeEligibility != null ?
                new ObjectParameter("OverTimeEligibility", overTimeEligibility) :
                new ObjectParameter("OverTimeEligibility", typeof(string));
    
            var employeeStatusParameter = employeeStatus != null ?
                new ObjectParameter("EmployeeStatus", employeeStatus) :
                new ObjectParameter("EmployeeStatus", typeof(string));
    
            var reportingToParameter = reportingTo != null ?
                new ObjectParameter("ReportingTo", reportingTo) :
                new ObjectParameter("ReportingTo", typeof(string));
    
            var hODParameter = hOD != null ?
                new ObjectParameter("HOD", hOD) :
                new ObjectParameter("HOD", typeof(string));
    
            var appointmentLetterNoParameter = appointmentLetterNo != null ?
                new ObjectParameter("AppointmentLetterNo", appointmentLetterNo) :
                new ObjectParameter("AppointmentLetterNo", typeof(string));
    
            var appointmentDateParameter = appointmentDate.HasValue ?
                new ObjectParameter("AppointmentDate", appointmentDate) :
                new ObjectParameter("AppointmentDate", typeof(System.DateTime));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var salaryAtJoinParameter = salaryAtJoin != null ?
                new ObjectParameter("SalaryAtJoin", salaryAtJoin) :
                new ObjectParameter("SalaryAtJoin", typeof(string));
    
            var probationPeriodParameter = probationPeriod.HasValue ?
                new ObjectParameter("ProbationPeriod", probationPeriod) :
                new ObjectParameter("ProbationPeriod", typeof(int));
    
            var probationPeriodTypeParameter = probationPeriodType != null ?
                new ObjectParameter("ProbationPeriodType", probationPeriodType) :
                new ObjectParameter("ProbationPeriodType", typeof(string));
    
            var confirmDateParameter = confirmDate.HasValue ?
                new ObjectParameter("ConfirmDate", confirmDate) :
                new ObjectParameter("ConfirmDate", typeof(System.DateTime));
    
            var confirmationLetterNoParameter = confirmationLetterNo != null ?
                new ObjectParameter("ConfirmationLetterNo", confirmationLetterNo) :
                new ObjectParameter("ConfirmationLetterNo", typeof(string));
    
            var confirmationLetterDateParameter = confirmationLetterDate.HasValue ?
                new ObjectParameter("ConfirmationLetterDate", confirmationLetterDate) :
                new ObjectParameter("ConfirmationLetterDate", typeof(System.DateTime));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var attendanceCardIDParameter = attendanceCardID != null ?
                new ObjectParameter("AttendanceCardID", attendanceCardID) :
                new ObjectParameter("AttendanceCardID", typeof(string));
    
            var oTAmountParameter = oTAmount.HasValue ?
                new ObjectParameter("OTAmount", oTAmount) :
                new ObjectParameter("OTAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeInfo_Update_HRM_Employee_offi", autoIdParameter, employeeCodeParameter, employeeIDParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, departmentCodeParameter, sectionCodeParameter, lineCodeParameter, locationCodeParameter, designationCodeParameter, empTypeCodeParameter, employmentNatureIdParameter, gradeCodeParameter, stepNoIdParameter, costCenterIdParameter, grossSalaryParameter, shiftCodeParameter, currencyCodeParameter, periodInfoIdParameter, disbursementMethodIdParameter, overTimeEligibilityParameter, employeeStatusParameter, reportingToParameter, hODParameter, appointmentLetterNoParameter, appointmentDateParameter, joiningDateParameter, salaryAtJoinParameter, probationPeriodParameter, probationPeriodTypeParameter, confirmDateParameter, confirmationLetterNoParameter, confirmationLetterDateParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, telephoneParameter, emailParameter, attendanceCardIDParameter, oTAmountParameter);
        }
    
        public virtual int proc_wbFrmEmployeeInfo_Update_HRM_EmployeeGeneralInfo(Nullable<decimal> autoId, string employeeCode, string employeeID, string employeeName, string employeeShortName, string fatherName, string motherName, string nationalityCode, Nullable<System.DateTime> dateOfBirth, string placeOfBirth, string bloodGroupCode, string sexCode, string religionCode, string presentAddress, string permanentAddress, string telephone, string mobileNo, string email, string maritalStatusCode, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate)
        {
            var autoIdParameter = autoId.HasValue ?
                new ObjectParameter("autoId", autoId) :
                new ObjectParameter("autoId", typeof(decimal));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeShortNameParameter = employeeShortName != null ?
                new ObjectParameter("EmployeeShortName", employeeShortName) :
                new ObjectParameter("EmployeeShortName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var nationalityCodeParameter = nationalityCode != null ?
                new ObjectParameter("NationalityCode", nationalityCode) :
                new ObjectParameter("NationalityCode", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var placeOfBirthParameter = placeOfBirth != null ?
                new ObjectParameter("PlaceOfBirth", placeOfBirth) :
                new ObjectParameter("PlaceOfBirth", typeof(string));
    
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeInfo_Update_HRM_EmployeeGeneralInfo", autoIdParameter, employeeCodeParameter, employeeIDParameter, employeeNameParameter, employeeShortNameParameter, fatherNameParameter, motherNameParameter, nationalityCodeParameter, dateOfBirthParameter, placeOfBirthParameter, bloodGroupCodeParameter, sexCodeParameter, religionCodeParameter, presentAddressParameter, permanentAddressParameter, telephoneParameter, mobileNoParameter, emailParameter, maritalStatusCodeParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter);
        }
    
        public virtual int proc_wbFrmEmployeeWeekEnd_Delete_HRM_ATD_EmployeeWeekEnd(string employeeWeekEndCode)
        {
            var employeeWeekEndCodeParameter = employeeWeekEndCode != null ?
                new ObjectParameter("EmployeeWeekEndCode", employeeWeekEndCode) :
                new ObjectParameter("EmployeeWeekEndCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmEmployeeWeekEnd_Delete_HRM_ATD_EmployeeWeekEnd", employeeWeekEndCodeParameter);
        }
    
        public virtual ObjectResult<proc_wbFrmIdSetup_Select_HRM_Def_IdSetup_Result> proc_wbFrmIdSetup_Select_HRM_Def_IdSetup(string idSetupCode)
        {
            var idSetupCodeParameter = idSetupCode != null ?
                new ObjectParameter("IdSetupCode", idSetupCode) :
                new ObjectParameter("IdSetupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_wbFrmIdSetup_Select_HRM_Def_IdSetup_Result>("proc_wbFrmIdSetup_Select_HRM_Def_IdSetup", idSetupCodeParameter);
        }
    
        public virtual int proc_wbFrmLeaveTypeInformation_Delete_HRM_ATD_LeaveType(string leaveTypeCode)
        {
            var leaveTypeCodeParameter = leaveTypeCode != null ?
                new ObjectParameter("LeaveTypeCode", leaveTypeCode) :
                new ObjectParameter("LeaveTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmLeaveTypeInformation_Delete_HRM_ATD_LeaveType", leaveTypeCodeParameter);
        }
    
        public virtual int proc_wbFrmVoucherEntry_Select_Acc_VoucherTypeInfo(Nullable<decimal> voucherType_Code)
        {
            var voucherType_CodeParameter = voucherType_Code.HasValue ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmVoucherEntry_Select_Acc_VoucherTypeInfo", voucherType_CodeParameter);
        }
    
        public virtual int proc_wbFrmVoucherType_aspx_Select_Acc_VoucherTypeInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmVoucherType_aspx_Select_Acc_VoucherTypeInfo");
        }
    
        public virtual int proc_wbFrmVoucherType_Select_Acc_VoucherTypeInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmVoucherType_Select_Acc_VoucherTypeInfo");
        }
    
        public virtual int proc_wbFrmVoucherType_Select_Acc_VoucherTypeInfo_2(string voucherType_Code)
        {
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_wbFrmVoucherType_Select_Acc_VoucherTypeInfo_2", voucherType_CodeParameter);
        }
    
        public virtual int proc_Web_Acc_FinancialYear_Delete(string financialCodeNo)
        {
            var financialCodeNoParameter = financialCodeNo != null ?
                new ObjectParameter("FinancialCodeNo", financialCodeNo) :
                new ObjectParameter("FinancialCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Acc_FinancialYear_Delete", financialCodeNoParameter);
        }
    
        public virtual int proc_Web_Acc_Period_Delete(string periodCodeNo)
        {
            var periodCodeNoParameter = periodCodeNo != null ?
                new ObjectParameter("PeriodCodeNo", periodCodeNo) :
                new ObjectParameter("PeriodCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Acc_Period_Delete", periodCodeNoParameter);
        }
    
        public virtual int proc_Web_Acc_VoucherType_Delete(string voucherType_Code)
        {
            var voucherType_CodeParameter = voucherType_Code != null ?
                new ObjectParameter("VoucherType_Code", voucherType_Code) :
                new ObjectParameter("VoucherType_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Acc_VoucherType_Delete", voucherType_CodeParameter);
        }
    
        public virtual int proc_Web_frm_Brance_Delete_Core_Branch(string branchCode)
        {
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Brance_Delete_Core_Branch", branchCodeParameter);
        }
    
        public virtual int proc_Web_frm_Department_Delete_HRM_Def_Department(string departmentCode)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Department_Delete_HRM_Def_Department", departmentCodeParameter);
        }
    
        public virtual int proc_Web_frm_Designation_Delete_HRM_Def_Designation(string designationCode)
        {
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Designation_Delete_HRM_Def_Designation", designationCodeParameter);
        }
    
        public virtual int proc_Web_frm_Division_Delete_HRM_Def_Division(string divisionCode)
        {
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Division_Delete_HRM_Def_Division", divisionCodeParameter);
        }
    
        public virtual int proc_Web_frm_DivisionGrade_Delete_HRM_Def_DivisionGrade(string divisionGradeCode)
        {
            var divisionGradeCodeParameter = divisionGradeCode != null ?
                new ObjectParameter("DivisionGradeCode", divisionGradeCode) :
                new ObjectParameter("DivisionGradeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_DivisionGrade_Delete_HRM_Def_DivisionGrade", divisionGradeCodeParameter);
        }
    
        public virtual int proc_Web_frm_EducationalInstitute_Delete_HRM_Def_Institute(string instituteCode)
        {
            var instituteCodeParameter = instituteCode != null ?
                new ObjectParameter("InstituteCode", instituteCode) :
                new ObjectParameter("InstituteCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_EducationalInstitute_Delete_HRM_Def_Institute", instituteCodeParameter);
        }
    
        public virtual int proc_Web_frm_EmployeeException_Delete_HRM_Def_EmployeeException(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_EmployeeException_Delete_HRM_Def_EmployeeException", employeeIDParameter);
        }
    
        public virtual int proc_Web_frm_EmpType_Delete_HRM_Def_EmpType(string empTypeCode)
        {
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_EmpType_Delete_HRM_Def_EmpType", empTypeCodeParameter);
        }
    
        public virtual int proc_Web_frm_EmpType_Delete_HRM_EIS_Def_EmploymentNature(string employmentNatureId)
        {
            var employmentNatureIdParameter = employmentNatureId != null ?
                new ObjectParameter("EmploymentNatureId", employmentNatureId) :
                new ObjectParameter("EmploymentNatureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_EmpType_Delete_HRM_EIS_Def_EmploymentNature", employmentNatureIdParameter);
        }
    
        public virtual int proc_Web_frm_ExamTitle_Delete_HRM_Def_ExamTitle(string examTitleCode)
        {
            var examTitleCodeParameter = examTitleCode != null ?
                new ObjectParameter("ExamTitleCode", examTitleCode) :
                new ObjectParameter("ExamTitleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_ExamTitle_Delete_HRM_Def_ExamTitle", examTitleCodeParameter);
        }
    
        public virtual int proc_Web_frm_Line_Delete_HRM_Def_Line(string lineCode)
        {
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Line_Delete_HRM_Def_Line", lineCodeParameter);
        }
    
        public virtual int proc_Web_frm_MaritalStatus_Delete_HRM_Def_MaritalStatus(string maritalStatusCode)
        {
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_MaritalStatus_Delete_HRM_Def_MaritalStatus", maritalStatusCodeParameter);
        }
    
        public virtual int proc_Web_frm_Membership_Delete_HRM_Def_Membership(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Membership_Delete_HRM_Def_Membership", employeeCodeParameter);
        }
    
        public virtual int proc_Web_frm_Occupation_Delete_HRM_Def_Occupation(string occupationCode)
        {
            var occupationCodeParameter = occupationCode != null ?
                new ObjectParameter("OccupationCode", occupationCode) :
                new ObjectParameter("OccupationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Occupation_Delete_HRM_Def_Occupation", occupationCodeParameter);
        }
    
        public virtual int proc_Web_frm_Relationship_Delete_HRM_Def_Relationship(string relationshipCode)
        {
            var relationshipCodeParameter = relationshipCode != null ?
                new ObjectParameter("RelationshipCode", relationshipCode) :
                new ObjectParameter("RelationshipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Relationship_Delete_HRM_Def_Relationship", relationshipCodeParameter);
        }
    
        public virtual int proc_Web_frm_Religion_Delete_HRM_Def_Religion(string religionCode)
        {
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("ReligionCode", religionCode) :
                new ObjectParameter("ReligionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Religion_Delete_HRM_Def_Religion", religionCodeParameter);
        }
    
        public virtual int proc_Web_frm_Section_Delete_HRM_Def_Section(string sectionCode)
        {
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Section_Delete_HRM_Def_Section", sectionCodeParameter);
        }
    
        public virtual int proc_Web_frm_Sex_Delete_HRM_Def_Sex(string sexCode)
        {
            var sexCodeParameter = sexCode != null ?
                new ObjectParameter("SexCode", sexCode) :
                new ObjectParameter("SexCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_Sex_Delete_HRM_Def_Sex", sexCodeParameter);
        }
    
        public virtual int proc_Web_frm_TrainingTitle_Delete_HRM_Def_TrainingTitle(string trainingTitleCode)
        {
            var trainingTitleCodeParameter = trainingTitleCode != null ?
                new ObjectParameter("TrainingTitleCode", trainingTitleCode) :
                new ObjectParameter("TrainingTitleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frm_TrainingTitle_Delete_HRM_Def_TrainingTitle", trainingTitleCodeParameter);
        }
    
        public virtual int proc_Web_frmBloodGroup_Delete_HRM_Def_BloodGroup(string bloodGroupCode)
        {
            var bloodGroupCodeParameter = bloodGroupCode != null ?
                new ObjectParameter("BloodGroupCode", bloodGroupCode) :
                new ObjectParameter("BloodGroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmBloodGroup_Delete_HRM_Def_BloodGroup", bloodGroupCodeParameter);
        }
    
        public virtual int proc_Web_frmControlLedger_DeleteAcc_ControlLedger(string controlLedgerCodeNo)
        {
            var controlLedgerCodeNoParameter = controlLedgerCodeNo != null ?
                new ObjectParameter("ControlLedgerCodeNo", controlLedgerCodeNo) :
                new ObjectParameter("ControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmControlLedger_DeleteAcc_ControlLedger", controlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmCostCenter_Delete(string costCenterCodeNo)
        {
            var costCenterCodeNoParameter = costCenterCodeNo != null ?
                new ObjectParameter("CostCenterCodeNo", costCenterCodeNo) :
                new ObjectParameter("CostCenterCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmCostCenter_Delete", costCenterCodeNoParameter);
        }
    
        public virtual int proc_Web_frmGeneralLedger_DeleteFrom_Acc_ChartOfAccounts_IfTransactionAccountTrue(string nodeKey)
        {
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmGeneralLedger_DeleteFrom_Acc_ChartOfAccounts_IfTransactionAccountTrue", nodeKeyParameter);
        }
    
        public virtual int proc_Web_frmGeneralLedger_DeleteFrom_Acc_ChartOfAccountsIfTransactionAccountFalse(string nodeKey)
        {
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmGeneralLedger_DeleteFrom_Acc_ChartOfAccountsIfTransactionAccountFalse", nodeKeyParameter);
        }
    
        public virtual int proc_Web_frmGeneralLedger_DeleteIfTransactionAccountFalse(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmGeneralLedger_DeleteIfTransactionAccountFalse", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmGeneralLedger_DeleteIfTransactionAccountTrue(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmGeneralLedger_DeleteIfTransactionAccountTrue", generalLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmSubControlLedger_DeleteIfTransactionAccountFalse(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubControlLedger_DeleteIfTransactionAccountFalse", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmSubControlLedger_DeleteIfTransactionAccountTrue(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubControlLedger_DeleteIfTransactionAccountTrue", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmSubsidiaryLedger_DeleteFrom_Acc_ChartOfAccounts_IfTransactionAccountTrue(string nodeKey)
        {
            var nodeKeyParameter = nodeKey != null ?
                new ObjectParameter("NodeKey", nodeKey) :
                new ObjectParameter("NodeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubsidiaryLedger_DeleteFrom_Acc_ChartOfAccounts_IfTransactionAccountTrue", nodeKeyParameter);
        }
    
        public virtual int proc_Web_frmSubsidiaryLedger_DeleteIfTransactionAccountFalse(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubsidiaryLedger_DeleteIfTransactionAccountFalse", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmSubsidiaryLedger_DeleteIfTransactionAccountTrue(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubsidiaryLedger_DeleteIfTransactionAccountTrue", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmSubSubsidiaryLedger_Delete(string subSusidiaryLedgerCodeNo)
        {
            var subSusidiaryLedgerCodeNoParameter = subSusidiaryLedgerCodeNo != null ?
                new ObjectParameter("SubSusidiaryLedgerCodeNo", subSusidiaryLedgerCodeNo) :
                new ObjectParameter("SubSusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmSubSubsidiaryLedger_Delete", subSusidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_frmVoucherEntry_DeleteIVoucherEntry(string voucherEntryCodeNo)
        {
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_frmVoucherEntry_DeleteIVoucherEntry", voucherEntryCodeNoParameter);
        }
    
        public virtual int proc_Web_Select_ControlLedgerNameBySubControlLedgerCodeNo_3(string subControlLedgerCodeNo)
        {
            var subControlLedgerCodeNoParameter = subControlLedgerCodeNo != null ?
                new ObjectParameter("SubControlLedgerCodeNo", subControlLedgerCodeNo) :
                new ObjectParameter("SubControlLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Select_ControlLedgerNameBySubControlLedgerCodeNo_3", subControlLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_Select_GeneralLedgerNameBySubSusidiaryLedgerCodeNo_5(string susidiaryLedgerCodeNo)
        {
            var susidiaryLedgerCodeNoParameter = susidiaryLedgerCodeNo != null ?
                new ObjectParameter("SusidiaryLedgerCodeNo", susidiaryLedgerCodeNo) :
                new ObjectParameter("SusidiaryLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Select_GeneralLedgerNameBySubSusidiaryLedgerCodeNo_5", susidiaryLedgerCodeNoParameter);
        }
    
        public virtual int proc_Web_Select_SubControlLedgerNameByGeneralLedgerCodeNo_4(string generalLedgerCodeNo)
        {
            var generalLedgerCodeNoParameter = generalLedgerCodeNo != null ?
                new ObjectParameter("GeneralLedgerCodeNo", generalLedgerCodeNo) :
                new ObjectParameter("GeneralLedgerCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Web_Select_SubControlLedgerNameByGeneralLedgerCodeNo_4", generalLedgerCodeNoParameter);
        }
    
        public virtual int ProductTransferLoadData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductTransferLoadData");
        }
    
        public virtual int ProductTransferReport(string productTransferID, string companyCode, string branchCode, string divisionCode, string itemID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userEmployeeID)
        {
            var productTransferIDParameter = productTransferID != null ?
                new ObjectParameter("ProductTransferID", productTransferID) :
                new ObjectParameter("ProductTransferID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var userEmployeeIDParameter = userEmployeeID != null ?
                new ObjectParameter("UserEmployeeID", userEmployeeID) :
                new ObjectParameter("UserEmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductTransferReport", productTransferIDParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, itemIDParameter, dateUseParameter, fromDateParameter, toDateParameter, userEmployeeIDParameter);
        }
    
        public virtual int PurchaseOrderListReportData(string bookingOrderNo, string purchaseBy, string isDirrectPurchase, string dateUse, string fromDate, string toDate)
        {
            var bookingOrderNoParameter = bookingOrderNo != null ?
                new ObjectParameter("BookingOrderNo", bookingOrderNo) :
                new ObjectParameter("BookingOrderNo", typeof(string));
    
            var purchaseByParameter = purchaseBy != null ?
                new ObjectParameter("PurchaseBy", purchaseBy) :
                new ObjectParameter("PurchaseBy", typeof(string));
    
            var isDirrectPurchaseParameter = isDirrectPurchase != null ?
                new ObjectParameter("IsDirrectPurchase", isDirrectPurchase) :
                new ObjectParameter("IsDirrectPurchase", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrderListReportData", bookingOrderNoParameter, purchaseByParameter, isDirrectPurchaseParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int PurchaseOrderReceiveListReportData(string purchaseReceiveNo, string receiveBy, string invoiceNo, string pINo, string dateUse, string fromDate, string toDate)
        {
            var purchaseReceiveNoParameter = purchaseReceiveNo != null ?
                new ObjectParameter("PurchaseReceiveNo", purchaseReceiveNo) :
                new ObjectParameter("PurchaseReceiveNo", typeof(string));
    
            var receiveByParameter = receiveBy != null ?
                new ObjectParameter("ReceiveBy", receiveBy) :
                new ObjectParameter("ReceiveBy", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var pINoParameter = pINo != null ?
                new ObjectParameter("PINo", pINo) :
                new ObjectParameter("PINo", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrderReceiveListReportData", purchaseReceiveNoParameter, receiveByParameter, invoiceNoParameter, pINoParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int PurchaseOrderReceiveReportData(string purchaseReceiveNo)
        {
            var purchaseReceiveNoParameter = purchaseReceiveNo != null ?
                new ObjectParameter("PurchaseReceiveNo", purchaseReceiveNo) :
                new ObjectParameter("PurchaseReceiveNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrderReceiveReportData", purchaseReceiveNoParameter);
        }
    
        public virtual int PurchaseOrderReportData(string bookingOrderNo)
        {
            var bookingOrderNoParameter = bookingOrderNo != null ?
                new ObjectParameter("BookingOrderNo", bookingOrderNo) :
                new ObjectParameter("BookingOrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrderReportData", bookingOrderNoParameter);
        }
    
        public virtual int RequisitionListReportData(string requisitionNo, string departmentCode, string reqType, string dateUse, string fromDate, string toDate)
        {
            var requisitionNoParameter = requisitionNo != null ?
                new ObjectParameter("RequisitionNo", requisitionNo) :
                new ObjectParameter("RequisitionNo", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var reqTypeParameter = reqType != null ?
                new ObjectParameter("ReqType", reqType) :
                new ObjectParameter("ReqType", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RequisitionListReportData", requisitionNoParameter, departmentCodeParameter, reqTypeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int RequisitionReportData(string purchaseTypeID, string pRNo, string companyCode, string branchCode, string divisionCode, string dateUse, string fromDate, string toDate)
        {
            var purchaseTypeIDParameter = purchaseTypeID != null ?
                new ObjectParameter("PurchaseTypeID", purchaseTypeID) :
                new ObjectParameter("PurchaseTypeID", typeof(string));
    
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RequisitionReportData", purchaseTypeIDParameter, pRNoParameter, companyCodeParameter, branchCodeParameter, divisionCodeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int RequisitionTermsCondition(string pRNo)
        {
            var pRNoParameter = pRNo != null ?
                new ObjectParameter("PRNo", pRNo) :
                new ObjectParameter("PRNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RequisitionTermsCondition", pRNoParameter);
        }
    
        public virtual ObjectResult<Rpt_Attd_EmployeeDailtyMovementInfo_Result> Rpt_Attd_EmployeeDailtyMovementInfo(string eDMNo)
        {
            var eDMNoParameter = eDMNo != null ?
                new ObjectParameter("EDMNo", eDMNo) :
                new ObjectParameter("EDMNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Attd_EmployeeDailtyMovementInfo_Result>("Rpt_Attd_EmployeeDailtyMovementInfo", eDMNoParameter);
        }
    
        public virtual ObjectResult<Rpt_Attd_EmployeeMonthlyMovementPlaningInfo_Result> Rpt_Attd_EmployeeMonthlyMovementPlaningInfo(string mMPID)
        {
            var mMPIDParameter = mMPID != null ?
                new ObjectParameter("MMPID", mMPID) :
                new ObjectParameter("MMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Attd_EmployeeMonthlyMovementPlaningInfo_Result>("Rpt_Attd_EmployeeMonthlyMovementPlaningInfo", mMPIDParameter);
        }
    
        public virtual int Rpt_CompanyInformationReport(string companyCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_CompanyInformationReport", companyCodeParameter);
        }
    
        public virtual int Rpt_CustomerListReport(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_CustomerListReport", customerIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendenceAbsentSummery2_Result> Rpt_DailyAttendenceAbsentSummery2(Nullable<System.DateTime> attendenceDate, string departmentCode, string loginEmpoyeeID)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var loginEmpoyeeIDParameter = loginEmpoyeeID != null ?
                new ObjectParameter("LoginEmpoyeeID", loginEmpoyeeID) :
                new ObjectParameter("LoginEmpoyeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendenceAbsentSummery2_Result>("Rpt_DailyAttendenceAbsentSummery2", attendenceDateParameter, departmentCodeParameter, loginEmpoyeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendenceAllSummery2_Result> Rpt_DailyAttendenceAllSummery2(Nullable<System.DateTime> attendenceDate, string departmentCode, string loginEmpoyeeID)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var loginEmpoyeeIDParameter = loginEmpoyeeID != null ?
                new ObjectParameter("LoginEmpoyeeID", loginEmpoyeeID) :
                new ObjectParameter("LoginEmpoyeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendenceAllSummery2_Result>("Rpt_DailyAttendenceAllSummery2", attendenceDateParameter, departmentCodeParameter, loginEmpoyeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendenceDashboardSummery_Result> Rpt_DailyAttendenceDashboardSummery(Nullable<System.DateTime> attendenceDate, string departmentCode, string loginEmpoyeeID)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var loginEmpoyeeIDParameter = loginEmpoyeeID != null ?
                new ObjectParameter("LoginEmpoyeeID", loginEmpoyeeID) :
                new ObjectParameter("LoginEmpoyeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendenceDashboardSummery_Result>("Rpt_DailyAttendenceDashboardSummery", attendenceDateParameter, departmentCodeParameter, loginEmpoyeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendenceLateSummery2_Result> Rpt_DailyAttendenceLateSummery2(Nullable<System.DateTime> attendenceDate, string departmentCode, string loginEmpoyeeID)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var loginEmpoyeeIDParameter = loginEmpoyeeID != null ?
                new ObjectParameter("LoginEmpoyeeID", loginEmpoyeeID) :
                new ObjectParameter("LoginEmpoyeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendenceLateSummery2_Result>("Rpt_DailyAttendenceLateSummery2", attendenceDateParameter, departmentCodeParameter, loginEmpoyeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendencePrententSummery_Result> Rpt_DailyAttendencePrententSummery(Nullable<System.DateTime> attendenceDate, string departmentCode)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendencePrententSummery_Result>("Rpt_DailyAttendencePrententSummery", attendenceDateParameter, departmentCodeParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendencePrententSummery2_Result> Rpt_DailyAttendencePrententSummery2(Nullable<System.DateTime> attendenceDate, string departmentCode, string loginEmpoyeeID)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var loginEmpoyeeIDParameter = loginEmpoyeeID != null ?
                new ObjectParameter("LoginEmpoyeeID", loginEmpoyeeID) :
                new ObjectParameter("LoginEmpoyeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendencePrententSummery2_Result>("Rpt_DailyAttendencePrententSummery2", attendenceDateParameter, departmentCodeParameter, loginEmpoyeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_DailyAttendenceSummery_Result> Rpt_DailyAttendenceSummery(Nullable<System.DateTime> attendenceDate, string empStatus, string departmentCode)
        {
            var attendenceDateParameter = attendenceDate.HasValue ?
                new ObjectParameter("AttendenceDate", attendenceDate) :
                new ObjectParameter("AttendenceDate", typeof(System.DateTime));
    
            var empStatusParameter = empStatus != null ?
                new ObjectParameter("EmpStatus", empStatus) :
                new ObjectParameter("EmpStatus", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_DailyAttendenceSummery_Result>("Rpt_DailyAttendenceSummery", attendenceDateParameter, empStatusParameter, departmentCodeParameter);
        }
    
        public virtual ObjectResult<Rpt_Prc_EmployeeMovement_Result> Rpt_Prc_EmployeeMovement(string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Prc_EmployeeMovement_Result>("Rpt_Prc_EmployeeMovement", employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AllAttdData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AllAttdData", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AllAttdData_JC(string employeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AllAttdData_JC", employeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AllAttdData_Monthly(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AllAttdData_Monthly", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_Proc_Attd_EDMSubExistingCustomerInfo(string eDMNo)
        {
            var eDMNoParameter = eDMNo != null ?
                new ObjectParameter("EDMNo", eDMNo) :
                new ObjectParameter("EDMNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_Attd_EDMSubExistingCustomerInfo", eDMNoParameter);
        }
    
        public virtual int Rpt_Proc_Attd_EDMSubOtherCustomerInfo(string eDMNo)
        {
            var eDMNoParameter = eDMNo != null ?
                new ObjectParameter("EDMNo", eDMNo) :
                new ObjectParameter("EDMNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_Attd_EDMSubOtherCustomerInfo", eDMNoParameter);
        }
    
        public virtual int Rpt_Proc_Attd_MMPSubExistingCustomerInfo(string mMPID)
        {
            var mMPIDParameter = mMPID != null ?
                new ObjectParameter("MMPID", mMPID) :
                new ObjectParameter("MMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_Attd_MMPSubExistingCustomerInfo", mMPIDParameter);
        }
    
        public virtual ObjectResult<Rpt_Proc_Attd_MMPSubOtherCustomerInfo_Result> Rpt_Proc_Attd_MMPSubOtherCustomerInfo(string mMPID)
        {
            var mMPIDParameter = mMPID != null ?
                new ObjectParameter("MMPID", mMPID) :
                new ObjectParameter("MMPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Proc_Attd_MMPSubOtherCustomerInfo_Result>("Rpt_Proc_Attd_MMPSubOtherCustomerInfo", mMPIDParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_AttendanceHistory_Result> Rpt_proc_AttendanceHistory(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_AttendanceHistory_Result>("Rpt_proc_AttendanceHistory", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AttendanceInfoDashboard(string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AttendanceInfoDashboard", departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AttendanceInfoDashboard_DAS(string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AttendanceInfoDashboard_DAS", departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AttendanceInfoDashboard_DAS_L1(string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID2)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeID2Parameter = employeeID2 != null ?
                new ObjectParameter("EmployeeID2", employeeID2) :
                new ObjectParameter("EmployeeID2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AttendanceInfoDashboard_DAS_L1", departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, employeeID2Parameter);
        }
    
        public virtual int Rpt_proc_AttendanceInfoDashboard_LI(string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AttendanceInfoDashboard_LI", departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AverageOfHours(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AverageOfHours", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_AverageOfHours_Dp_Se(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_AverageOfHours_Dp_Se", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BankReceiptVoucher(string voucherEntryCodeNo)
        {
            var voucherEntryCodeNoParameter = voucherEntryCodeNo != null ?
                new ObjectParameter("VoucherEntryCodeNo", voucherEntryCodeNo) :
                new ObjectParameter("VoucherEntryCodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BankReceiptVoucher", voucherEntryCodeNoParameter);
        }
    
        public virtual int Rpt_proc_BothMachineAndManualData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BothMachineAndManualData", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalCapital(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalCapital", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalCurrentAsset(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalCurrentAsset", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalCurrentLiablities(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalCurrentLiablities", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalDeprication(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalDeprication", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalFixedAsset(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalFixedAsset", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_BSTotalLongLiablities(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_BSTotalLongLiablities", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_CashFlowOpeningBalance(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CashFlowOpeningBalance", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter);
        }
    
        public virtual int Rpt_proc_CashFlowStatmentFinancialActivities(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CashFlowStatmentFinancialActivities", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_CashFlowStatmentInvestmentActivities(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CashFlowStatmentInvestmentActivities", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_CashFlowStatmentOperatingActivities(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CashFlowStatmentOperatingActivities", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, startDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_CD_HRM_Attd_JobCard_WeeklyHoliday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CD_HRM_Attd_JobCard_WeeklyHoliday");
        }
    
        public virtual int Rpt_proc_CD_HRM_Pay_Temp_SSInitialData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CD_HRM_Pay_Temp_SSInitialData");
        }
    
        public virtual int Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_8()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_8");
        }
    
        public virtual int Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_Ex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_Ex");
        }
    
        public virtual int Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_Out()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CD_HRM_Pay_Temp_SSInitialData_Out");
        }
    
        public virtual int Rpt_proc_CombineMachineAndManualData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_CombineMachineAndManualData", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_Proc_CustomerBillWiseCollectionReport(string main_CompanyCode, string branchCode, string divisionCode, string customerID, string invoiceNo, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_CustomerBillWiseCollectionReport", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, customerIDParameter, invoiceNoParameter, dateUseParameter, fromDateParameter, todateParameter);
        }
    
        public virtual int Rpt_Proc_CustomerInvoiceSalesLedgerDetails(string main_CompanyCode, string branchCode, string divisionCode, string customerID)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_CustomerInvoiceSalesLedgerDetails", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, customerIDParameter);
        }
    
        public virtual int Rpt_Proc_CustomerInvoiceSalesLedgerDetailsDateTime(string main_CompanyCode, string branchCode, string divisionCode, string customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Proc_CustomerInvoiceSalesLedgerDetailsDateTime", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, customerIDParameter, fromDateParameter, todateParameter);
        }
    
        public virtual int Rpt_proc_DailyAbsentReport(string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DailyAbsentReport", departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_DailyArrivalReport_1L_Result> Rpt_proc_DailyArrivalReport_1L(string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_DailyArrivalReport_1L_Result>("Rpt_proc_DailyArrivalReport_1L", companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_DailyArrivalStatementReport(string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DailyArrivalStatementReport", departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter, employeeIDParameter);
        }
    
        public virtual int Rpt_proc_DailyAttdAbsentData(string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DailyAttdAbsentData", departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_DailyAttendanceSummaryReport_Email(string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DailyAttendanceSummaryReport_Email", companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_DailyInOutReport_1_Result> Rpt_proc_DailyInOutReport_1(string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeId)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_DailyInOutReport_1_Result>("Rpt_proc_DailyInOutReport_1", departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter, employeeIdParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_DailyLateReport_1_Result> Rpt_proc_DailyLateReport_1(string attdDataType, string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID)
        {
            var attdDataTypeParameter = attdDataType != null ?
                new ObjectParameter("AttdDataType", attdDataType) :
                new ObjectParameter("AttdDataType", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_DailyLateReport_1_Result>("Rpt_proc_DailyLateReport_1", attdDataTypeParameter, departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter, employeeIDParameter);
        }
    
        public virtual int Rpt_proc_DailyLateReport_1st(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DailyLateReport_1st", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_DailyPresentReport_1_Result> Rpt_proc_DailyPresentReport_1(string attdDataType, string departmentCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID)
        {
            var attdDataTypeParameter = attdDataType != null ?
                new ObjectParameter("AttdDataType", attdDataType) :
                new ObjectParameter("AttdDataType", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_DailyPresentReport_1_Result>("Rpt_proc_DailyPresentReport_1", attdDataTypeParameter, departmentCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter, employeeIDParameter);
        }
    
        public virtual int Rpt_proc_DashboardAttendanceInfoDashboard_Admin(string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string employeeID2)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var employeeID2Parameter = employeeID2 != null ?
                new ObjectParameter("EmployeeID2", employeeID2) :
                new ObjectParameter("EmployeeID2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DashboardAttendanceInfoDashboard_Admin", departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter, employeeID2Parameter);
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp_DP_Se()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp_DP_Se");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation_ByEmp2");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation_Monthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation_Monthly");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation2");
        }
    
        public virtual int Rpt_proc_DC_HRM_Attd_TimeCalculation2_Dp_Se()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_DC_HRM_Attd_TimeCalculation2_Dp_Se");
        }
    
        public virtual ObjectResult<Rpt_proc_GetStartAndEndDatesBetweenTwoDates_Result> Rpt_proc_GetStartAndEndDatesBetweenTwoDates(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_GetStartAndEndDatesBetweenTwoDates_Result>("Rpt_proc_GetStartAndEndDatesBetweenTwoDates", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_HRM_Attd_Temp_JCInitialData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_HRM_Attd_Temp_JCInitialData");
        }
    
        public virtual ObjectResult<Rpt_proc_IncrementList_Result> Rpt_proc_IncrementList(string year, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse, string departmentCode, string sectionCode, string lineCode, string designationCode)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var designationCodeParameter = designationCode != null ?
                new ObjectParameter("DesignationCode", designationCode) :
                new ObjectParameter("DesignationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_IncrementList_Result>("Rpt_proc_IncrementList", yearParameter, fromDateParameter, toDateParameter, dateUseParameter, departmentCodeParameter, sectionCodeParameter, lineCodeParameter, designationCodeParameter);
        }
    
        public virtual ObjectResult<Rpt_Proc_IncrementPossibleList_ForBulkEntry_Result> Rpt_Proc_IncrementPossibleList_ForBulkEntry(string companyCode, string departmentCode, string sectionCode, string lineCode, string empTypeCode, Nullable<System.DateTime> toDate, string s_NoOfMonth)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var lineCodeParameter = lineCode != null ?
                new ObjectParameter("LineCode", lineCode) :
                new ObjectParameter("LineCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var s_NoOfMonthParameter = s_NoOfMonth != null ?
                new ObjectParameter("S_NoOfMonth", s_NoOfMonth) :
                new ObjectParameter("S_NoOfMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_Proc_IncrementPossibleList_ForBulkEntry_Result>("Rpt_Proc_IncrementPossibleList_ForBulkEntry", companyCodeParameter, departmentCodeParameter, sectionCodeParameter, lineCodeParameter, empTypeCodeParameter, toDateParameter, s_NoOfMonthParameter);
        }
    
        public virtual int Rpt_proc_JobCard_DP(string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_JobCard_DP", employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_JobCardReport_1st(string employeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_JobCardReport_1st", employeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_JobCardReport_ForActSh2_Result> Rpt_proc_JobCardReport_ForActSh2(string employeeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_JobCardReport_ForActSh2_Result>("Rpt_proc_JobCardReport_ForActSh2", employeeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_LeaveSummary_Result> Rpt_proc_LeaveSummary(string companyCode, string departmentCode, string employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_LeaveSummary_Result>("Rpt_proc_LeaveSummary", companyCodeParameter, departmentCodeParameter, employeeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_LedgerReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string accCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_LedgerReport", fromDateParameter, toDateParameter, accCodeParameter);
        }
    
        public virtual int Rpt_proc_LedgerReport2(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string accCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_LedgerReport2", fromDateParameter, toDateParameter, accCodeParameter);
        }
    
        public virtual int Rpt_proc_LedgerReport3(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string accCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_LedgerReport3", fromDateParameter, toDateParameter, accCodeParameter);
        }
    
        public virtual int Rpt_proc_LedgerReport4(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string accCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_LedgerReport4", fromDateParameter, toDateParameter, accCodeParameter);
        }
    
        public virtual int Rpt_proc_LedgerReport5(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string accCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var accCodeParameter = accCode != null ?
                new ObjectParameter("AccCode", accCode) :
                new ObjectParameter("AccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_LedgerReport5", fromDateParameter, toDateParameter, accCodeParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_MonthlyReport_NG_Result> Rpt_proc_MonthlyReport_NG(string departmentCode, string sectionCode, string monthName, Nullable<int> yearName, string employeeId)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_MonthlyReport_NG_Result>("Rpt_proc_MonthlyReport_NG", departmentCodeParameter, sectionCodeParameter, monthNameParameter, yearNameParameter, employeeIdParameter);
        }
    
        public virtual int Rpt_proc_MonthlySalaryInfoData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string isSalApp, Nullable<System.DateTime> salAppDate, string processType, Nullable<System.DateTime> processDate, string details, string processId, string approvalId, string lUser, Nullable<System.DateTime> lDate, string lIP, string lMAC, Nullable<System.DateTime> modifyDate, string companyCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var isSalAppParameter = isSalApp != null ?
                new ObjectParameter("IsSalApp", isSalApp) :
                new ObjectParameter("IsSalApp", typeof(string));
    
            var salAppDateParameter = salAppDate.HasValue ?
                new ObjectParameter("SalAppDate", salAppDate) :
                new ObjectParameter("SalAppDate", typeof(System.DateTime));
    
            var processTypeParameter = processType != null ?
                new ObjectParameter("ProcessType", processType) :
                new ObjectParameter("ProcessType", typeof(string));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var processIdParameter = processId != null ?
                new ObjectParameter("ProcessId", processId) :
                new ObjectParameter("ProcessId", typeof(string));
    
            var approvalIdParameter = approvalId != null ?
                new ObjectParameter("ApprovalId", approvalId) :
                new ObjectParameter("ApprovalId", typeof(string));
    
            var lUserParameter = lUser != null ?
                new ObjectParameter("LUser", lUser) :
                new ObjectParameter("LUser", typeof(string));
    
            var lDateParameter = lDate.HasValue ?
                new ObjectParameter("LDate", lDate) :
                new ObjectParameter("LDate", typeof(System.DateTime));
    
            var lIPParameter = lIP != null ?
                new ObjectParameter("LIP", lIP) :
                new ObjectParameter("LIP", typeof(string));
    
            var lMACParameter = lMAC != null ?
                new ObjectParameter("LMAC", lMAC) :
                new ObjectParameter("LMAC", typeof(string));
    
            var modifyDateParameter = modifyDate.HasValue ?
                new ObjectParameter("ModifyDate", modifyDate) :
                new ObjectParameter("ModifyDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_MonthlySalaryInfoData", fromDateParameter, toDateParameter, isSalAppParameter, salAppDateParameter, processTypeParameter, processDateParameter, detailsParameter, processIdParameter, approvalIdParameter, lUserParameter, lDateParameter, lIPParameter, lMACParameter, modifyDateParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_OvertimeSheet_Result> Rpt_proc_OvertimeSheet(string monthName, Nullable<int> yearName)
        {
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_OvertimeSheet_Result>("Rpt_proc_OvertimeSheet", monthNameParameter, yearNameParameter);
        }
    
        public virtual int Rpt_proc_PLTotalDirectExpense(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_PLTotalDirectExpense", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_PLTotalIndirectionExepense(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_PLTotalIndirectionExepense", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_PLTotalNonOpeartingIncome(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_PLTotalNonOpeartingIncome", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_PLTotalSales(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_PLTotalSales", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_PLTotalSalespdf(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_PLTotalSalespdf", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_RepAndIncListByEmpIdReport(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_RepAndIncListByEmpIdReport", employeeIDParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_RepositionListReport_Result> Rpt_proc_RepositionListReport(string year, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string dateUse)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_RepositionListReport_Result>("Rpt_proc_RepositionListReport", yearParameter, fromDateParameter, toDateParameter, dateUseParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_SalarySheet_NG_Result> Rpt_proc_SalarySheet_NG(string departmentCode, string sectionCode, string monthName, Nullable<int> yearName)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_SalarySheet_NG_Result>("Rpt_proc_SalarySheet_NG", departmentCodeParameter, sectionCodeParameter, monthNameParameter, yearNameParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_SalarySheet_SSR_Result> Rpt_proc_SalarySheet_SSR(Nullable<int> noOfM, string monthName, Nullable<int> yearName)
        {
            var noOfMParameter = noOfM.HasValue ?
                new ObjectParameter("NoOfM", noOfM) :
                new ObjectParameter("NoOfM", typeof(int));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_SalarySheet_SSR_Result>("Rpt_proc_SalarySheet_SSR", noOfMParameter, monthNameParameter, yearNameParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_SalarySheet_SSR_Sh2_Result> Rpt_proc_SalarySheet_SSR_Sh2(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> noOfM, string monthName, Nullable<int> yearName)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var noOfMParameter = noOfM.HasValue ?
                new ObjectParameter("NoOfM", noOfM) :
                new ObjectParameter("NoOfM", typeof(int));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var yearNameParameter = yearName.HasValue ?
                new ObjectParameter("YearName", yearName) :
                new ObjectParameter("YearName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_SalarySheet_SSR_Sh2_Result>("Rpt_proc_SalarySheet_SSR_Sh2", fromDateParameter, toDateParameter, noOfMParameter, monthNameParameter, yearNameParameter);
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_2(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_2", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_3");
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_3_Sh2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_3_Sh2");
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_4");
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_LM(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_LM", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_SalarySheetInitialData_New(Nullable<System.DateTime> sDate)
        {
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_SalarySheetInitialData_New", sDateParameter);
        }
    
        public virtual ObjectResult<Rpt_proc_SalarySummarySheet_NG_Result> Rpt_proc_SalarySummarySheet_NG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_proc_SalarySummarySheet_NG_Result>("Rpt_proc_SalarySummarySheet_NG");
        }
    
        public virtual int Rpt_proc_TimeBetweenInOutBYDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeBetweenInOutBYDate", dateParameter);
        }
    
        public virtual int Rpt_proc_TimeCalculationBetweenInOutTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBetweenInOutTime");
        }
    
        public virtual int Rpt_proc_TimeCalculationBYDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBYDate", dateParameter);
        }
    
        public virtual int Rpt_proc_TimeCalculationBYDate_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBYDate_2");
        }
    
        public virtual int Rpt_proc_TimeCalculationBYDate_2_Dp_Se()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBYDate_2_Dp_Se");
        }
    
        public virtual int Rpt_proc_TimeCalculationBYDate_FromManualData(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBYDate_FromManualData", dateParameter);
        }
    
        public virtual int Rpt_proc_TimeCalculationBYDate_Monthly(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TimeCalculationBYDate_Monthly", dateParameter);
        }
    
        public virtual int Rpt_proc_TrialBalanceReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TrialBalanceReport", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_TrialBalanceReport_1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TrialBalanceReport_1", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_TrialBalanceReport_2(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TrialBalanceReport_2", fromDateParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_TrialBalanceReportF(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TrialBalanceReportF", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, toDateParameter);
        }
    
        public virtual int Rpt_proc_TrialBalanceReportF2(string main_CompanyCode, string branchCode, string divisionCode, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_proc_TrialBalanceReportF2", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, toDateParameter);
        }
    
        public virtual int Rpt_Select_Acc_SubControlLedger()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Select_Acc_SubControlLedger");
        }
    
        public virtual int Rpt_Select_ChartOfAccountReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Select_ChartOfAccountReport");
        }
    
        public virtual int Rpt_Select_ChartOfAccountReport_Test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Select_ChartOfAccountReport_Test");
        }
    
        public virtual int Rpt_Select_ChartOfAccountReport_TreeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_Select_ChartOfAccountReport_TreeView");
        }
    
        public virtual int Rpt_SupplierListReport(string supplierID)
        {
            var supplierIDParameter = supplierID != null ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_SupplierListReport", supplierIDParameter);
        }
    
        public virtual int RptDailyAbsentReport(string departmentCode, string empTypeCode, string shiftCode, string companyCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var empTypeCodeParameter = empTypeCode != null ?
                new ObjectParameter("EmpTypeCode", empTypeCode) :
                new ObjectParameter("EmpTypeCode", typeof(string));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("ShiftCode", shiftCode) :
                new ObjectParameter("ShiftCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptDailyAbsentReport", departmentCodeParameter, empTypeCodeParameter, shiftCodeParameter, companyCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SalesPersonSummary(string main_CompanyCode, string branchCode, string divisionCode, string employeeID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SalesPersonSummary", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, employeeIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SalesSummary(string main_CompanyCode, string branchCode, string divisionCode, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var main_CompanyCodeParameter = main_CompanyCode != null ?
                new ObjectParameter("Main_CompanyCode", main_CompanyCode) :
                new ObjectParameter("Main_CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SalesSummary", main_CompanyCodeParameter, branchCodeParameter, divisionCodeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int Select_HRM_Employee(string companyCode, string employeeID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Select_HRM_Employee", companyCodeParameter, employeeIDParameter);
        }
    
        public virtual int Select_HRM_Employee_IUL(string employeeID, string companyCode)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Select_HRM_Employee_IUL", employeeIDParameter, companyCodeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spGetEmployeeDetails_Result> spGetEmployeeDetails(string empID)
        {
            var empIDParameter = empID != null ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEmployeeDetails_Result>("spGetEmployeeDetails", empIDParameter);
        }
    
        public virtual int SPRequisitionListReportData(string sPRequisitionNo, string departmentCode, string reqType, string dateUse, string fromDate, string toDate)
        {
            var sPRequisitionNoParameter = sPRequisitionNo != null ?
                new ObjectParameter("SPRequisitionNo", sPRequisitionNo) :
                new ObjectParameter("SPRequisitionNo", typeof(string));
    
            var departmentCodeParameter = departmentCode != null ?
                new ObjectParameter("DepartmentCode", departmentCode) :
                new ObjectParameter("DepartmentCode", typeof(string));
    
            var reqTypeParameter = reqType != null ?
                new ObjectParameter("ReqType", reqType) :
                new ObjectParameter("ReqType", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPRequisitionListReportData", sPRequisitionNoParameter, departmentCodeParameter, reqTypeParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SPRequisitionReportData(string sPRequisitionNo)
        {
            var sPRequisitionNoParameter = sPRequisitionNo != null ?
                new ObjectParameter("SPRequisitionNo", sPRequisitionNo) :
                new ObjectParameter("SPRequisitionNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPRequisitionReportData", sPRequisitionNoParameter);
        }
    
        public virtual int StockBalancePosition(string companyCode, string branchCode, string divisionCode, string pILOT, string mainItemID, string subItemID, string itemID)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var pILOTParameter = pILOT != null ?
                new ObjectParameter("PILOT", pILOT) :
                new ObjectParameter("PILOT", typeof(string));
    
            var mainItemIDParameter = mainItemID != null ?
                new ObjectParameter("MainItemID", mainItemID) :
                new ObjectParameter("MainItemID", typeof(string));
    
            var subItemIDParameter = subItemID != null ?
                new ObjectParameter("SubItemID", subItemID) :
                new ObjectParameter("SubItemID", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StockBalancePosition", companyCodeParameter, branchCodeParameter, divisionCodeParameter, pILOTParameter, mainItemIDParameter, subItemIDParameter, itemIDParameter);
        }
    
        public virtual int StockSummeryReport1(string companyCode, string branchCode, string divisionCode, string mainItemID, string subItemID, string itemID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var mainItemIDParameter = mainItemID != null ?
                new ObjectParameter("MainItemID", mainItemID) :
                new ObjectParameter("MainItemID", typeof(string));
    
            var subItemIDParameter = subItemID != null ?
                new ObjectParameter("SubItemID", subItemID) :
                new ObjectParameter("SubItemID", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StockSummeryReport1", companyCodeParameter, branchCodeParameter, divisionCodeParameter, mainItemIDParameter, subItemIDParameter, itemIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int StockSummeryReport2(string companyCode, string branchCode, string divisionCode, string itemID, string dateUse, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var divisionCodeParameter = divisionCode != null ?
                new ObjectParameter("DivisionCode", divisionCode) :
                new ObjectParameter("DivisionCode", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var dateUseParameter = dateUse != null ?
                new ObjectParameter("DateUse", dateUse) :
                new ObjectParameter("DateUse", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StockSummeryReport2", companyCodeParameter, branchCodeParameter, divisionCodeParameter, itemIDParameter, dateUseParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int WarehouseReport(string warehouseID)
        {
            var warehouseIDParameter = warehouseID != null ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WarehouseReport", warehouseIDParameter);
        }
    }
}
