@model BusinessLogic.Repository.Model_HRM_LeaveApplicationEntry
 
   <div >
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Application Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @*<div class="modal-body">
                <table class="tablemodel">

                    <tr>
                    <tr>
                        Notes:
                    </tr>
                    <tr>
                        @Html.DisplayFor(Model => Model.EmployeeID)
                    </tr>

                </table>
            </div>*@
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-6">
                    <label for="inputName">Employee</label>
                    @Html.TextBoxFor(model => model.EmployeeID, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-lg-6">
                    <label for="inputName">Name</label>
                    @Html.TextBoxFor(model => model.EmployeeName, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <label for="inputName">Department</label>
                    @Html.TextBoxFor(model => model.DepartmentCode, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-lg-6">
                    <label for="inputName">Designation</label>
                    @Html.TextBoxFor(model => model.DesignationCode, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <label for="inputName">Immediate Supervisor</label>
                    @Html.TextBoxFor(model => model.BossEmpAutoId, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-lg-6">
                    <label for="inputName">Head of Department</label>
                    @Html.TextBoxFor(model => model.HOD, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <label for="inputName">Apply Leave Format</label>
                    @Html.TextBoxFor(model => model.ApplyLeaveFormat, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-lg-6">
                    <label for="inputName">Leave Type</label>
                    @Html.TextBoxFor(model => model.LeaveTypeId, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <label for="inputName">From</label>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.StartDate, new { @readonly = "readonly", @class = "form-control", @Id = "txtStartDate" })
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="far fa-calendar"></i></div>
                        </div>
                    </div>

                </div>
                <div class="col-lg-4 ">
                    <label for="inputName">Day(s)</label>
                    @Html.TextBoxFor(model => model.NoOfDay, new { @readonly = "readonly", @class = "form-control" })
                </div>
                <div class="col-lg-4">
                    <label for="inputName">To</label>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.EndDate, new { @readonly = "readonly", @class = "form-control", @Id = "txtStartDate" })
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="far fa-calendar"></i></div>
                        </div>
                    </div>

                </div>
            </div>

            @if (Model.ApplyLeaveFormat == "ShortLeave")
            {
                <div id="divleaveformat" class="row" style="">
                    <div class="col-lg-4">
                        <label for="inputName">From Time</label>
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ShortLeaveFrom, new {  @class = "form-control timepicker", @Id = "fromTime" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label for="inputName">Time(s)</label>
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ShortLeaveTime, new { @readonly = "readonly", @class = "form-control ", @Id = "totalTime" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label for="inputName">To</label>
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ShortLeaveTo, new { @class = "form-control timepicker", @Id = "toTime" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-lg-12">
                    <label for="inputName">Reason</label>
                    @Html.TextAreaFor(model => model.Reason, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>


        </div>
        <div class="modal-footer">
            @if (Model.HRApprovalStatus == "Approved")
            {
                <label class="badge badge-success" style="padding: 10px; font-size: 13px;margin-right:20px">@Model.HRApprovalStatus</label>
            }
            else
            {
                <label class="badge badge-danger" style="padding: 10px; font-size: 13px;margin-right:20px">@Model.HRApprovalStatus</label>
            }
            <div class='btn-group btn-group-sm text-center'><button class='linkbutton1 btn' type='button' id='approve' aria-label='Left Align' onclick=LeaveActionApprove('@Model.LeaveAppEntryId')><i style='color: #08ff00; font-size: 19px;' class='fa fa-check-circle'></i></button><button class='linkbutton1 btn' type='button' id='deny' aria-label='Left Align' onclick=LeaveActionCancel('@Model.LeaveAppEntryId')><i style='color: #ffd700; font-size: 19px;' class='fa fa-times-circle'></i></button></div>
        </div>
        </div>
    </div>
<script>

    $(document).ready(function () {


        $("#btnsubmit").click(function () {
            alert();
            $("#loaderDiv").show();

            var myformdata = $("#myForm").serialize();

            $.ajax({

                type: "POST",
                url: "/Test/Index",
                data: myformdata,
                success: function () {
                    $("#loaderDiv").hide();
                    $("#myModal").modal("hide");

                }

            })
        });        
    })


</script>